{
  "version": 3,
  "sources": ["../../mp4box/dist/mp4box.all.js"],
  "sourcesContent": ["// file:src/log.js\n/* \n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar Log = (function (){\n\t\tvar start = new Date();\n\t\tvar LOG_LEVEL_ERROR \t= 4;\n\t\tvar LOG_LEVEL_WARNING \t= 3;\n\t\tvar LOG_LEVEL_INFO \t\t= 2;\n\t\tvar LOG_LEVEL_DEBUG\t\t= 1;\n\t\tvar log_level = LOG_LEVEL_ERROR;\n\t\tvar logObject = {\n\t\t\tsetLogLevel : function(level) {\n\t\t\t\tif (level == this.debug) log_level = LOG_LEVEL_DEBUG;\n\t\t\t\telse if (level == this.info) log_level = LOG_LEVEL_INFO;\n\t\t\t\telse if (level == this.warn) log_level = LOG_LEVEL_WARNING;\n\t\t\t\telse if (level == this.error) log_level = LOG_LEVEL_ERROR;\n\t\t\t\telse log_level = LOG_LEVEL_ERROR;\n\t\t\t},\n\t\t\tdebug : function(module, msg) {\n\t\t\t\tif (console.debug === undefined) {\n\t\t\t\t\tconsole.debug = console.log;\n\t\t\t\t}\n\t\t\t\tif (LOG_LEVEL_DEBUG >= log_level) {\n\t\t\t\t\tconsole.debug(\"[\"+Log.getDurationString(new Date()-start,1000)+\"]\",\"[\"+module+\"]\",msg);\n\t\t\t\t}\n\t\t\t},\n\t\t\tlog : function(module, msg) {\n\t\t\t\tthis.debug(module.msg)\n\t\t\t},\n\t\t\tinfo : function(module, msg) {\n\t\t\t\tif (LOG_LEVEL_INFO >= log_level) {\n\t\t\t\t\tconsole.info(\"[\"+Log.getDurationString(new Date()-start,1000)+\"]\",\"[\"+module+\"]\",msg);\n\t\t\t\t}\n\t\t\t},\n\t\t\twarn : function(module, msg) {\n\t\t\t\tif (LOG_LEVEL_WARNING >= log_level) {\n\t\t\t\t\tconsole.warn(\"[\"+Log.getDurationString(new Date()-start,1000)+\"]\",\"[\"+module+\"]\",msg);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror : function(module, msg) {\n\t\t\t\tif (LOG_LEVEL_ERROR >= log_level) {\n\t\t\t\t\tconsole.error(\"[\"+Log.getDurationString(new Date()-start,1000)+\"]\",\"[\"+module+\"]\",msg);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn logObject;\n\t})();\n\t\n/* Helper function to print a duration value in the form H:MM:SS.MS */\nLog.getDurationString = function(duration, _timescale) {\n\tvar neg;\n\t/* Helper function to print a number on a fixed number of digits */\n\tfunction pad(number, length) {\n\t\tvar str = '' + number;\n\t\tvar a = str.split('.');\t\t\n\t\twhile (a[0].length < length) {\n\t\t\ta[0] = '0' + a[0];\n\t\t}\n\t\treturn a.join('.');\n\t}\n\tif (duration < 0) {\n\t\tneg = true;\n\t\tduration = -duration;\n\t} else {\n\t\tneg = false;\t\n\t}\n\tvar timescale = _timescale || 1;\n\tvar duration_sec = duration/timescale;\n\tvar hours = Math.floor(duration_sec/3600);\n\tduration_sec -= hours * 3600;\n\tvar minutes = Math.floor(duration_sec/60);\n\tduration_sec -= minutes * 60;\t\t\n\tvar msec = duration_sec*1000;\n\tduration_sec = Math.floor(duration_sec);\n\tmsec -= duration_sec*1000;\n\tmsec = Math.floor(msec);\n\treturn (neg ? \"-\": \"\")+hours+\":\"+pad(minutes,2)+\":\"+pad(duration_sec,2)+\".\"+pad(msec,3);\n}\n\t\n/* Helper function to stringify HTML5 TimeRanges objects */\t\nLog.printRanges = function(ranges) {\n\tvar length = ranges.length;\n\tif (length > 0) {\n\t\tvar str = \"\";\n\t\tfor (var i = 0; i < length; i++) {\n\t\t  if (i > 0) str += \",\";\n\t\t  str += \"[\"+Log.getDurationString(ranges.start(i))+ \",\"+Log.getDurationString(ranges.end(i))+\"]\";\n\t\t}\n\t\treturn str;\n\t} else {\n\t\treturn \"(empty)\";\n\t}\n}\n\nif (typeof exports !== 'undefined') {\n\texports.Log = Log;\n}\n// file:src/stream.js\nvar MP4BoxStream = function(arrayBuffer) {\n  if (arrayBuffer instanceof ArrayBuffer) {\n    this.buffer = arrayBuffer;\n    this.dataview = new DataView(arrayBuffer);\n  } else {\n    throw (\"Needs an array buffer\");\n  }\n  this.position = 0;\n};\n\n/*************************************************************************\n  Common API between MultiBufferStream and SimpleStream\n *************************************************************************/\nMP4BoxStream.prototype.getPosition = function() {\n  return this.position;\n}\n\nMP4BoxStream.prototype.getEndPosition = function() {\n  return this.buffer.byteLength;\n}\n\nMP4BoxStream.prototype.getLength = function() {\n  return this.buffer.byteLength;\n}\n\nMP4BoxStream.prototype.seek = function (pos) {\n  var npos = Math.max(0, Math.min(this.buffer.byteLength, pos));\n  this.position = (isNaN(npos) || !isFinite(npos)) ? 0 : npos;\n  return true;\n}\n\nMP4BoxStream.prototype.isEos = function () {\n  return this.getPosition() >= this.getEndPosition();\n}\n\n/*************************************************************************\n  Read methods, simimar to DataStream but simpler\n *************************************************************************/\nMP4BoxStream.prototype.readAnyInt = function(size, signed) {\n  var res = 0;\n  if (this.position + size <= this.buffer.byteLength) {\n    switch (size) {\n      case 1:\n        if (signed) {\n          res = this.dataview.getInt8(this.position);\n        } else {\n          res = this.dataview.getUint8(this.position);\n        }\n        break;\n      case 2:\n        if (signed) {\n          res = this.dataview.getInt16(this.position);\n        } else {\n          res = this.dataview.getUint16(this.position);\n        }\n        break;\n      case 3:\n        if (signed) {\n          throw (\"No method for reading signed 24 bits values\");\n        } else {\n          res = this.dataview.getUint8(this.position) << 16;\n          res |= this.dataview.getUint8(this.position+1) << 8;\n          res |= this.dataview.getUint8(this.position+2);\n        }\n        break;\n      case 4:\n        if (signed) {\n          res = this.dataview.getInt32(this.position);\n        } else {\n          res = this.dataview.getUint32(this.position);\n        }\n        break;\n      case 8:\n        if (signed) {\n          throw (\"No method for reading signed 64 bits values\");\n        } else {\n          res = this.dataview.getUint32(this.position) << 32;\n          res |= this.dataview.getUint32(this.position+4);\n        }\n        break;\n      default:\n        throw (\"readInt method not implemented for size: \"+size);\n    }\n    this.position+= size;\n    return res;\n  } else {\n    throw (\"Not enough bytes in buffer\");\n  }\n}\n\nMP4BoxStream.prototype.readUint8 = function() {\n  return this.readAnyInt(1, false);\n}\n\nMP4BoxStream.prototype.readUint16 = function() {\n  return this.readAnyInt(2, false);\n}\n\nMP4BoxStream.prototype.readUint24 = function() {\n  return this.readAnyInt(3, false);\n}\n\nMP4BoxStream.prototype.readUint32 = function() {\n  return this.readAnyInt(4, false);\n}\n\nMP4BoxStream.prototype.readUint64 = function() {\n  return this.readAnyInt(8, false);\n}\n\nMP4BoxStream.prototype.readString = function(length) {\n  if (this.position + length <= this.buffer.byteLength) {\n    var s = \"\";\n    for (var i = 0; i < length; i++) {\n      s += String.fromCharCode(this.readUint8());\n    }\n    return s;\n  } else {\n    throw (\"Not enough bytes in buffer\");\n  }\n}\n\nMP4BoxStream.prototype.readCString = function() {\n  var arr = [];\n  while(true) {\n    var b = this.readUint8();\n    if (b !== 0) {\n      arr.push(b);\n    } else {\n      break;\n    }\n  }\n  return String.fromCharCode.apply(null, arr); \n}\n\nMP4BoxStream.prototype.readInt8 = function() {\n  return this.readAnyInt(1, true);\n}\n\nMP4BoxStream.prototype.readInt16 = function() {\n  return this.readAnyInt(2, true);\n}\n\nMP4BoxStream.prototype.readInt32 = function() {\n  return this.readAnyInt(4, true);\n}\n\nMP4BoxStream.prototype.readInt64 = function() {\n  return this.readAnyInt(8, false);\n}\n\nMP4BoxStream.prototype.readUint8Array = function(length) {\n  var arr = new Uint8Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readUint8();\n  }\n  return arr;\n}\n\nMP4BoxStream.prototype.readInt16Array = function(length) {\n  var arr = new Int16Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readInt16();\n  }\n  return arr;\n}\n\nMP4BoxStream.prototype.readUint16Array = function(length) {\n  var arr = new Int16Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readUint16();\n  }\n  return arr;\n}\n\nMP4BoxStream.prototype.readUint32Array = function(length) {\n  var arr = new Uint32Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readUint32();\n  }\n  return arr;\n}\n\nMP4BoxStream.prototype.readInt32Array = function(length) {\n  var arr = new Int32Array(length);\n  for (var i = 0; i < length; i++) {\n    arr[i] = this.readInt32();\n  }\n  return arr;\n}\n\nif (typeof exports !== 'undefined') {\n  exports.MP4BoxStream = MP4BoxStream;\n}// file:src/DataStream.js\n/**\n  DataStream reads scalars, arrays and structs of data from an ArrayBuffer.\n  It's like a file-like DataView on steroids.\n\n  @param {ArrayBuffer} arrayBuffer ArrayBuffer to read from.\n  @param {?Number} byteOffset Offset from arrayBuffer beginning for the DataStream.\n  @param {?Boolean} endianness DataStream.BIG_ENDIAN or DataStream.LITTLE_ENDIAN (the default).\n  */\nvar DataStream = function(arrayBuffer, byteOffset, endianness) {\n  this._byteOffset = byteOffset || 0;\n  if (arrayBuffer instanceof ArrayBuffer) {\n    this.buffer = arrayBuffer;\n  } else if (typeof arrayBuffer == \"object\") {\n    this.dataView = arrayBuffer;\n    if (byteOffset) {\n      this._byteOffset += byteOffset;\n    }\n  } else {\n    this.buffer = new ArrayBuffer(arrayBuffer || 0);\n  }\n  this.position = 0;\n  this.endianness = endianness == null ? DataStream.LITTLE_ENDIAN : endianness;\n};\nDataStream.prototype = {};\n\nDataStream.prototype.getPosition = function() {\n  return this.position;\n}\n\n/**\n  Internal function to resize the DataStream buffer when required.\n  @param {number} extra Number of bytes to add to the buffer allocation.\n  @return {null}\n  */\nDataStream.prototype._realloc = function(extra) {\n  if (!this._dynamicSize) {\n    return;\n  }\n  var req = this._byteOffset + this.position + extra;\n  var blen = this._buffer.byteLength;\n  if (req <= blen) {\n    if (req > this._byteLength) {\n      this._byteLength = req;\n    }\n    return;\n  }\n  if (blen < 1) {\n    blen = 1;\n  }\n  while (req > blen) {\n    blen *= 2;\n  }\n  var buf = new ArrayBuffer(blen);\n  var src = new Uint8Array(this._buffer);\n  var dst = new Uint8Array(buf, 0, src.length);\n  dst.set(src);\n  this.buffer = buf;\n  this._byteLength = req;\n};\n\n/**\n  Internal function to trim the DataStream buffer when required.\n  Used for stripping out the extra bytes from the backing buffer when\n  the virtual byteLength is smaller than the buffer byteLength (happens after\n  growing the buffer with writes and not filling the extra space completely).\n\n  @return {null}\n  */\nDataStream.prototype._trimAlloc = function() {\n  if (this._byteLength == this._buffer.byteLength) {\n    return;\n  }\n  var buf = new ArrayBuffer(this._byteLength);\n  var dst = new Uint8Array(buf);\n  var src = new Uint8Array(this._buffer, 0, dst.length);\n  dst.set(src);\n  this.buffer = buf;\n};\n\n\n/**\n  Big-endian const to use as default endianness.\n  @type {boolean}\n  */\nDataStream.BIG_ENDIAN = false;\n\n/**\n  Little-endian const to use as default endianness.\n  @type {boolean}\n  */\nDataStream.LITTLE_ENDIAN = true;\n\n/**\n  Virtual byte length of the DataStream backing buffer.\n  Updated to be max of original buffer size and last written size.\n  If dynamicSize is false is set to buffer size.\n  @type {number}\n  */\nDataStream.prototype._byteLength = 0;\n\n/**\n  Returns the byte length of the DataStream object.\n  @type {number}\n  */\nObject.defineProperty(DataStream.prototype, 'byteLength',\n  { get: function() {\n    return this._byteLength - this._byteOffset;\n  }});\n\n/**\n  Set/get the backing ArrayBuffer of the DataStream object.\n  The setter updates the DataView to point to the new buffer.\n  @type {Object}\n  */\nObject.defineProperty(DataStream.prototype, 'buffer',\n  { get: function() {\n      this._trimAlloc();\n      return this._buffer;\n    },\n    set: function(v) {\n      this._buffer = v;\n      this._dataView = new DataView(this._buffer, this._byteOffset);\n      this._byteLength = this._buffer.byteLength;\n    } });\n\n/**\n  Set/get the byteOffset of the DataStream object.\n  The setter updates the DataView to point to the new byteOffset.\n  @type {number}\n  */\nObject.defineProperty(DataStream.prototype, 'byteOffset',\n  { get: function() {\n      return this._byteOffset;\n    },\n    set: function(v) {\n      this._byteOffset = v;\n      this._dataView = new DataView(this._buffer, this._byteOffset);\n      this._byteLength = this._buffer.byteLength;\n    } });\n\n/**\n  Set/get the backing DataView of the DataStream object.\n  The setter updates the buffer and byteOffset to point to the DataView values.\n  @type {Object}\n  */\nObject.defineProperty(DataStream.prototype, 'dataView',\n  { get: function() {\n      return this._dataView;\n    },\n    set: function(v) {\n      this._byteOffset = v.byteOffset;\n      this._buffer = v.buffer;\n      this._dataView = new DataView(this._buffer, this._byteOffset);\n      this._byteLength = this._byteOffset + v.byteLength;\n    } });\n\n/**\n  Sets the DataStream read/write position to given position.\n  Clamps between 0 and DataStream length.\n\n  @param {number} pos Position to seek to.\n  @return {null}\n  */\nDataStream.prototype.seek = function(pos) {\n  var npos = Math.max(0, Math.min(this.byteLength, pos));\n  this.position = (isNaN(npos) || !isFinite(npos)) ? 0 : npos;\n};\n\n/**\n  Returns true if the DataStream seek pointer is at the end of buffer and\n  there's no more data to read.\n\n  @return {boolean} True if the seek pointer is at the end of the buffer.\n  */\nDataStream.prototype.isEof = function() {\n  return (this.position >= this._byteLength);\n};\n\n\n/**\n  Maps a Uint8Array into the DataStream buffer.\n\n  Nice for quickly reading in data.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Uint8Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapUint8Array = function(length) {\n  this._realloc(length * 1);\n  var arr = new Uint8Array(this._buffer, this.byteOffset+this.position, length);\n  this.position += length * 1;\n  return arr;\n};\n\n\n/**\n  Reads an Int32Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Int32Array.\n */\nDataStream.prototype.readInt32Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 4) : length;\n  var arr = new Int32Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads an Int16Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Int16Array.\n */\nDataStream.prototype.readInt16Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 2) : length;\n  var arr = new Int16Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads an Int8Array of desired length from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Int8Array.\n */\nDataStream.prototype.readInt8Array = function(length) {\n  length = length == null ? (this.byteLength-this.position) : length;\n  var arr = new Int8Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Uint32Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Uint32Array.\n */\nDataStream.prototype.readUint32Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 4) : length;\n  var arr = new Uint32Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Uint16Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Uint16Array.\n */\nDataStream.prototype.readUint16Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 2) : length;\n  var arr = new Uint16Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Uint8Array of desired length from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Uint8Array.\n */\nDataStream.prototype.readUint8Array = function(length) {\n  length = length == null ? (this.byteLength-this.position) : length;\n  var arr = new Uint8Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Float64Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Float64Array.\n */\nDataStream.prototype.readFloat64Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 8) : length;\n  var arr = new Float64Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n/**\n  Reads a Float32Array of desired length and endianness from the DataStream.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} The read Float32Array.\n */\nDataStream.prototype.readFloat32Array = function(length, e) {\n  length = length == null ? (this.byteLength-this.position / 4) : length;\n  var arr = new Float32Array(length);\n  DataStream.memcpy(arr.buffer, 0,\n                    this.buffer, this.byteOffset+this.position,\n                    length*arr.BYTES_PER_ELEMENT);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += arr.byteLength;\n  return arr;\n};\n\n\n/**\n  Reads a 32-bit int from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readInt32 = function(e) {\n  var v = this._dataView.getInt32(this.position, e == null ? this.endianness : e);\n  this.position += 4;\n  return v;\n};\n\n/**\n  Reads a 16-bit int from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readInt16 = function(e) {\n  var v = this._dataView.getInt16(this.position, e == null ? this.endianness : e);\n  this.position += 2;\n  return v;\n};\n\n/**\n  Reads an 8-bit int from the DataStream.\n\n  @return {number} The read number.\n */\nDataStream.prototype.readInt8 = function() {\n  var v = this._dataView.getInt8(this.position);\n  this.position += 1;\n  return v;\n};\n\n/**\n  Reads a 32-bit unsigned int from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readUint32 = function(e) {\n  var v = this._dataView.getUint32(this.position, e == null ? this.endianness : e);\n  this.position += 4;\n  return v;\n};\n\n/**\n  Reads a 16-bit unsigned int from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readUint16 = function(e) {\n  var v = this._dataView.getUint16(this.position, e == null ? this.endianness : e);\n  this.position += 2;\n  return v;\n};\n\n/**\n  Reads an 8-bit unsigned int from the DataStream.\n\n  @return {number} The read number.\n */\nDataStream.prototype.readUint8 = function() {\n  var v = this._dataView.getUint8(this.position);\n  this.position += 1;\n  return v;\n};\n\n/**\n  Reads a 32-bit float from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readFloat32 = function(e) {\n  var v = this._dataView.getFloat32(this.position, e == null ? this.endianness : e);\n  this.position += 4;\n  return v;\n};\n\n/**\n  Reads a 64-bit float from the DataStream with the desired endianness.\n\n  @param {?boolean} e Endianness of the number.\n  @return {number} The read number.\n */\nDataStream.prototype.readFloat64 = function(e) {\n  var v = this._dataView.getFloat64(this.position, e == null ? this.endianness : e);\n  this.position += 8;\n  return v;\n};\n\n/**\n  Native endianness. Either DataStream.BIG_ENDIAN or DataStream.LITTLE_ENDIAN\n  depending on the platform endianness.\n\n  @type {boolean}\n */\nDataStream.endianness = new Int8Array(new Int16Array([1]).buffer)[0] > 0;\n\n/**\n  Copies byteLength bytes from the src buffer at srcOffset to the\n  dst buffer at dstOffset.\n\n  @param {Object} dst Destination ArrayBuffer to write to.\n  @param {number} dstOffset Offset to the destination ArrayBuffer.\n  @param {Object} src Source ArrayBuffer to read from.\n  @param {number} srcOffset Offset to the source ArrayBuffer.\n  @param {number} byteLength Number of bytes to copy.\n */\nDataStream.memcpy = function(dst, dstOffset, src, srcOffset, byteLength) {\n  var dstU8 = new Uint8Array(dst, dstOffset, byteLength);\n  var srcU8 = new Uint8Array(src, srcOffset, byteLength);\n  dstU8.set(srcU8);\n};\n\n/**\n  Converts array to native endianness in-place.\n\n  @param {Object} array Typed array to convert.\n  @param {boolean} arrayIsLittleEndian True if the data in the array is\n                                       little-endian. Set false for big-endian.\n  @return {Object} The converted typed array.\n */\nDataStream.arrayToNative = function(array, arrayIsLittleEndian) {\n  if (arrayIsLittleEndian == this.endianness) {\n    return array;\n  } else {\n    return this.flipArrayEndianness(array);\n  }\n};\n\n/**\n  Converts native endianness array to desired endianness in-place.\n\n  @param {Object} array Typed array to convert.\n  @param {boolean} littleEndian True if the converted array should be\n                                little-endian. Set false for big-endian.\n  @return {Object} The converted typed array.\n */\nDataStream.nativeToEndian = function(array, littleEndian) {\n  if (this.endianness == littleEndian) {\n    return array;\n  } else {\n    return this.flipArrayEndianness(array);\n  }\n};\n\n/**\n  Flips typed array endianness in-place.\n\n  @param {Object} array Typed array to flip.\n  @return {Object} The converted typed array.\n */\nDataStream.flipArrayEndianness = function(array) {\n  var u8 = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n  for (var i=0; i<array.byteLength; i+=array.BYTES_PER_ELEMENT) {\n    for (var j=i+array.BYTES_PER_ELEMENT-1, k=i; j>k; j--, k++) {\n      var tmp = u8[k];\n      u8[k] = u8[j];\n      u8[j] = tmp;\n    }\n  }\n  return array;\n};\n\n/**\n  Seek position where DataStream#readStruct ran into a problem.\n  Useful for debugging struct parsing.\n\n  @type {number}\n */\nDataStream.prototype.failurePosition = 0;\n\nString.fromCharCodeUint8 = function(uint8arr) {\n    var arr = [];\n    for (var i = 0; i < uint8arr.length; i++) {\n      arr[i] = uint8arr[i];\n    }\n    return String.fromCharCode.apply(null, arr);\n}\n/**\n  Read a string of desired length and encoding from the DataStream.\n\n  @param {number} length The length of the string to read in bytes.\n  @param {?string} encoding The encoding of the string data in the DataStream.\n                            Defaults to ASCII.\n  @return {string} The read string.\n */\nDataStream.prototype.readString = function(length, encoding) {\n  if (encoding == null || encoding == \"ASCII\") {\n    return String.fromCharCodeUint8.apply(null, [this.mapUint8Array(length == null ? this.byteLength-this.position : length)]);\n  } else {\n    return (new TextDecoder(encoding)).decode(this.mapUint8Array(length));\n  }\n};\n\n/**\n  Read null-terminated string of desired length from the DataStream. Truncates\n  the returned string so that the null byte is not a part of it.\n\n  @param {?number} length The length of the string to read.\n  @return {string} The read string.\n */\nDataStream.prototype.readCString = function(length) {\n  var blen = this.byteLength-this.position;\n  var u8 = new Uint8Array(this._buffer, this._byteOffset + this.position);\n  var len = blen;\n  if (length != null) {\n    len = Math.min(length, blen);\n  }\n  for (var i = 0; i < len && u8[i] !== 0; i++); // find first zero byte\n  var s = String.fromCharCodeUint8.apply(null, [this.mapUint8Array(i)]);\n  if (length != null) {\n    this.position += len-i;\n  } else if (i != blen) {\n    this.position += 1; // trailing zero if not at end of buffer\n  }\n  return s;\n};\n\n/* \n   TODO: fix endianness for 24/64-bit fields\n   TODO: check range/support for 64-bits numbers in JavaScript\n*/\nvar MAX_SIZE = Math.pow(2, 32);\n\nDataStream.prototype.readInt64 = function () {\n  return (this.readInt32()*MAX_SIZE)+this.readUint32();\n}\nDataStream.prototype.readUint64 = function () {\n\treturn (this.readUint32()*MAX_SIZE)+this.readUint32();\n}\n\nDataStream.prototype.readInt64 = function () {\n  return (this.readUint32()*MAX_SIZE)+this.readUint32();\n}\n\nDataStream.prototype.readUint24 = function () {\n\treturn (this.readUint8()<<16)+(this.readUint8()<<8)+this.readUint8();\n}\n\nif (typeof exports !== 'undefined') {\n  exports.DataStream = DataStream;  \n}\n// file:src/DataStream-write.js\n/**\n  Saves the DataStream contents to the given filename.\n  Uses Chrome's anchor download property to initiate download.\n \n  @param {string} filename Filename to save as.\n  @return {null}\n  */\nDataStream.prototype.save = function(filename) {\n  var blob = new Blob([this.buffer]);\n  if (window.URL && URL.createObjectURL) {\n      var url = window.URL.createObjectURL(blob);\n      var a = document.createElement('a');\n      // Required in Firefox:\n      document.body.appendChild(a);\n      a.setAttribute('href', url);\n      a.setAttribute('download', filename);\n      // Required in Firefox:\n      a.setAttribute('target', '_self');\n      a.click();\n      window.URL.revokeObjectURL(url);\n  } else {\n      throw(\"DataStream.save: Can't create object URL.\");\n  }\n};\n\n/**\n  Whether to extend DataStream buffer when trying to write beyond its size.\n  If set, the buffer is reallocated to twice its current size until the\n  requested write fits the buffer.\n  @type {boolean}\n  */\nDataStream.prototype._dynamicSize = true;\nObject.defineProperty(DataStream.prototype, 'dynamicSize',\n  { get: function() {\n      return this._dynamicSize;\n    },\n    set: function(v) {\n      if (!v) {\n        this._trimAlloc();\n      }\n      this._dynamicSize = v;\n    } });\n\n/**\n  Internal function to trim the DataStream buffer when required.\n  Used for stripping out the first bytes when not needed anymore.\n\n  @return {null}\n  */\nDataStream.prototype.shift = function(offset) {\n  var buf = new ArrayBuffer(this._byteLength-offset);\n  var dst = new Uint8Array(buf);\n  var src = new Uint8Array(this._buffer, offset, dst.length);\n  dst.set(src);\n  this.buffer = buf;\n  this.position -= offset;\n};\n\n/**\n  Writes an Int32Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeInt32Array = function(arr, e) {\n  this._realloc(arr.length * 4);\n  if (arr instanceof Int32Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapInt32Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeInt32(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes an Int16Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeInt16Array = function(arr, e) {\n  this._realloc(arr.length * 2);\n  if (arr instanceof Int16Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapInt16Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeInt16(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes an Int8Array to the DataStream.\n\n  @param {Object} arr The array to write.\n */\nDataStream.prototype.writeInt8Array = function(arr) {\n  this._realloc(arr.length * 1);\n  if (arr instanceof Int8Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapInt8Array(arr.length);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeInt8(arr[i]);\n    }\n  }\n};\n\n/**\n  Writes a Uint32Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeUint32Array = function(arr, e) {\n  this._realloc(arr.length * 4);\n  if (arr instanceof Uint32Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapUint32Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeUint32(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes a Uint16Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeUint16Array = function(arr, e) {\n  this._realloc(arr.length * 2);\n  if (arr instanceof Uint16Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapUint16Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeUint16(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes a Uint8Array to the DataStream.\n\n  @param {Object} arr The array to write.\n */\nDataStream.prototype.writeUint8Array = function(arr) {\n  this._realloc(arr.length * 1);\n  if (arr instanceof Uint8Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapUint8Array(arr.length);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeUint8(arr[i]);\n    }\n  }\n};\n\n/**\n  Writes a Float64Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeFloat64Array = function(arr, e) {\n  this._realloc(arr.length * 8);\n  if (arr instanceof Float64Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapFloat64Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeFloat64(arr[i], e);\n    }\n  }\n};\n\n/**\n  Writes a Float32Array of specified endianness to the DataStream.\n\n  @param {Object} arr The array to write.\n  @param {?boolean} e Endianness of the data to write.\n */\nDataStream.prototype.writeFloat32Array = function(arr, e) {\n  this._realloc(arr.length * 4);\n  if (arr instanceof Float32Array &&\n      this.byteOffset+this.position % arr.BYTES_PER_ELEMENT === 0) {\n    DataStream.memcpy(this._buffer, this.byteOffset+this.position,\n                      arr.buffer, 0,\n                      arr.byteLength);\n    this.mapFloat32Array(arr.length, e);\n  } else {\n    for (var i=0; i<arr.length; i++) {\n      this.writeFloat32(arr[i], e);\n    }\n  }\n};\n\n\n/**\n  Writes a 32-bit int to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeInt32 = function(v, e) {\n  this._realloc(4);\n  this._dataView.setInt32(this.position, v, e == null ? this.endianness : e);\n  this.position += 4;\n};\n\n/**\n  Writes a 16-bit int to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeInt16 = function(v, e) {\n  this._realloc(2);\n  this._dataView.setInt16(this.position, v, e == null ? this.endianness : e);\n  this.position += 2;\n};\n\n/**\n  Writes an 8-bit int to the DataStream.\n\n  @param {number} v Number to write.\n */\nDataStream.prototype.writeInt8 = function(v) {\n  this._realloc(1);\n  this._dataView.setInt8(this.position, v);\n  this.position += 1;\n};\n\n/**\n  Writes a 32-bit unsigned int to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeUint32 = function(v, e) {\n  this._realloc(4);\n  this._dataView.setUint32(this.position, v, e == null ? this.endianness : e);\n  this.position += 4;\n};\n\n/**\n  Writes a 16-bit unsigned int to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeUint16 = function(v, e) {\n  this._realloc(2);\n  this._dataView.setUint16(this.position, v, e == null ? this.endianness : e);\n  this.position += 2;\n};\n\n/**\n  Writes an 8-bit unsigned  int to the DataStream.\n\n  @param {number} v Number to write.\n */\nDataStream.prototype.writeUint8 = function(v) {\n  this._realloc(1);\n  this._dataView.setUint8(this.position, v);\n  this.position += 1;\n};\n\n/**\n  Writes a 32-bit float to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeFloat32 = function(v, e) {\n  this._realloc(4);\n  this._dataView.setFloat32(this.position, v, e == null ? this.endianness : e);\n  this.position += 4;\n};\n\n/**\n  Writes a 64-bit float to the DataStream with the desired endianness.\n\n  @param {number} v Number to write.\n  @param {?boolean} e Endianness of the number.\n */\nDataStream.prototype.writeFloat64 = function(v, e) {\n  this._realloc(8);\n  this._dataView.setFloat64(this.position, v, e == null ? this.endianness : e);\n  this.position += 8;\n};\n\n/**\n  Write a UCS-2 string of desired endianness to the DataStream. The\n  lengthOverride argument lets you define the number of characters to write.\n  If the string is shorter than lengthOverride, the extra space is padded with\n  zeroes.\n\n  @param {string} str The string to write.\n  @param {?boolean} endianness The endianness to use for the written string data.\n  @param {?number} lengthOverride The number of characters to write.\n */\nDataStream.prototype.writeUCS2String = function(str, endianness, lengthOverride) {\n  if (lengthOverride == null) {\n    lengthOverride = str.length;\n  }\n  for (var i = 0; i < str.length && i < lengthOverride; i++) {\n    this.writeUint16(str.charCodeAt(i), endianness);\n  }\n  for (; i<lengthOverride; i++) {\n    this.writeUint16(0);\n  }\n};\n\n/**\n  Writes a string of desired length and encoding to the DataStream.\n\n  @param {string} s The string to write.\n  @param {?string} encoding The encoding for the written string data.\n                            Defaults to ASCII.\n  @param {?number} length The number of characters to write.\n */\nDataStream.prototype.writeString = function(s, encoding, length) {\n  var i = 0;\n  if (encoding == null || encoding == \"ASCII\") {\n    if (length != null) {\n      var len = Math.min(s.length, length);\n      for (i=0; i<len; i++) {\n        this.writeUint8(s.charCodeAt(i));\n      }\n      for (; i<length; i++) {\n        this.writeUint8(0);\n      }\n    } else {\n      for (i=0; i<s.length; i++) {\n        this.writeUint8(s.charCodeAt(i));\n      }\n    }\n  } else {\n    this.writeUint8Array((new TextEncoder(encoding)).encode(s.substring(0, length)));\n  }\n};\n\n/**\n  Writes a null-terminated string to DataStream and zero-pads it to length\n  bytes. If length is not given, writes the string followed by a zero.\n  If string is longer than length, the written part of the string does not have\n  a trailing zero.\n\n  @param {string} s The string to write.\n  @param {?number} length The number of characters to write.\n */\nDataStream.prototype.writeCString = function(s, length) {\n  var i = 0;\n  if (length != null) {\n    var len = Math.min(s.length, length);\n    for (i=0; i<len; i++) {\n      this.writeUint8(s.charCodeAt(i));\n    }\n    for (; i<length; i++) {\n      this.writeUint8(0);\n    }\n  } else {\n    for (i=0; i<s.length; i++) {\n      this.writeUint8(s.charCodeAt(i));\n    }\n    this.writeUint8(0);\n  }\n};\n\n/**\n  Writes a struct to the DataStream. Takes a structDefinition that gives the\n  types and a struct object that gives the values. Refer to readStruct for the\n  structure of structDefinition.\n\n  @param {Object} structDefinition Type definition of the struct.\n  @param {Object} struct The struct data object.\n  */\nDataStream.prototype.writeStruct = function(structDefinition, struct) {\n  for (var i = 0; i < structDefinition.length; i+=2) {\n    var t = structDefinition[i+1];\n    this.writeType(t, struct[structDefinition[i]], struct);\n  }\n};\n\n/**\n  Writes object v of type t to the DataStream.\n\n  @param {Object} t Type of data to write.\n  @param {Object} v Value of data to write.\n  @param {Object} struct Struct to pass to write callback functions.\n  */\nDataStream.prototype.writeType = function(t, v, struct) {\n  var tp;\n  if (typeof t == \"function\") {\n    return t(this, v);\n  } else if (typeof t == \"object\" && !(t instanceof Array)) {\n    return t.set(this, v, struct);\n  }\n  var lengthOverride = null;\n  var charset = \"ASCII\";\n  var pos = this.position;\n  if (typeof(t) == 'string' && /:/.test(t)) {\n    tp = t.split(\":\");\n    t = tp[0];\n    lengthOverride = parseInt(tp[1]);\n  }\n  if (typeof t == 'string' && /,/.test(t)) {\n    tp = t.split(\",\");\n    t = tp[0];\n    charset = parseInt(tp[1]);\n  }\n\n  switch(t) {\n    case 'uint8':\n      this.writeUint8(v);\n      break;\n    case 'int8':\n      this.writeInt8(v);\n      break;\n\n    case 'uint16':\n      this.writeUint16(v, this.endianness);\n      break;\n    case 'int16':\n      this.writeInt16(v, this.endianness);\n      break;\n    case 'uint32':\n      this.writeUint32(v, this.endianness);\n      break;\n    case 'int32':\n      this.writeInt32(v, this.endianness);\n      break;\n    case 'float32':\n      this.writeFloat32(v, this.endianness);\n      break;\n    case 'float64':\n      this.writeFloat64(v, this.endianness);\n      break;\n\n    case 'uint16be':\n      this.writeUint16(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'int16be':\n      this.writeInt16(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'uint32be':\n      this.writeUint32(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'int32be':\n      this.writeInt32(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'float32be':\n      this.writeFloat32(v, DataStream.BIG_ENDIAN);\n      break;\n    case 'float64be':\n      this.writeFloat64(v, DataStream.BIG_ENDIAN);\n      break;\n\n    case 'uint16le':\n      this.writeUint16(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'int16le':\n      this.writeInt16(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'uint32le':\n      this.writeUint32(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'int32le':\n      this.writeInt32(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'float32le':\n      this.writeFloat32(v, DataStream.LITTLE_ENDIAN);\n      break;\n    case 'float64le':\n      this.writeFloat64(v, DataStream.LITTLE_ENDIAN);\n      break;\n\n    case 'cstring':\n      this.writeCString(v, lengthOverride);\n      break;\n\n    case 'string':\n      this.writeString(v, charset, lengthOverride);\n      break;\n\n    case 'u16string':\n      this.writeUCS2String(v, this.endianness, lengthOverride);\n      break;\n\n    case 'u16stringle':\n      this.writeUCS2String(v, DataStream.LITTLE_ENDIAN, lengthOverride);\n      break;\n\n    case 'u16stringbe':\n      this.writeUCS2String(v, DataStream.BIG_ENDIAN, lengthOverride);\n      break;\n\n    default:\n      if (t.length == 3) {\n        var ta = t[1];\n        for (var i=0; i<v.length; i++) {\n          this.writeType(ta, v[i]);\n        }\n        break;\n      } else {\n        this.writeStruct(t, v);\n        break;\n      }\n  }\n  if (lengthOverride != null) {\n    this.position = pos;\n    this._realloc(lengthOverride);\n    this.position = pos + lengthOverride;\n  }\n};\n\n\nDataStream.prototype.writeUint64 = function (v) {\n\tvar h = Math.floor(v / MAX_SIZE);\n\tthis.writeUint32(h);\n\tthis.writeUint32(v & 0xFFFFFFFF);\n}\n\nDataStream.prototype.writeUint24 = function (v) {\n\tthis.writeUint8((v & 0x00FF0000)>>16);\n\tthis.writeUint8((v & 0x0000FF00)>>8);\n\tthis.writeUint8((v & 0x000000FF));\n}\n\nDataStream.prototype.adjustUint32 = function(position, value) {\n\tvar pos = this.position;\n\tthis.seek(position);\n\tthis.writeUint32(value);\n\tthis.seek(pos);\n}\n// file:src/DataStream-map.js\n/**\n  Maps an Int32Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Int32Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapInt32Array = function(length, e) {\n  this._realloc(length * 4);\n  var arr = new Int32Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 4;\n  return arr;\n};\n\n/**\n  Maps an Int16Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Int16Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapInt16Array = function(length, e) {\n  this._realloc(length * 2);\n  var arr = new Int16Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 2;\n  return arr;\n};\n\n/**\n  Maps an Int8Array into the DataStream buffer.\n\n  Nice for quickly reading in data.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Int8Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapInt8Array = function(length) {\n  this._realloc(length * 1);\n  var arr = new Int8Array(this._buffer, this.byteOffset+this.position, length);\n  this.position += length * 1;\n  return arr;\n};\n\n/**\n  Maps a Uint32Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Uint32Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapUint32Array = function(length, e) {\n  this._realloc(length * 4);\n  var arr = new Uint32Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 4;\n  return arr;\n};\n\n/**\n  Maps a Uint16Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Uint16Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapUint16Array = function(length, e) {\n  this._realloc(length * 2);\n  var arr = new Uint16Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 2;\n  return arr;\n};\n\n/**\n  Maps a Float64Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Float64Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapFloat64Array = function(length, e) {\n  this._realloc(length * 8);\n  var arr = new Float64Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 8;\n  return arr;\n};\n\n/**\n  Maps a Float32Array into the DataStream buffer, swizzling it to native\n  endianness in-place. The current offset from the start of the buffer needs to\n  be a multiple of element size, just like with typed array views.\n\n  Nice for quickly reading in data. Warning: potentially modifies the buffer\n  contents.\n\n  @param {number} length Number of elements to map.\n  @param {?boolean} e Endianness of the data to read.\n  @return {Object} Float32Array to the DataStream backing buffer.\n  */\nDataStream.prototype.mapFloat32Array = function(length, e) {\n  this._realloc(length * 4);\n  var arr = new Float32Array(this._buffer, this.byteOffset+this.position, length);\n  DataStream.arrayToNative(arr, e == null ? this.endianness : e);\n  this.position += length * 4;\n  return arr;\n};\n// file:src/buffer.js\n/**\n * MultiBufferStream is a class that acts as a SimpleStream for parsing \n * It holds several, possibly non-contiguous ArrayBuffer objects, each with a fileStart property \n * containing the offset for the buffer data in an original/virtual file \n *\n * It inherits also from DataStream for all read/write/alloc operations\n */\n\n/**\n * Constructor\n */\nvar MultiBufferStream = function(buffer) {\n\t/* List of ArrayBuffers, with a fileStart property, sorted in fileStart order and non overlapping */\n\tthis.buffers = [];\t\n\tthis.bufferIndex = -1;\n\tif (buffer) {\n\t\tthis.insertBuffer(buffer);\n\t\tthis.bufferIndex = 0;\n\t}\n}\nMultiBufferStream.prototype = new DataStream(new ArrayBuffer(), 0, DataStream.BIG_ENDIAN);\n\n/************************************************************************************\n  Methods for the managnement of the buffers (insertion, removal, concatenation, ...)\n ***********************************************************************************/\n\nMultiBufferStream.prototype.initialized = function() {\n\tvar firstBuffer;\n\tif (this.bufferIndex > -1) {\n\t\treturn true;\n\t} else if (this.buffers.length > 0) {\n\t\tfirstBuffer = this.buffers[0];\n\t\tif (firstBuffer.fileStart === 0) {\n\t\t\tthis.buffer = firstBuffer;\n\t\t\tthis.bufferIndex = 0;\n\t\t\tLog.debug(\"MultiBufferStream\", \"Stream ready for parsing\");\n\t\t\treturn true;\n\t\t} else {\n\t\t\tLog.warn(\"MultiBufferStream\", \"The first buffer should have a fileStart of 0\");\n\t\t\tthis.logBufferLevel();\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\tLog.warn(\"MultiBufferStream\", \"No buffer to start parsing from\");\n\t\tthis.logBufferLevel();\n\t\treturn false;\n\t}\t\t\t\n}\n\n/**\n * helper functions to concatenate two ArrayBuffer objects\n * @param  {ArrayBuffer} buffer1 \n * @param  {ArrayBuffer} buffer2 \n * @return {ArrayBuffer} the concatenation of buffer1 and buffer2 in that order\n */\nArrayBuffer.concat = function(buffer1, buffer2) {\n  Log.debug(\"ArrayBuffer\", \"Trying to create a new buffer of size: \"+(buffer1.byteLength + buffer2.byteLength));\n  var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n  tmp.set(new Uint8Array(buffer1), 0);\n  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n  return tmp.buffer;\n};\n\n/**\n * Reduces the size of a given buffer, but taking the part between offset and offset+newlength\n * @param  {ArrayBuffer} buffer    \n * @param  {Number}      offset    the start of new buffer\n * @param  {Number}      newLength the length of the new buffer\n * @return {ArrayBuffer}           the new buffer\n */\nMultiBufferStream.prototype.reduceBuffer = function(buffer, offset, newLength) {\n\tvar smallB;\n\tsmallB = new Uint8Array(newLength);\n\tsmallB.set(new Uint8Array(buffer, offset, newLength));\n\tsmallB.buffer.fileStart = buffer.fileStart+offset;\n\tsmallB.buffer.usedBytes = 0;\n\treturn smallB.buffer;\t\n}\n\n/**\n * Inserts the new buffer in the sorted list of buffers,\n *  making sure, it is not overlapping with existing ones (possibly reducing its size).\n *  if the new buffer overrides/replaces the 0-th buffer (for instance because it is bigger), \n *  updates the DataStream buffer for parsing \n*/\nMultiBufferStream.prototype.insertBuffer = function(ab) {\t\n\tvar to_add = true;\n\t/* TODO: improve insertion if many buffers */\n\tfor (var i = 0; i < this.buffers.length; i++) {\n\t\tvar b = this.buffers[i];\n\t\tif (ab.fileStart <= b.fileStart) {\n\t\t\t/* the insertion position is found */\n\t\t\tif (ab.fileStart === b.fileStart) {\n\t\t\t\t/* The new buffer overlaps with an existing buffer */\n\t\t\t\tif (ab.byteLength >  b.byteLength) {\n\t\t\t\t\t/* the new buffer is bigger than the existing one\n\t\t\t\t\t   remove the existing buffer and try again to insert \n\t\t\t\t\t   the new buffer to check overlap with the next ones */\n\t\t\t\t\tthis.buffers.splice(i, 1);\n\t\t\t\t\ti--; \n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\t/* the new buffer is smaller than the existing one, just drop it */\n\t\t\t\t\tLog.warn(\"MultiBufferStream\", \"Buffer (fileStart: \"+ab.fileStart+\" - Length: \"+ab.byteLength+\") already appended, ignoring\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/* The beginning of the new buffer is not overlapping with an existing buffer\n\t\t\t\t   let's check the end of it */\n\t\t\t\tif (ab.fileStart + ab.byteLength <= b.fileStart) {\n\t\t\t\t\t/* no overlap, we can add it as is */\n\t\t\t\t} else {\n\t\t\t\t\t/* There is some overlap, cut the new buffer short, and add it*/\n\t\t\t\t\tab = this.reduceBuffer(ab, 0, b.fileStart - ab.fileStart);\n\t\t\t\t}\n\t\t\t\tLog.debug(\"MultiBufferStream\", \"Appending new buffer (fileStart: \"+ab.fileStart+\" - Length: \"+ab.byteLength+\")\");\n\t\t\t\tthis.buffers.splice(i, 0, ab);\n\t\t\t\t/* if this new buffer is inserted in the first place in the list of the buffer, \n\t\t\t\t   and the DataStream is initialized, make it the buffer used for parsing */\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tthis.buffer = ab;\n\t\t\t\t}\n\t\t\t}\n\t\t\tto_add = false;\n\t\t\tbreak;\n\t\t} else if (ab.fileStart < b.fileStart + b.byteLength) {\n\t\t\t/* the new buffer overlaps its beginning with the end of the current buffer */\n\t\t\tvar offset = b.fileStart + b.byteLength - ab.fileStart;\n\t\t\tvar newLength = ab.byteLength - offset;\n\t\t\tif (newLength > 0) {\n\t\t\t\t/* the new buffer is bigger than the current overlap, drop the overlapping part and try again inserting the remaining buffer */\n\t\t\t\tab = this.reduceBuffer(ab, offset, newLength);\n\t\t\t} else {\n\t\t\t\t/* the content of the new buffer is entirely contained in the existing buffer, drop it entirely */\n\t\t\t\tto_add = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t/* if the buffer has not been added, we can add it at the end */\n\tif (to_add) {\n\t\tLog.debug(\"MultiBufferStream\", \"Appending new buffer (fileStart: \"+ab.fileStart+\" - Length: \"+ab.byteLength+\")\");\n\t\tthis.buffers.push(ab);\n\t\t/* if this new buffer is inserted in the first place in the list of the buffer, \n\t\t   and the DataStream is initialized, make it the buffer used for parsing */\n\t\tif (i === 0) {\n\t\t\tthis.buffer = ab;\n\t\t}\n\t}\n}\n\n/**\n * Displays the status of the buffers (number and used bytes)\n * @param  {Object} info callback method for display\n */\nMultiBufferStream.prototype.logBufferLevel = function(info) {\n\tvar i;\n\tvar buffer;\n\tvar used, total;\n\tvar ranges = [];\n\tvar range;\n\tvar bufferedString = \"\";\n\tused = 0;\n\ttotal = 0;\n\tfor (i = 0; i < this.buffers.length; i++) {\n\t\tbuffer = this.buffers[i];\n\t\tif (i === 0) {\n\t\t\trange = {};\n\t\t\tranges.push(range);\n\t\t\trange.start = buffer.fileStart;\n\t\t\trange.end = buffer.fileStart+buffer.byteLength;\n\t\t\tbufferedString += \"[\"+range.start+\"-\";\n\t\t} else if (range.end === buffer.fileStart) {\n\t\t\trange.end = buffer.fileStart+buffer.byteLength;\n\t\t} else {\n\t\t\trange = {};\n\t\t\trange.start = buffer.fileStart;\n\t\t\tbufferedString += (ranges[ranges.length-1].end-1)+\"], [\"+range.start+\"-\";\n\t\t\trange.end = buffer.fileStart+buffer.byteLength;\n\t\t\tranges.push(range);\n\t\t}\n\t\tused += buffer.usedBytes;\n\t\ttotal += buffer.byteLength;\n\t}\n\tif (ranges.length > 0) {\n\t\tbufferedString += (range.end-1)+\"]\";\n\t}\n\tvar log = (info ? Log.info : Log.debug)\n\tif (this.buffers.length === 0) {\n\t\tlog(\"MultiBufferStream\", \"No more buffer in memory\");\n\t} else {\n\t\tlog(\"MultiBufferStream\", \"\"+this.buffers.length+\" stored buffer(s) (\"+used+\"/\"+total+\" bytes), continuous ranges: \"+bufferedString);\n\t}\n}\n\nMultiBufferStream.prototype.cleanBuffers = function () {\n\tvar i;\n\tvar buffer;\n\tfor (i = 0; i < this.buffers.length; i++) {\n\t\tbuffer = this.buffers[i];\n\t\tif (buffer.usedBytes === buffer.byteLength) {\n\t\t\tLog.debug(\"MultiBufferStream\", \"Removing buffer #\"+i);\n\t\t\tthis.buffers.splice(i, 1);\n\t\t\ti--;\n\t\t}\n\t}\n}\n\nMultiBufferStream.prototype.mergeNextBuffer = function() {\n\tvar next_buffer;\n\tif (this.bufferIndex+1 < this.buffers.length) {\n\t\tnext_buffer = this.buffers[this.bufferIndex+1];\n\t\tif (next_buffer.fileStart === this.buffer.fileStart + this.buffer.byteLength) {\n\t\t\tvar oldLength = this.buffer.byteLength;\n\t\t\tvar oldUsedBytes = this.buffer.usedBytes;\n\t\t\tvar oldFileStart = this.buffer.fileStart;\n\t\t\tthis.buffers[this.bufferIndex] = ArrayBuffer.concat(this.buffer, next_buffer);\n\t\t\tthis.buffer = this.buffers[this.bufferIndex];\n\t\t\tthis.buffers.splice(this.bufferIndex+1, 1);\n\t\t\tthis.buffer.usedBytes = oldUsedBytes; /* TODO: should it be += ? */\n\t\t\tthis.buffer.fileStart = oldFileStart;\n\t\t\tLog.debug(\"ISOFile\", \"Concatenating buffer for box parsing (length: \"+oldLength+\"->\"+this.buffer.byteLength+\")\");\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\n/*************************************************************************\n  Seek-related functions\n *************************************************************************/\n\n/**\n * Finds the buffer that holds the given file position\n * @param  {Boolean} fromStart    indicates if the search should start from the current buffer (false) \n *                                or from the first buffer (true)\n * @param  {Number}  filePosition position in the file to seek to\n * @param  {Boolean} markAsUsed   indicates if the bytes in between the current position and the seek position \n *                                should be marked as used for garbage collection\n * @return {Number}               the index of the buffer holding the seeked file position, -1 if not found.\n */\nMultiBufferStream.prototype.findPosition = function(fromStart, filePosition, markAsUsed) {\n\tvar i;\n\tvar abuffer = null;\n\tvar index = -1;\n\n\t/* find the buffer with the largest position smaller than the given position */\n\tif (fromStart === true) {\n\t   /* the reposition can be in the past, we need to check from the beginning of the list of buffers */\n\t\ti = 0;\n\t} else {\n\t\ti = this.bufferIndex;\n\t}\n\n\twhile (i < this.buffers.length) {\n\t\tabuffer = this.buffers[i];\n\t\tif (abuffer.fileStart <= filePosition) {\n\t\t\tindex = i;\n\t\t\tif (markAsUsed) {\n\t\t\t\tif (abuffer.fileStart + abuffer.byteLength <= filePosition) {\n\t\t\t\t\tabuffer.usedBytes = abuffer.byteLength;\t\n\t\t\t\t} else {\n\t\t\t\t\tabuffer.usedBytes = filePosition - abuffer.fileStart;\n\t\t\t\t}\t\t\n\t\t\t\tthis.logBufferLevel();\t\n\t\t\t}\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\n\tif (index !== -1) {\n\t\tabuffer = this.buffers[index];\n\t\tif (abuffer.fileStart + abuffer.byteLength >= filePosition) {\t\t\t\n\t\t\tLog.debug(\"MultiBufferStream\", \"Found position in existing buffer #\"+index);\n\t\t\treturn index;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n/**\n * Finds the largest file position contained in a buffer or in the next buffers if they are contiguous (no gap)\n * starting from the given buffer index or from the current buffer if the index is not given\n *\n * @param  {Number} inputindex Index of the buffer to start from\n * @return {Number}            The largest file position found in the buffers\n */\nMultiBufferStream.prototype.findEndContiguousBuf = function(inputindex) {\n\tvar i;\n\tvar currentBuf;\n\tvar nextBuf;\n\tvar index = (inputindex !== undefined ? inputindex : this.bufferIndex);\n\tcurrentBuf = this.buffers[index];\n\t/* find the end of the contiguous range of data */\n\tif (this.buffers.length > index+1) {\n\t\tfor (i = index+1; i < this.buffers.length; i++) {\n\t\t\tnextBuf = this.buffers[i];\n\t\t\tif (nextBuf.fileStart === currentBuf.fileStart + currentBuf.byteLength) {\n\t\t\t\tcurrentBuf = nextBuf;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t/* return the position of last byte in the file that we have */\n\treturn currentBuf.fileStart + currentBuf.byteLength;\n}\n\n/**\n * Returns the largest file position contained in the buffers, larger than the given position\n * @param  {Number} pos the file position to start from\n * @return {Number}     the largest position in the current buffer or in the buffer and the next contiguous \n *                      buffer that holds the given position\n */\nMultiBufferStream.prototype.getEndFilePositionAfter = function(pos) {\n\tvar index = this.findPosition(true, pos, false);\n\tif (index !== -1) {\n\t\treturn this.findEndContiguousBuf(index);\n\t} else {\n\t\treturn pos;\n\t}\n}\n\n/*************************************************************************\n  Garbage collection related functions\n *************************************************************************/\n\n/**\n * Marks a given number of bytes as used in the current buffer for garbage collection\n * @param {Number} nbBytes \n */\nMultiBufferStream.prototype.addUsedBytes = function(nbBytes) {\n\tthis.buffer.usedBytes += nbBytes;\n\tthis.logBufferLevel();\n}\n\n/**\n * Marks the entire current buffer as used, ready for garbage collection\n */\nMultiBufferStream.prototype.setAllUsedBytes = function() {\n\tthis.buffer.usedBytes = this.buffer.byteLength;\n\tthis.logBufferLevel();\n}\n\n/*************************************************************************\n  Common API between MultiBufferStream and SimpleStream\n *************************************************************************/\n\n/**\n * Tries to seek to a given file position\n * if possible, repositions the parsing from there and returns true \n * if not possible, does not change anything and returns false \n * @param  {Number}  filePosition position in the file to seek to\n * @param  {Boolean} fromStart    indicates if the search should start from the current buffer (false) \n *                                or from the first buffer (true)\n * @param  {Boolean} markAsUsed   indicates if the bytes in between the current position and the seek position \n *                                should be marked as used for garbage collection\n * @return {Boolean}              true if the seek succeeded, false otherwise\n */\nMultiBufferStream.prototype.seek = function(filePosition, fromStart, markAsUsed) {\n\tvar index;\n\tindex = this.findPosition(fromStart, filePosition, markAsUsed);\n\tif (index !== -1) {\n\t\tthis.buffer = this.buffers[index];\n\t\tthis.bufferIndex = index;\n\t\tthis.position = filePosition - this.buffer.fileStart;\n\t\tLog.debug(\"MultiBufferStream\", \"Repositioning parser at buffer position: \"+this.position);\n\t\treturn true;\n\t} else {\n\t\tLog.debug(\"MultiBufferStream\", \"Position \"+filePosition+\" not found in buffered data\");\n\t\treturn false;\n\t}\n}\n\n/**\n * Returns the current position in the file\n * @return {Number} the position in the file\n */\nMultiBufferStream.prototype.getPosition = function() {\n\tif (this.bufferIndex === -1 || this.buffers[this.bufferIndex] === null) {\n\t\tthrow \"Error accessing position in the MultiBufferStream\";\n\t}\n\treturn this.buffers[this.bufferIndex].fileStart+this.position;\n}\n\n/**\n * Returns the length of the current buffer\n * @return {Number} the length of the current buffer\n */\nMultiBufferStream.prototype.getLength = function() {\n\treturn this.byteLength;\n}\n\nMultiBufferStream.prototype.getEndPosition = function() {\n\tif (this.bufferIndex === -1 || this.buffers[this.bufferIndex] === null) {\n\t\tthrow \"Error accessing position in the MultiBufferStream\";\n\t}\n\treturn this.buffers[this.bufferIndex].fileStart+this.byteLength;\n}\n\nif (typeof exports !== 'undefined') {\n\texports.MultiBufferStream = MultiBufferStream;\n}// file:src/descriptor.js\n/*\n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar MPEG4DescriptorParser = function () {\n\tvar ES_DescrTag \t\t\t= 0x03;\n\tvar DecoderConfigDescrTag \t= 0x04;\n\tvar DecSpecificInfoTag \t\t= 0x05;\n\tvar SLConfigDescrTag \t\t= 0x06;\n\n\tvar descTagToName = [];\n\tdescTagToName[ES_DescrTag] \t\t\t\t= \"ES_Descriptor\";\n\tdescTagToName[DecoderConfigDescrTag] \t= \"DecoderConfigDescriptor\";\n\tdescTagToName[DecSpecificInfoTag] \t\t= \"DecoderSpecificInfo\";\n\tdescTagToName[SLConfigDescrTag] \t\t= \"SLConfigDescriptor\";\n\n\tthis.getDescriptorName = function(tag) {\n\t\treturn descTagToName[tag];\n\t}\n\n\tvar that = this;\n\tvar classes = {};\n\n\tthis.parseOneDescriptor = function (stream) {\n\t\tvar hdrSize = 0;\n\t\tvar size = 0;\n\t\tvar tag;\n\t\tvar desc;\n\t\tvar byteRead;\n\t\ttag = stream.readUint8();\n\t\thdrSize++;\n\t\tbyteRead = stream.readUint8();\n\t\thdrSize++;\n\t\twhile (byteRead & 0x80) {\n\t\t\tsize = (size << 7) + (byteRead & 0x7F);\n\t\t\tbyteRead = stream.readUint8();\n\t\t\thdrSize++;\n\t\t}\n\t\tsize = (size << 7) + (byteRead & 0x7F);\n\t\tLog.debug(\"MPEG4DescriptorParser\", \"Found \"+(descTagToName[tag] || \"Descriptor \"+tag)+\", size \"+size+\" at position \"+stream.getPosition());\n\t\tif (descTagToName[tag]) {\n\t\t\tdesc = new classes[descTagToName[tag]](size);\n\t\t} else {\n\t\t\tdesc = new classes.Descriptor(size);\n\t\t}\n\t\tdesc.parse(stream);\n\t\treturn desc;\n\t}\n\n\tclasses.Descriptor = function(_tag, _size) {\n\t\tthis.tag = _tag;\n\t\tthis.size = _size;\n\t\tthis.descs = [];\n\t}\n\n\tclasses.Descriptor.prototype.parse = function (stream) {\n\t\tthis.data = stream.readUint8Array(this.size);\n\t}\n\n\tclasses.Descriptor.prototype.findDescriptor = function (tag) {\n\t\tfor (var i = 0; i < this.descs.length; i++) {\n\t\t\tif (this.descs[i].tag == tag) {\n\t\t\t\treturn this.descs[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tclasses.Descriptor.prototype.parseRemainingDescriptors = function (stream) {\n\t\tvar start = stream.position;\n\t\twhile (stream.position < start+this.size) {\n\t\t\tvar desc = that.parseOneDescriptor(stream);\n\t\t\tthis.descs.push(desc);\n\t\t}\n\t}\n\n\tclasses.ES_Descriptor = function (size) {\n\t\tclasses.Descriptor.call(this, ES_DescrTag, size);\n\t}\n\n\tclasses.ES_Descriptor.prototype = new classes.Descriptor();\n\n\tclasses.ES_Descriptor.prototype.parse = function(stream) {\n\t\tthis.ES_ID = stream.readUint16();\n\t\tthis.flags = stream.readUint8();\n\t\tthis.size -= 3;\n\t\tif (this.flags & 0x80) {\n\t\t\tthis.dependsOn_ES_ID = stream.readUint16();\n\t\t\tthis.size -= 2;\n\t\t} else {\n\t\t\tthis.dependsOn_ES_ID = 0;\n\t\t}\n\t\tif (this.flags & 0x40) {\n\t\t\tvar l = stream.readUint8();\n\t\t\tthis.URL = stream.readString(l);\n\t\t\tthis.size -= l+1;\n\t\t} else {\n\t\t\tthis.URL = \"\";\n\t\t}\n\t\tif (this.flags & 0x20) {\n\t\t\tthis.OCR_ES_ID = stream.readUint16();\n\t\t\tthis.size -= 2;\n\t\t} else {\n\t\t\tthis.OCR_ES_ID = 0;\n\t\t}\n\t\tthis.parseRemainingDescriptors(stream);\n\t}\n\n\tclasses.ES_Descriptor.prototype.getOTI = function(stream) {\n\t\tvar dcd = this.findDescriptor(DecoderConfigDescrTag);\n\t\tif (dcd) {\n\t\t\treturn dcd.oti;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tclasses.ES_Descriptor.prototype.getAudioConfig = function(stream) {\n\t\tvar dcd = this.findDescriptor(DecoderConfigDescrTag);\n\t\tif (!dcd) return null;\n\t\tvar dsi = dcd.findDescriptor(DecSpecificInfoTag);\n\t\tif (dsi && dsi.data) {\n\t\t\tvar audioObjectType = (dsi.data[0]& 0xF8) >> 3;\n\t\t\tif (audioObjectType === 31 && dsi.data.length >= 2) {\n\t\t\t\taudioObjectType = 32 + ((dsi.data[0] & 0x7) << 3) + ((dsi.data[1] & 0xE0) >> 5);\n\t\t\t}\n\t\t\treturn audioObjectType;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tclasses.DecoderConfigDescriptor = function (size) {\n\t\tclasses.Descriptor.call(this, DecoderConfigDescrTag, size);\n\t}\n\tclasses.DecoderConfigDescriptor.prototype = new classes.Descriptor();\n\n\tclasses.DecoderConfigDescriptor.prototype.parse = function(stream) {\n\t\tthis.oti = stream.readUint8();\n\t\tthis.streamType = stream.readUint8();\n\t\tthis.upStream = ((this.streamType >> 1) & 1) !== 0;\n\t\tthis.streamType = this.streamType >>> 2;\n\t\tthis.bufferSize = stream.readUint24();\n\t\tthis.maxBitrate = stream.readUint32();\n\t\tthis.avgBitrate = stream.readUint32();\n\t\tthis.size -= 13;\n\t\tthis.parseRemainingDescriptors(stream);\n\t}\n\n\tclasses.DecoderSpecificInfo = function (size) {\n\t\tclasses.Descriptor.call(this, DecSpecificInfoTag, size);\n\t}\n\tclasses.DecoderSpecificInfo.prototype = new classes.Descriptor();\n\n\tclasses.SLConfigDescriptor = function (size) {\n\t\tclasses.Descriptor.call(this, SLConfigDescrTag, size);\n\t}\n\tclasses.SLConfigDescriptor.prototype = new classes.Descriptor();\n\n\treturn this;\n}\n\nif (typeof exports !== 'undefined') {\n\texports.MPEG4DescriptorParser = MPEG4DescriptorParser;\n}\n// file:src/box.js\n/*\n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar BoxParser = {\n\tERR_INVALID_DATA : -1,\n\tERR_NOT_ENOUGH_DATA : 0,\n\tOK : 1,\n\n\t// Boxes to be created with default parsing\n\tBASIC_BOXES: [\n\t\t{type: \"mdat\", name: \"MediaDataBox\"},\n\t\t{type: \"idat\", name: \"ItemDataBox\"},\n\t\t{type: \"free\", name: \"FreeSpaceBox\"},\n\t\t{type: \"skip\", name: \"FreeSpaceBox\"},\n\t\t{type: \"meco\", name: \"AdditionalMetadataContainerBox\"},\n\t\t{type: \"strk\", name: \"SubTrackBox\"}\n\t],\n\tFULL_BOXES: [\n\t\t{type: \"hmhd\", name: \"HintMediaHeaderBox\"},\n\t\t{type: \"nmhd\", name: \"NullMediaHeaderBox\"},\n\t\t{type: \"iods\", name: \"ObjectDescriptorBox\"},\n\t\t{type: \"xml \", name: \"XMLBox\"},\n\t\t{type: \"bxml\", name: \"BinaryXMLBox\"},\n\t\t{type: \"ipro\", name: \"ItemProtectionBox\"},\n\t\t{type: \"mere\", name: \"MetaboxRelationBox\"}\n\t],\n\tCONTAINER_BOXES: [\n\t\t[{type: \"moov\", name: \"CompressedMovieBox\"}, [\"trak\", \"pssh\"]],\n\t\t[{type: \"trak\", name: \"TrackBox\"}],\n\t\t[{type: \"edts\", name: \"EditBox\"}],\n\t\t[{type: \"mdia\", name: \"MediaBox\"}],\n\t\t[{type: \"minf\", name: \"MediaInformationBox\"}],\n\t\t[{type: \"dinf\", name: \"DataInformationBox\"}],\n\t\t[{type: \"stbl\", name: \"SampleTableBox\"}, [\"sgpd\", \"sbgp\"]],\n\t\t[{type: \"mvex\", name: \"MovieExtendsBox\"}, [\"trex\"]],\n\t\t[{type: \"moof\", name: \"CompressedMovieFragmentBox\"}, [\"traf\"]],\n\t\t[{type: \"traf\", name: \"TrackFragmentBox\"}, [\"trun\", \"sgpd\", \"sbgp\"]],\n\t\t[{type: \"vttc\", name: \"VTTCueBox\"}],\n\t\t[{type: \"tref\", name: \"TrackReferenceBox\"}],\n\t\t[{type: \"iref\", name: \"ItemReferenceBox\"}],\n\t\t[{type: \"mfra\", name: \"MovieFragmentRandomAccessBox\"}, [\"tfra\"]],\n\t\t[{type: \"meco\", name: \"AdditionalMetadataContainerBox\"}],\n\t\t[{type: \"hnti\", name: \"trackhintinformation\"}],\n\t\t[{type: \"hinf\", name: \"hintstatisticsbox\"}],\n\t\t[{type: \"strk\", name: \"SubTrackBox\"}],\n\t\t[{type: \"strd\", name: \"SubTrackDefinitionBox\"}],\n\t\t[{type: \"sinf\", name: \"ProtectionSchemeInfoBox\"}],\n\t\t[{type: \"rinf\", name: \"RestrictedSchemeInfoBox\"}],\n\t\t[{type: \"schi\", name: \"SchemeInformationBox\"}],\n\t\t[{type: \"trgr\", name: \"TrackGroupBox\"}],\n\t\t[{type: \"udta\", name: \"UserDataBox\"}, [\"kind\"]],\n\t\t[{type: \"iprp\", name: \"ItemPropertiesBox\"}, [\"ipma\"]],\n\t\t[{type: \"ipco\", name: \"ItemPropertyContainerBox\"}],\n\t\t[{type: \"grpl\", name: \"GroupsListBox\"}],\n\t\t[{type: \"j2kH\", name: \"J2KHeaderInfoBox\"}],\n\t\t[{type: \"etyp\", name: \"ExtendedTypeBox\"}, [\"tyco\"]]\n\t],\n\t// Boxes effectively created\n\tboxCodes : [],\n\tfullBoxCodes : [],\n\tcontainerBoxCodes : [],\n\tsampleEntryCodes : {},\n\tsampleGroupEntryCodes: [],\n\ttrackGroupTypes: [],\n\tUUIDBoxes: {},\n\tUUIDs: [],\n\tinitialize: function() {\n\t\tBoxParser.FullBox.prototype = new BoxParser.Box();\n\t\tBoxParser.ContainerBox.prototype = new BoxParser.Box();\n\t\tBoxParser.SampleEntry.prototype = new BoxParser.Box();\n\t\tBoxParser.TrackGroupTypeBox.prototype = new BoxParser.FullBox();\n\n\t\t/* creating constructors for simple boxes */\n\t\tBoxParser.BASIC_BOXES.forEach(function(box) {\n\t\t\tBoxParser.createBoxCtor(box.type, box.name)\n\t\t});\n\t\tBoxParser.FULL_BOXES.forEach(function(box) {\n\t\t\tBoxParser.createFullBoxCtor(box.type, box.name);\n\t\t});\n\t\tBoxParser.CONTAINER_BOXES.forEach(function(boxes) {\n\t\t\tBoxParser.createContainerBoxCtor(boxes[0].type, boxes[0].name, null, boxes[1]);\n\t\t});\n\t},\n\tBox: function(_type, _size, _name, _uuid) {\n\t\tthis.type = _type;\n\t\tthis.box_name = _name;\n\t\tthis.size = _size;\n\t\tthis.uuid = _uuid;\n\t},\n\tFullBox: function(type, size, name, uuid) {\n\t\tBoxParser.Box.call(this, type, size, name, uuid);\n\t\tthis.flags = 0;\n\t\tthis.version = 0;\n\t},\n\tContainerBox: function(type, size, name, uuid) {\n\t\tBoxParser.Box.call(this, type, size, name, uuid);\n\t\tthis.boxes = [];\n\t},\n\tSampleEntry: function(type, size, hdr_size, start) {\n\t\tBoxParser.ContainerBox.call(this, type, size);\n\t\tthis.hdr_size = hdr_size;\n\t\tthis.start = start;\n\t},\n\tSampleGroupEntry: function(type) {\n\t\tthis.grouping_type = type;\n\t},\n\tTrackGroupTypeBox: function(type, size) {\n\t\tBoxParser.FullBox.call(this, type, size);\n\t},\n\tcreateBoxCtor: function(type, name, parseMethod){\n\t\tBoxParser.boxCodes.push(type);\n\t\tBoxParser[type+\"Box\"] = function(size) {\n\t\t\tBoxParser.Box.call(this, type, size, name);\n\t\t}\n\t\tBoxParser[type+\"Box\"].prototype = new BoxParser.Box();\n\t\tif (parseMethod) BoxParser[type+\"Box\"].prototype.parse = parseMethod;\n\t},\n\tcreateFullBoxCtor: function(type, name, parseMethod) {\n\t\t//BoxParser.fullBoxCodes.push(type);\n\t\tBoxParser[type+\"Box\"] = function(size) {\n\t\t\tBoxParser.FullBox.call(this, type, size, name);\n\t\t}\n\t\tBoxParser[type+\"Box\"].prototype = new BoxParser.FullBox();\n\t\tBoxParser[type+\"Box\"].prototype.parse = function(stream) {\n\t\t\tthis.parseFullHeader(stream);\n\t\t\tif (parseMethod) {\n\t\t\t\tparseMethod.call(this, stream);\n\t\t\t}\n\t\t};\n\t},\n\taddSubBoxArrays: function(subBoxNames) {\n\t\tif (subBoxNames) {\n\t\t\tthis.subBoxNames = subBoxNames;\n\t\t\tvar nbSubBoxes = subBoxNames.length;\n\t\t\tfor (var k = 0; k<nbSubBoxes; k++) {\n\t\t\t\tthis[subBoxNames[k]+\"s\"] = [];\n\t\t\t}\n\t\t}\n\t},\n\tcreateContainerBoxCtor: function(type, name, parseMethod, subBoxNames) {\n\t\t//BoxParser.containerBoxCodes.push(type);\n\t\tBoxParser[type+\"Box\"] = function(size) {\n\t\t\tBoxParser.ContainerBox.call(this, type, size, name);\n\t\t\tBoxParser.addSubBoxArrays.call(this, subBoxNames);\n\t\t}\n\t\tBoxParser[type+\"Box\"].prototype = new BoxParser.ContainerBox();\n\t\tif (parseMethod) BoxParser[type+\"Box\"].prototype.parse = parseMethod;\n\t},\n\tcreateMediaSampleEntryCtor: function(mediaType, parseMethod, subBoxNames) {\n\t\tBoxParser.sampleEntryCodes[mediaType] = [];\n\t\tBoxParser[mediaType+\"SampleEntry\"] = function(type, size) {\n\t\t\tBoxParser.SampleEntry.call(this, type, size);\n\t\t\tBoxParser.addSubBoxArrays.call(this, subBoxNames);\n\t\t};\n\t\tBoxParser[mediaType+\"SampleEntry\"].prototype = new BoxParser.SampleEntry();\n\t\tif (parseMethod) BoxParser[mediaType+\"SampleEntry\"].prototype .parse = parseMethod;\n\t},\n\tcreateSampleEntryCtor: function(mediaType, type, parseMethod, subBoxNames) {\n\t\tBoxParser.sampleEntryCodes[mediaType].push(type);\n\t\tBoxParser[type+\"SampleEntry\"] = function(size) {\n\t\t\tBoxParser[mediaType+\"SampleEntry\"].call(this, type, size);\n\t\t\tBoxParser.addSubBoxArrays.call(this, subBoxNames);\n\t\t};\n\t\tBoxParser[type+\"SampleEntry\"].prototype = new BoxParser[mediaType+\"SampleEntry\"]();\n\t\tif (parseMethod) BoxParser[type+\"SampleEntry\"].prototype.parse = parseMethod;\n\t},\n\tcreateEncryptedSampleEntryCtor: function(mediaType, type, parseMethod) {\n\t\tBoxParser.createSampleEntryCtor.call(this, mediaType, type, parseMethod, [\"sinf\"]);\n\t},\n\tcreateSampleGroupCtor: function(type, parseMethod) {\n\t\t//BoxParser.sampleGroupEntryCodes.push(type);\n\t\tBoxParser[type+\"SampleGroupEntry\"] = function(size) {\n\t\t\tBoxParser.SampleGroupEntry.call(this, type, size);\n\t\t}\n\t\tBoxParser[type+\"SampleGroupEntry\"].prototype = new BoxParser.SampleGroupEntry();\n\t\tif (parseMethod) BoxParser[type+\"SampleGroupEntry\"].prototype.parse = parseMethod;\n\t},\n\tcreateTrackGroupCtor: function(type, parseMethod) {\n\t\t//BoxParser.trackGroupTypes.push(type);\n\t\tBoxParser[type+\"TrackGroupTypeBox\"] = function(size) {\n\t\t\tBoxParser.TrackGroupTypeBox.call(this, type, size);\n\t\t}\n\t\tBoxParser[type+\"TrackGroupTypeBox\"].prototype = new BoxParser.TrackGroupTypeBox();\n\t\tif (parseMethod) BoxParser[type+\"TrackGroupTypeBox\"].prototype.parse = parseMethod;\n\t},\n\tcreateUUIDBox: function(uuid, name, isFullBox, isContainerBox, parseMethod) {\n\t\tBoxParser.UUIDs.push(uuid);\n\t\tBoxParser.UUIDBoxes[uuid] = function(size) {\n\t\t\tif (isFullBox) {\n\t\t\t\tBoxParser.FullBox.call(this, \"uuid\", size, name, uuid);\n\t\t\t} else {\n\t\t\t\tif (isContainerBox) {\n\t\t\t\t\tBoxParser.ContainerBox.call(this, \"uuid\", size, name, uuid);\n\t\t\t\t} else {\n\t\t\t\t\tBoxParser.Box.call(this, \"uuid\", size, name, uuid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tBoxParser.UUIDBoxes[uuid].prototype = (isFullBox ? new BoxParser.FullBox() : (isContainerBox ? new BoxParser.ContainerBox() : new BoxParser.Box()));\n\t\tif (parseMethod) {\n\t\t\tif (isFullBox) {\n\t\t\t\tBoxParser.UUIDBoxes[uuid].prototype.parse = function(stream) {\n\t\t\t\t\tthis.parseFullHeader(stream);\n\t\t\t\t\tif (parseMethod) {\n\t\t\t\t\t\tparseMethod.call(this, stream);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tBoxParser.UUIDBoxes[uuid].prototype.parse = parseMethod;\n\t\t\t}\n\t\t}\n\t}\n}\n\nBoxParser.initialize();\n\nBoxParser.TKHD_FLAG_ENABLED    = 0x000001;\nBoxParser.TKHD_FLAG_IN_MOVIE   = 0x000002;\nBoxParser.TKHD_FLAG_IN_PREVIEW = 0x000004;\n\nBoxParser.TFHD_FLAG_BASE_DATA_OFFSET\t= 0x01;\nBoxParser.TFHD_FLAG_SAMPLE_DESC\t\t\t= 0x02;\nBoxParser.TFHD_FLAG_SAMPLE_DUR\t\t\t= 0x08;\nBoxParser.TFHD_FLAG_SAMPLE_SIZE\t\t\t= 0x10;\nBoxParser.TFHD_FLAG_SAMPLE_FLAGS\t\t= 0x20;\nBoxParser.TFHD_FLAG_DUR_EMPTY\t\t\t= 0x10000;\nBoxParser.TFHD_FLAG_DEFAULT_BASE_IS_MOOF= 0x20000;\n\nBoxParser.TRUN_FLAGS_DATA_OFFSET= 0x01;\nBoxParser.TRUN_FLAGS_FIRST_FLAG\t= 0x04;\nBoxParser.TRUN_FLAGS_DURATION\t= 0x100;\nBoxParser.TRUN_FLAGS_SIZE\t\t= 0x200;\nBoxParser.TRUN_FLAGS_FLAGS\t\t= 0x400;\nBoxParser.TRUN_FLAGS_CTS_OFFSET\t= 0x800;\n\nBoxParser.Box.prototype.add = function(name) {\n\treturn this.addBox(new BoxParser[name+\"Box\"]());\n}\n\nBoxParser.Box.prototype.addBox = function(box) {\n\tthis.boxes.push(box);\n\tif (this[box.type+\"s\"]) {\n\t\tthis[box.type+\"s\"].push(box);\n\t} else {\n\t\tthis[box.type] = box;\n\t}\n\treturn box;\n}\n\nBoxParser.Box.prototype.set = function(prop, value) {\n\tthis[prop] = value;\n\treturn this;\n}\n\nBoxParser.Box.prototype.addEntry = function(value, _prop) {\n\tvar prop = _prop || \"entries\";\n\tif (!this[prop]) {\n\t\tthis[prop] = [];\n\t}\n\tthis[prop].push(value);\n\treturn this;\n}\n\nif (typeof exports !== \"undefined\") {\n\texports.BoxParser = BoxParser;\n}\n// file:src/box-parse.js\n/* \n * Copyright (c) Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nBoxParser.parseUUID = function(stream) {\n\treturn BoxParser.parseHex16(stream);\n}\n\nBoxParser.parseHex16 = function(stream) {\n\tvar hex16 = \"\"\n\tfor (var i = 0; i <16; i++) {\n\t\tvar hex = stream.readUint8().toString(16);\n\t\thex16 += (hex.length === 1 ? \"0\"+hex : hex);\n\t}\n\treturn hex16;\n}\n\nBoxParser.parseOneBox = function(stream, headerOnly, parentSize) {\n\tvar box;\n\tvar start = stream.getPosition();\n\tvar hdr_size = 0;\n\tvar diff;\n\tvar uuid;\n\tif (stream.getEndPosition() - start < 8) {\n\t\tLog.debug(\"BoxParser\", \"Not enough data in stream to parse the type and size of the box\");\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA };\n\t}\n\tif (parentSize && parentSize < 8) {\n\t\tLog.debug(\"BoxParser\", \"Not enough bytes left in the parent box to parse a new box\");\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA };\n\t}\n\tvar size = stream.readUint32();\n\tvar type = stream.readString(4);\n\tvar box_type = type;\n\tLog.debug(\"BoxParser\", \"Found box of type '\"+type+\"' and size \"+size+\" at position \"+start);\n\thdr_size = 8;\n\tif (type == \"uuid\") {\n\t\tif ((stream.getEndPosition() - stream.getPosition() < 16) || (parentSize -hdr_size < 16)) {\n\t\t\tstream.seek(start);\n\t\t\tLog.debug(\"BoxParser\", \"Not enough bytes left in the parent box to parse a UUID box\");\n\t\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA };\n\t\t}\n\t\tuuid = BoxParser.parseUUID(stream);\n\t\thdr_size += 16;\n\t\tbox_type = uuid;\n\t}\n\tif (size == 1) {\n\t\tif ((stream.getEndPosition() - stream.getPosition() < 8) || (parentSize && (parentSize - hdr_size) < 8)) {\n\t\t\tstream.seek(start);\n\t\t\tLog.warn(\"BoxParser\", \"Not enough data in stream to parse the extended size of the \\\"\"+type+\"\\\" box\");\n\t\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA };\n\t\t}\n\t\tsize = stream.readUint64();\n\t\thdr_size += 8;\n\t} else if (size === 0) {\n\t\t/* box extends till the end of file or invalid file */\n\t\tif (parentSize) {\n\t\t\tsize = parentSize;\n\t\t} else {\n\t\t\t/* box extends till the end of file */\n\t\t\tif (type !== \"mdat\") {\n\t\t\t\tLog.error(\"BoxParser\", \"Unlimited box size not supported for type: '\"+type+\"'\");\n\t\t\t\tbox = new BoxParser.Box(type, size);\n\t\t\t\treturn { code: BoxParser.OK, box: box, size: box.size };\n\t\t\t}\n\t\t}\n\t}\n\tif (size !== 0 && size < hdr_size) {\n\t\tLog.error(\"BoxParser\", \"Box of type \"+type+\" has an invalid size \"+size+\" (too small to be a box)\");\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA, type: type, size: size, hdr_size: hdr_size, start: start };\n\t}\n\tif (size !== 0 && parentSize && size > parentSize) {\n\t\tLog.error(\"BoxParser\", \"Box of type '\"+type+\"' has a size \"+size+\" greater than its container size \"+parentSize);\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA, type: type, size: size, hdr_size: hdr_size, start: start };\n\t}\n\tif (size !== 0 && start + size > stream.getEndPosition()) {\n\t\tstream.seek(start);\n\t\tLog.info(\"BoxParser\", \"Not enough data in stream to parse the entire '\"+type+\"' box\");\n\t\treturn { code: BoxParser.ERR_NOT_ENOUGH_DATA, type: type, size: size, hdr_size: hdr_size, start: start };\n\t}\n\tif (headerOnly) {\n\t\treturn { code: BoxParser.OK, type: type, size: size, hdr_size: hdr_size, start: start };\n\t} else {\n\t\tif (BoxParser[type+\"Box\"]) {\n\t\t\tbox = new BoxParser[type+\"Box\"](size);\n\t\t} else {\n\t\t\tif (type !== \"uuid\") {\n\t\t\t\tLog.warn(\"BoxParser\", \"Unknown box type: '\"+type+\"'\");\n\t\t\t\tbox = new BoxParser.Box(type, size);\n\t\t\t\tbox.has_unparsed_data = true;\n\t\t\t} else {\n\t\t\t\tif (BoxParser.UUIDBoxes[uuid]) {\n\t\t\t\t\tbox = new BoxParser.UUIDBoxes[uuid](size);\n\t\t\t\t} else {\n\t\t\t\t\tLog.warn(\"BoxParser\", \"Unknown uuid type: '\"+uuid+\"'\");\n\t\t\t\t\tbox = new BoxParser.Box(type, size);\n\t\t\t\t\tbox.uuid = uuid;\n\t\t\t\t\tbox.has_unparsed_data = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tbox.hdr_size = hdr_size;\n\t/* recording the position of the box in the input stream */\n\tbox.start = start;\n\tif (box.write === BoxParser.Box.prototype.write && box.type !== \"mdat\") {\n\t\tLog.info(\"BoxParser\", \"'\"+box_type+\"' box writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\tbox.parseDataAndRewind(stream);\n\t}\n\tbox.parse(stream);\n\tdiff = stream.getPosition() - (box.start+box.size);\n\tif (diff < 0) {\n\t\tLog.warn(\"BoxParser\", \"Parsing of box '\"+box_type+\"' did not read the entire indicated box data size (missing \"+(-diff)+\" bytes), seeking forward\");\n\t\tstream.seek(box.start+box.size);\n\t} else if (diff > 0) {\n\t\tLog.error(\"BoxParser\", \"Parsing of box '\"+box_type+\"' read \"+diff+\" more bytes than the indicated box data size, seeking backwards\");\n\t\tif (box.size !== 0) stream.seek(box.start+box.size);\n\t}\n\treturn { code: BoxParser.OK, box: box, size: box.size };\n}\n\nBoxParser.Box.prototype.parse = function(stream) {\n\tif (this.type != \"mdat\") {\n\t\tthis.data = stream.readUint8Array(this.size-this.hdr_size);\n\t} else {\n\t\tif (this.size === 0) {\n\t\t\tstream.seek(stream.getEndPosition());\n\t\t} else {\n\t\t\tstream.seek(this.start+this.size);\n\t\t}\n\t}\n}\n\n/* Used to parse a box without consuming its data, to allow detailled parsing\n   Useful for boxes for which a write method is not yet implemented */\nBoxParser.Box.prototype.parseDataAndRewind = function(stream) {\n\tthis.data = stream.readUint8Array(this.size-this.hdr_size);\n\t// rewinding\n\tstream.position -= this.size-this.hdr_size;\n}\n\nBoxParser.FullBox.prototype.parseDataAndRewind = function(stream) {\n\tthis.parseFullHeader(stream);\n\tthis.data = stream.readUint8Array(this.size-this.hdr_size);\n\t// restore the header size as if the full header had not been parsed\n\tthis.hdr_size -= 4;\n\t// rewinding\n\tstream.position -= this.size-this.hdr_size;\n}\n\nBoxParser.FullBox.prototype.parseFullHeader = function (stream) {\n\tthis.version = stream.readUint8();\n\tthis.flags = stream.readUint24();\n\tthis.hdr_size += 4;\n}\n\nBoxParser.FullBox.prototype.parse = function (stream) {\n\tthis.parseFullHeader(stream);\n\tthis.data = stream.readUint8Array(this.size-this.hdr_size);\n}\n\nBoxParser.ContainerBox.prototype.parse = function(stream) {\n\tvar ret;\n\tvar box;\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = ret.box;\n\t\t\t/* store the box in the 'boxes' array to preserve box order (for offset) but also store box in a property for more direct access */\n\t\t\tthis.boxes.push(box);\n\t\t\tif (this.subBoxNames && this.subBoxNames.indexOf(box.type) != -1) {\n\t\t\t\tthis[this.subBoxNames[this.subBoxNames.indexOf(box.type)]+\"s\"].push(box);\n\t\t\t} else {\n\t\t\t\tvar box_type = box.type !== \"uuid\" ? box.type : box.uuid;\n\t\t\t\tif (this[box_type]) {\n\t\t\t\t\tLog.warn(\"Box of type \"+box_type+\" already stored in field of this type\");\n\t\t\t\t} else {\n\t\t\t\t\tthis[box_type] = box;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nBoxParser.Box.prototype.parseLanguage = function(stream) {\n\tthis.language = stream.readUint16();\n\tvar chars = [];\n\tchars[0] = (this.language>>10)&0x1F;\n\tchars[1] = (this.language>>5)&0x1F;\n\tchars[2] = (this.language)&0x1F;\n\tthis.languageString = String.fromCharCode(chars[0]+0x60, chars[1]+0x60, chars[2]+0x60);\n}\n\n// file:src/parsing/sampleentries/sampleentry.js\nBoxParser.SAMPLE_ENTRY_TYPE_VISUAL \t\t= \"Visual\";\nBoxParser.SAMPLE_ENTRY_TYPE_AUDIO \t\t= \"Audio\";\nBoxParser.SAMPLE_ENTRY_TYPE_HINT \t\t= \"Hint\";\nBoxParser.SAMPLE_ENTRY_TYPE_METADATA \t= \"Metadata\";\nBoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE \t= \"Subtitle\";\nBoxParser.SAMPLE_ENTRY_TYPE_SYSTEM \t\t= \"System\";\nBoxParser.SAMPLE_ENTRY_TYPE_TEXT \t\t= \"Text\";\n\nBoxParser.SampleEntry.prototype.parseHeader = function(stream) {\n\tstream.readUint8Array(6);\n\tthis.data_reference_index = stream.readUint16();\n\tthis.hdr_size += 8;\n}\n\nBoxParser.SampleEntry.prototype.parse = function(stream) {\n\tthis.parseHeader(stream);\n\tthis.data = stream.readUint8Array(this.size - this.hdr_size);\n}\n\nBoxParser.SampleEntry.prototype.parseDataAndRewind = function(stream) {\n\tthis.parseHeader(stream);\n\tthis.data = stream.readUint8Array(this.size - this.hdr_size);\n\t// restore the header size as if the sample entry header had not been parsed\n\tthis.hdr_size -= 8;\n\t// rewinding\n\tstream.position -= this.size-this.hdr_size;\n}\n\nBoxParser.SampleEntry.prototype.parseFooter = function(stream) {\n\tBoxParser.ContainerBox.prototype.parse.call(this, stream);\n}\n\n// Base SampleEntry types with default parsing\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_HINT);\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA);\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE);\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SYSTEM);\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_TEXT);\n\n//Base SampleEntry types for Audio and Video with specific parsing\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, function(stream) {\n\tvar compressorname_length;\n\tthis.parseHeader(stream);\n\tstream.readUint16();\n\tstream.readUint16();\n\tstream.readUint32Array(3);\n\tthis.width = stream.readUint16();\n\tthis.height = stream.readUint16();\n\tthis.horizresolution = stream.readUint32();\n\tthis.vertresolution = stream.readUint32();\n\tstream.readUint32();\n\tthis.frame_count = stream.readUint16();\n\tcompressorname_length = Math.min(31, stream.readUint8());\n\tthis.compressorname = stream.readString(compressorname_length);\n\tif (compressorname_length < 31) {\n\t\tstream.readString(31 - compressorname_length);\n\t}\n\tthis.depth = stream.readUint16();\n\tstream.readUint16();\n\tthis.parseFooter(stream);\n});\n\nBoxParser.createMediaSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, function(stream) {\n\tthis.parseHeader(stream);\n\tstream.readUint32Array(2);\n\tthis.channel_count = stream.readUint16();\n\tthis.samplesize = stream.readUint16();\n\tstream.readUint16();\n\tstream.readUint16();\n\tthis.samplerate = (stream.readUint32()/(1<<16));\n\tthis.parseFooter(stream);\n});\n\n// Sample entries inheriting from Audio and Video\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avc1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avc2\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avc3\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avc4\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"av01\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"dav1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"hvc1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"hev1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"hvt1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"lhe1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"dvh1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"dvhe\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vvc1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vvi1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vvs1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vvcN\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vp08\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"vp09\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"avs3\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"j2ki\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"mjp2\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \"mjpg\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL,\t\"uncv\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"mp4a\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"ac-3\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"ac-4\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"ec-3\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"Opus\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"mha1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"mha2\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"mhm1\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"mhm2\");\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"fLaC\");\n\n// Encrypted sample entries\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_VISUAL, \t\"encv\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_AUDIO, \t\"enca\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \t\"encu\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SYSTEM, \t\"encs\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_TEXT, \t\t\"enct\");\nBoxParser.createEncryptedSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA, \t\"encm\");\n// file:src/parsing/a1lx.js\nBoxParser.createBoxCtor(\"a1lx\", \"AV1LayeredImageIndexingProperty\", function(stream) {\n\tvar large_size = stream.readUint8() & 1;\n\tvar FieldLength = ((large_size & 1) + 1) * 16;\n\tthis.layer_size = [];\n\tfor (var i = 0; i < 3; i++) {\n\t\tif (FieldLength == 16) {\n\t\t\tthis.layer_size[i] = stream.readUint16();\n\t\t} else {\n\t\t\tthis.layer_size[i] = stream.readUint32();\n\t\t}\n\t}\n});// file:src/parsing/a1op.js\nBoxParser.createBoxCtor(\"a1op\", \"OperatingPointSelectorProperty\", function(stream) {\n\tthis.op_index = stream.readUint8();\n});// file:src/parsing/auxC.js\nBoxParser.createFullBoxCtor(\"auxC\", \"AuxiliaryTypeProperty\", function(stream) {\n\tthis.aux_type = stream.readCString();\n\tvar aux_subtype_length = this.size - this.hdr_size - (this.aux_type.length + 1);\n\tthis.aux_subtype = stream.readUint8Array(aux_subtype_length);\n});// file:src/parsing/av1C.js\nBoxParser.createBoxCtor(\"av1C\", \"AV1CodecConfigurationBox\", function(stream) {\n\tvar i;\n\tvar toparse;\n\tvar tmp = stream.readUint8();\n\tif ((tmp >> 7 & 0x1) !== 1) {\n\t\tLog.error(\"av1C marker problem\");\n\t\treturn;\n\t}\n\tthis.version = tmp & 0x7F;\n\tif (this.version !== 1) {\n\t\tLog.error(\"av1C version \"+this.version+\" not supported\");\n\t\treturn;\n\t}\n\ttmp = stream.readUint8();\n\tthis.seq_profile = (tmp >> 5) & 0x7;\n\tthis.seq_level_idx_0 = tmp & 0x1F;\n\ttmp = stream.readUint8();\n\tthis.seq_tier_0 = (tmp >> 7) & 0x1;\n\tthis.high_bitdepth = (tmp >> 6) & 0x1;\n\tthis.twelve_bit = (tmp >> 5) & 0x1;\n\tthis.monochrome = (tmp >> 4) & 0x1;\n\tthis.chroma_subsampling_x = (tmp >> 3) & 0x1;\n\tthis.chroma_subsampling_y = (tmp >> 2) & 0x1;\n\tthis.chroma_sample_position = (tmp & 0x3);\n\ttmp = stream.readUint8();\n\tthis.reserved_1 = (tmp >> 5) & 0x7;\n\tif (this.reserved_1 !== 0) {\n\t\tLog.error(\"av1C reserved_1 parsing problem\");\n\t\treturn;\n\t}\n\tthis.initial_presentation_delay_present = (tmp >> 4) & 0x1;\n\tif (this.initial_presentation_delay_present === 1) {\n\t\tthis.initial_presentation_delay_minus_one = (tmp & 0xF);\n\t} else {\n\t\tthis.reserved_2 = (tmp & 0xF);\n\t\tif (this.reserved_2 !== 0) {\n\t\t\tLog.error(\"av1C reserved_2 parsing problem\");\n\t\t\treturn;\n\t\t}\n\t}\n\n\tvar configOBUs_length = this.size - this.hdr_size - 4;\n\tthis.configOBUs = stream.readUint8Array(configOBUs_length);\n});\n\n// file:src/parsing/avcC.js\nfunction printPS(ps) {\n\tvar str = \"<table class='inner-table'>\";\n\tstr += \"<thead><tr><th>length</th><th>nalu_data</th></tr></thead>\";\n\tstr += \"<tbody>\";\n\n\tfor (var i=0; i < ps.length; i++) {\n\t\tvar nalu = ps[i];\n\t\tstr += \"<tr>\";\n\t\tstr += \"<td>\"+nalu.length+\"</td>\";\n\t\tstr += \"<td>\";\n\t\tstr += nalu.nalu.reduce(function(str, byte) {\n\t\t\treturn str + byte.toString(16).padStart(2, \"0\");\n\t\t}, \"0x\");\n\t\tstr += \"</td></tr>\";\n\t}\n\tstr += \"</tbody></table>\";\n\treturn str;\n}\n\nBoxParser.createBoxCtor(\"avcC\", \"AVCConfigurationBox\", function(stream) {\n\tvar i;\n\tvar toparse;\n\tthis.configurationVersion = stream.readUint8();\n\tthis.AVCProfileIndication = stream.readUint8();\n\tthis.profile_compatibility = stream.readUint8();\n\tthis.AVCLevelIndication = stream.readUint8();\n\tthis.lengthSizeMinusOne = (stream.readUint8() & 0x3);\n\tthis.nb_SPS_nalus = (stream.readUint8() & 0x1F);\n\ttoparse = this.size - this.hdr_size - 6;\n\tthis.SPS = [];\n\tthis.SPS.toString = function () {\n\t\treturn printPS(this);\n\t}\n\tfor (i = 0; i < this.nb_SPS_nalus; i++) {\n\t\tthis.SPS[i] = {};\n\t\tthis.SPS[i].length = stream.readUint16();\n\t\tthis.SPS[i].nalu = stream.readUint8Array(this.SPS[i].length);\n\t\ttoparse -= 2+this.SPS[i].length;\n\t}\n\tthis.nb_PPS_nalus = stream.readUint8();\n\ttoparse--;\n\tthis.PPS = [];\n\tthis.PPS.toString = function () {\n\t\treturn printPS(this);\n\t}\n\tfor (i = 0; i < this.nb_PPS_nalus; i++) {\n\t\tthis.PPS[i] = {};\n\t\tthis.PPS[i].length = stream.readUint16();\n\t\tthis.PPS[i].nalu = stream.readUint8Array(this.PPS[i].length);\n\t\ttoparse -= 2+this.PPS[i].length;\n\t}\n\tif (toparse>0) {\n\t\tthis.ext = stream.readUint8Array(toparse);\n\t}\n});\n\n// file:src/parsing/btrt.js\nBoxParser.createBoxCtor(\"btrt\", \"BitRateBox\", function(stream) {\n\tthis.bufferSizeDB = stream.readUint32();\n\tthis.maxBitrate = stream.readUint32();\n\tthis.avgBitrate = stream.readUint32();\n});\n\n// file:src/parsing/ccst.js\nBoxParser.createFullBoxCtor(\"ccst\", \"CodingConstraintsBox\", function(stream) {\n\tvar flags = stream.readUint8();\n\tthis.all_ref_pics_intra = ((flags & 0x80) == 0x80);\n\tthis.intra_pred_used = ((flags & 0x40) == 0x40);\n\tthis.max_ref_per_pic = ((flags & 0x3f) >> 2);\n\tstream.readUint24();\n});\n\n// file:src/parsing/cdef.js\nBoxParser.createBoxCtor(\"cdef\", \"ComponentDefinitionBox\", function(stream) {\n    var i;\n    this.channel_count = stream.readUint16();\n    this.channel_indexes = [];\n    this.channel_types = [];\n    this.channel_associations = [];\n    for (i = 0; i < this.channel_count; i++) {\n        this.channel_indexes.push(stream.readUint16());\n        this.channel_types.push(stream.readUint16());\n        this.channel_associations.push(stream.readUint16());\n    }\n});\n\n// file:src/parsing/clap.js\nBoxParser.createBoxCtor(\"clap\", \"CleanApertureBox\", function(stream) {\n\tthis.cleanApertureWidthN = stream.readUint32();\n\tthis.cleanApertureWidthD = stream.readUint32();\n\tthis.cleanApertureHeightN = stream.readUint32();\n\tthis.cleanApertureHeightD = stream.readUint32();\n\tthis.horizOffN = stream.readUint32();\n\tthis.horizOffD = stream.readUint32();\n\tthis.vertOffN = stream.readUint32();\n\tthis.vertOffD = stream.readUint32();\n});// file:src/parsing/clli.js\nBoxParser.createBoxCtor(\"clli\", \"ContentLightLevelBox\", function(stream) {\n\tthis.max_content_light_level = stream.readUint16();\n    this.max_pic_average_light_level = stream.readUint16();\n});\n\n// file:src/parsing/cmex.js\nBoxParser.createFullBoxCtor(\"cmex\", \"CameraExtrinsicMatrixProperty\", function(stream) {\n\tif (this.flags & 0x1) {\n\t\tthis.pos_x = stream.readInt32();\n\t}\n\tif (this.flags & 0x2) {\n\t\tthis.pos_y = stream.readInt32();\n\t}\n\tif (this.flags & 0x4) {\n\t\tthis.pos_z = stream.readInt32();\n\t}\n\tif (this.flags & 0x8) {\n\t\tif (this.version == 0) {\n\t\t\tif (this.flags & 0x10) {\n\t\t\t\tthis.quat_x = stream.readInt32();\n\t\t\t\tthis.quat_y = stream.readInt32();\n\t\t\t\tthis.quat_z = stream.readInt32();\n\t\t\t} else {\n\t\t\t\tthis.quat_x = stream.readInt16();\n\t\t\t\tthis.quat_y = stream.readInt16();\n\t\t\t\tthis.quat_z = stream.readInt16();\n\t\t\t}\n\t\t} else if (this.version == 1) {\n\t\t\t//ViewpointGlobalCoordinateSysRotationStruct rot;\n\t\t}\n\t}\n\tif (this.flags & 0x20) {\n\t\tthis.id = stream.readUint32();\n\t}\n});\n// file:src/parsing/cmin.js\nBoxParser.createFullBoxCtor(\"cmin\", \"CameraIntrinsicMatrixProperty\", function(stream) {\n\tthis.focal_length_x = stream.readInt32();\n\tthis.principal_point_x = stream.readInt32();\n\tthis.principal_point_y = stream.readInt32();\n\tif (this.flags & 0x1) {\n\t\tthis.focal_length_y = stream.readInt32();\n\t\tthis.skew_factor = stream.readInt32();\n\t}\n});// file:src/parsing/cmpd.js\nBoxParser.createBoxCtor(\"cmpd\", \"ComponentDefinitionBox\", function(stream) {\n\tthis.component_count = stream.readUint32();\n\tthis.component_types = [];\n\tthis.component_type_urls = [];\n\tfor (i = 0; i < this.component_count; i++) {\n\t\tvar component_type = stream.readUint16();\n\t\tthis.component_types.push(component_type);\n\t\tif (component_type >= 0x8000) {\n\t\t\tthis.component_type_urls.push(stream.readCString());\n\t\t}\n\t}\n});// file:src/parsing/co64.js\nBoxParser.createFullBoxCtor(\"co64\", \"ChunkLargeOffsetBox\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tentry_count = stream.readUint32();\n\tthis.chunk_offsets = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.chunk_offsets.push(stream.readUint64());\n\t\t}\n\t}\n});\n\n// file:src/parsing/CoLL.js\nBoxParser.createFullBoxCtor(\"CoLL\", \"ContentLightLevelBox\", function(stream) {\n\tthis.maxCLL = stream.readUint16();\n    this.maxFALL = stream.readUint16();\n});\n\n// file:src/parsing/colr.js\nBoxParser.createBoxCtor(\"colr\", \"ColourInformationBox\", function(stream) {\n\tthis.colour_type = stream.readString(4);\n\tif (this.colour_type === 'nclx') {\n\t\tthis.colour_primaries = stream.readUint16();\n\t\tthis.transfer_characteristics = stream.readUint16();\n\t\tthis.matrix_coefficients = stream.readUint16();\n\t\tvar tmp = stream.readUint8();\n\t\tthis.full_range_flag = tmp >> 7;\n\t} else if (this.colour_type === 'rICC') {\n\t\tthis.ICC_profile = stream.readUint8Array(this.size - 4);\n\t} else if (this.colour_type === 'prof') {\n\t\tthis.ICC_profile = stream.readUint8Array(this.size - 4);\n\t}\n});// file:src/parsing/cprt.js\nBoxParser.createFullBoxCtor(\"cprt\", \"CopyrightBox\", function (stream) {\n\tthis.parseLanguage(stream);\n\tthis.notice = stream.readCString();\n});\n\n// file:src/parsing/cslg.js\nBoxParser.createFullBoxCtor(\"cslg\", \"CompositionToDecodeBox\", function(stream) {\n\tvar entry_count;\n\tif (this.version === 0) {\n\t\tthis.compositionToDTSShift = stream.readInt32(); /* signed */\n\t\tthis.leastDecodeToDisplayDelta = stream.readInt32(); /* signed */\n\t\tthis.greatestDecodeToDisplayDelta = stream.readInt32(); /* signed */\n\t\tthis.compositionStartTime = stream.readInt32(); /* signed */\n\t\tthis.compositionEndTime = stream.readInt32(); /* signed */\n\t}\n});\n\n// file:src/parsing/ctts.js\nBoxParser.createFullBoxCtor(\"ctts\", \"CompositionOffsetBox\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tentry_count = stream.readUint32();\n\tthis.sample_counts = [];\n\tthis.sample_offsets = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.sample_counts.push(stream.readUint32());\n\t\t\t/* some files are buggy and declare version=0 while using signed offsets.\n\t\t\t   The likelyhood of using the most significant bit in a 32-bits time offset is very low,\n\t\t\t   so using signed value here as well */\n\t\t\t   var value = stream.readInt32();\n\t\t\t   if (value < 0) {\n\t\t\t   \t\tLog.warn(\"BoxParser\", \"ctts box uses negative values without using version 1\");\n\t\t\t   }\n\t\t\tthis.sample_offsets.push(value);\n\t\t}\n\t} else if (this.version == 1) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.sample_counts.push(stream.readUint32());\n\t\t\tthis.sample_offsets.push(stream.readInt32()); /* signed */\n\t\t}\n\t}\n});\n\n// file:src/parsing/dac3.js\nBoxParser.createBoxCtor(\"dac3\", \"AC3SpecificBox\", function(stream) {\n\tvar tmp_byte1 = stream.readUint8();\n\tvar tmp_byte2 = stream.readUint8();\n\tvar tmp_byte3 = stream.readUint8();\n\tthis.fscod = tmp_byte1 >> 6;\n\tthis.bsid  = ((tmp_byte1 >> 1) & 0x1F);\n\tthis.bsmod = ((tmp_byte1 & 0x1) <<  2) | ((tmp_byte2 >> 6) & 0x3);\n\tthis.acmod = ((tmp_byte2 >> 3) & 0x7);\n\tthis.lfeon = ((tmp_byte2 >> 2) & 0x1);\n\tthis.bit_rate_code = (tmp_byte2 & 0x3) | ((tmp_byte3 >> 5) & 0x7);\n});\n\n// file:src/parsing/dec3.js\nBoxParser.createBoxCtor(\"dec3\", \"EC3SpecificBox\", function(stream) {\n\tvar tmp_16 = stream.readUint16();\n\tthis.data_rate = tmp_16 >> 3;\n\tthis.num_ind_sub = tmp_16 & 0x7;\n\tthis.ind_subs = [];\n\tfor (var i = 0; i < this.num_ind_sub+1; i++) {\n\t\tvar ind_sub = {};\n\t\tthis.ind_subs.push(ind_sub);\n\t\tvar tmp_byte1 = stream.readUint8();\n\t\tvar tmp_byte2 = stream.readUint8();\n\t\tvar tmp_byte3 = stream.readUint8();\n\t\tind_sub.fscod = tmp_byte1 >> 6;\n\t\tind_sub.bsid  = ((tmp_byte1 >> 1) & 0x1F);\n\t\tind_sub.bsmod = ((tmp_byte1 & 0x1) << 4) | ((tmp_byte2 >> 4) & 0xF);\n\t\tind_sub.acmod = ((tmp_byte2 >> 1) & 0x7);\n\t\tind_sub.lfeon = (tmp_byte2 & 0x1);\n\t\tind_sub.num_dep_sub = ((tmp_byte3 >> 1) & 0xF);\n\t\tif (ind_sub.num_dep_sub > 0) {\n\t\t\tind_sub.chan_loc = ((tmp_byte3 & 0x1) << 8) | stream.readUint8();\n\t\t}\n\t}\n});\n\n// file:src/parsing/dfLa.js\nBoxParser.createFullBoxCtor(\"dfLa\", \"FLACSpecificBox\", function(stream) {\n    var BLOCKTYPE_MASK = 0x7F;\n    var LASTMETADATABLOCKFLAG_MASK = 0x80;\n\n    var boxesFound = [];\n    var knownBlockTypes = [\n        \"STREAMINFO\",\n        \"PADDING\",\n        \"APPLICATION\",\n        \"SEEKTABLE\",\n        \"VORBIS_COMMENT\",\n        \"CUESHEET\",\n        \"PICTURE\",\n        \"RESERVED\"\n    ];\n\n    // for (i=0; ; i++) { // to end of box\n    do {\n        var flagAndType = stream.readUint8();\n\n        var type = Math.min(\n            (flagAndType & BLOCKTYPE_MASK),\n            (knownBlockTypes.length - 1)\n        );\n\n        // if this is a STREAMINFO block, read the true samplerate since this\n        // can be different to the AudioSampleEntry samplerate.\n        if (!(type)) {\n            // read past all the other stuff\n            stream.readUint8Array(13);\n\n            // extract samplerate\n            this.samplerate = (stream.readUint32() >> 12);\n\n            // read to end of STREAMINFO\n            stream.readUint8Array(20);\n        } else {\n            // not interested in other block types so just discard length bytes\n            stream.readUint8Array(stream.readUint24());\n        }\n\n        boxesFound.push(knownBlockTypes[type]);\n\n        if (!!(flagAndType & LASTMETADATABLOCKFLAG_MASK)) {\n            break;\n        }\n    } while (true);\n\n    this.numMetadataBlocks =\n        boxesFound.length + \" (\" + boxesFound.join(\", \") + \")\";\n});\n// file:src/parsing/dimm.js\nBoxParser.createBoxCtor(\"dimm\", \"hintimmediateBytesSent\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/dmax.js\nBoxParser.createBoxCtor(\"dmax\", \"hintlongestpacket\", function(stream) {\n\tthis.time = stream.readUint32();\n});\n\n// file:src/parsing/dmed.js\nBoxParser.createBoxCtor(\"dmed\", \"hintmediaBytesSent\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/dOps.js\nBoxParser.createBoxCtor(\"dOps\", \"OpusSpecificBox\", function(stream) {\n\tthis.Version = stream.readUint8();\n\tthis.OutputChannelCount = stream.readUint8();\n\tthis.PreSkip = stream.readUint16();\n\tthis.InputSampleRate = stream.readUint32();\n\tthis.OutputGain = stream.readInt16();\n\tthis.ChannelMappingFamily = stream.readUint8();\n\tif (this.ChannelMappingFamily !== 0) {\n\t\tthis.StreamCount = stream.readUint8();\n\t\tthis.CoupledCount = stream.readUint8();\n\t\tthis.ChannelMapping = [];\n\t\tfor (var i = 0; i < this.OutputChannelCount; i++) {\n\t\t\tthis.ChannelMapping[i] = stream.readUint8();\n\t\t}\n\t}\n});\n\n// file:src/parsing/dref.js\nBoxParser.createFullBoxCtor(\"dref\", \"DataReferenceBox\", function(stream) {\n\tvar ret;\n\tvar box;\n\tthis.entries = [];\n\tvar entry_count = stream.readUint32();\n\tfor (var i = 0; i < entry_count; i++) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = ret.box;\n\t\t\tthis.entries.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/drep.js\nBoxParser.createBoxCtor(\"drep\", \"hintrepeatedBytesSent\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/elng.js\nBoxParser.createFullBoxCtor(\"elng\", \"ExtendedLanguageBox\", function(stream) {\n\tthis.extended_language = stream.readString(this.size-this.hdr_size);\n});\n\n// file:src/parsing/elst.js\nBoxParser.createFullBoxCtor(\"elst\", \"EditListBox\", function(stream) {\n\tthis.entries = [];\n\tvar entry_count = stream.readUint32();\n\tfor (var i = 0; i < entry_count; i++) {\n\t\tvar entry = {};\n\t\tthis.entries.push(entry);\n\t\tif (this.version === 1) {\n\t\t\tentry.segment_duration = stream.readUint64();\n\t\t\tentry.media_time = stream.readInt64();\n\t\t} else {\n\t\t\tentry.segment_duration = stream.readUint32();\n\t\t\tentry.media_time = stream.readInt32();\n\t\t}\n\t\tentry.media_rate_integer = stream.readInt16();\n\t\tentry.media_rate_fraction = stream.readInt16();\n\t}\n});\n\n// file:src/parsing/emsg.js\nBoxParser.createFullBoxCtor(\"emsg\", \"EventMessageBox\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.timescale \t\t\t\t\t= stream.readUint32();\n\t\tthis.presentation_time \t\t\t= stream.readUint64();\n\t\tthis.event_duration\t\t\t \t= stream.readUint32();\n\t\tthis.id \t\t\t\t\t\t= stream.readUint32();\n\t\tthis.scheme_id_uri \t\t\t\t= stream.readCString();\n\t\tthis.value \t\t\t\t\t\t= stream.readCString();\n\t} else {\n\t\tthis.scheme_id_uri \t\t\t\t= stream.readCString();\n\t\tthis.value \t\t\t\t\t\t= stream.readCString();\n\t\tthis.timescale \t\t\t\t\t= stream.readUint32();\n\t\tthis.presentation_time_delta \t= stream.readUint32();\n\t\tthis.event_duration\t\t\t \t= stream.readUint32();\n\t\tthis.id \t\t\t\t\t\t= stream.readUint32();\n\t}\n\tvar message_size = this.size - this.hdr_size - (4*4 + (this.scheme_id_uri.length+1) + (this.value.length+1));\n\tif (this.version == 1) {\n\t\tmessage_size -= 4;\n\t}\n\tthis.message_data = stream.readUint8Array(message_size);\n});\n\n// file:src/parsing/EntityToGroup.js\n// ISO/IEC 14496-12:2022 Section 8.18.3 Entity to group box\nBoxParser.createEntityToGroupCtor = function(type, parseMethod) {\n    BoxParser[type+\"Box\"] = function(size) {\n        BoxParser.FullBox.call(this, type, size);\n    }\n    BoxParser[type+\"Box\"].prototype = new BoxParser.FullBox();\n    BoxParser[type+\"Box\"].prototype.parse = function(stream) {\n        this.parseFullHeader(stream);\n        if (parseMethod) {\n            parseMethod.call(this, stream);\n        } else {\n            this.group_id = stream.readUint32();\n            this.num_entities_in_group = stream.readUint32();\n            this.entity_ids = [];\n            for (i = 0; i < this.num_entities_in_group; i++) {\n                var entity_id = stream.readUint32();\n                this.entity_ids.push(entity_id);\n            }\n        }\n    };\n};\n\n// Auto exposure bracketing (ISO/IEC 23008-12:2022 Section 6.8.6.2.1)\nBoxParser.createEntityToGroupCtor(\"aebr\");\n\n// Flash exposure bracketing (ISO/IEC 23008-12:2022 Section 6.8.6.5.1)\nBoxParser.createEntityToGroupCtor(\"afbr\");\n\n// Album collection (ISO/IEC 23008-12:2022 Section 6.8.7.1)\nBoxParser.createEntityToGroupCtor(\"albc\");\n\n// Alternative entity (ISO/IEC 14496-12:2022 Section 8.18.3.1)\nBoxParser.createEntityToGroupCtor(\"altr\");\n\n// Burst image entity group (ISO/IEC 23008-12:2022 Section 6.8.2.2)\nBoxParser.createEntityToGroupCtor(\"brst\");\n\n// Depth of field bracketing (ISO/IEC 23008-12:2022 Section 6.8.6.6.1)\nBoxParser.createEntityToGroupCtor(\"dobr\");\n\n// Equivalent entity (ISO/IEC 23008-12:2022 Section 6.8.1.1)\nBoxParser.createEntityToGroupCtor(\"eqiv\");\n\n// Favourites collection (ISO/IEC 23008-12:2022 Section 6.8.7.2)\nBoxParser.createEntityToGroupCtor(\"favc\");\n\n// Focus bracketing (ISO/IEC 23008-12:2022 Section 6.8.6.4.1)\nBoxParser.createEntityToGroupCtor(\"fobr\");\n\n// Audio to image entity group (ISO/IEC 23008-12:2022 Section 6.8.4)\nBoxParser.createEntityToGroupCtor(\"iaug\");\n\n// Panorama (ISO/IEC 23008-12:2022 Section 6.8.8.1)\nBoxParser.createEntityToGroupCtor(\"pano\");\n\n// Slideshow (ISO/IEC 23008-12:2022 Section 6.8.9.1)\nBoxParser.createEntityToGroupCtor(\"slid\");\n\n// Stereo pair (ISO/IEC 23008-12:2022 Section 6.8.5)\nBoxParser.createEntityToGroupCtor(\"ster\");\n\n// Time-synchronised capture entity group (ISO/IEC 23008-12:2022 Section 6.8.3)\nBoxParser.createEntityToGroupCtor(\"tsyn\");\n\n// White balance bracketing (ISO/IEC 23008-12:2022 Section 6.8.6.3.1)\nBoxParser.createEntityToGroupCtor(\"wbbr\");\n\n// Alternative entity (ISO/IEC 23008-12:2022 AMD1 Section 6.8.10)\nBoxParser.createEntityToGroupCtor(\"prgr\");\n\n// Image Pyramid entity group (ISO/IEC 23008-12:20xx Section 6.8.11)\nBoxParser.createEntityToGroupCtor(\"pymd\", function(stream) {\n    this.group_id = stream.readUint32();\n    this.num_entities_in_group = stream.readUint32();\n    this.entity_ids = [];\n    for (var i = 0; i < this.num_entities_in_group; i++) {\n        var entity_id = stream.readUint32();\n        this.entity_ids.push(entity_id);\n    }\n    \n    this.tile_size_x = stream.readUint16();\n    this.tile_size_y = stream.readUint16();\n    this.layer_binning = [];\n    this.tiles_in_layer_column_minus1 = [];\n    this.tiles_in_layer_row_minus1 = [];\n    for (i = 0; i < this.num_entities_in_group; i++) {\n        this.layer_binning[i] = stream.readUint16();\n        this.tiles_in_layer_row_minus1[i] = stream.readUint16();\n        this.tiles_in_layer_column_minus1[i] = stream.readUint16();\n    }\n});\n\n// file:src/parsing/esds.js\nBoxParser.createFullBoxCtor(\"esds\", \"ElementaryStreamDescriptorBox\", function(stream) {\n\tvar esd_data = stream.readUint8Array(this.size-this.hdr_size);\n\tif (typeof MPEG4DescriptorParser !== \"undefined\") {\n\t\tvar esd_parser = new MPEG4DescriptorParser();\n\t\tthis.esd = esd_parser.parseOneDescriptor(new DataStream(esd_data.buffer, 0, DataStream.BIG_ENDIAN));\n\t}\n});\n\n// file:src/parsing/fiel.js\nBoxParser.createBoxCtor(\"fiel\", \"FieldHandlingBox\", function(stream) {\n\tthis.fieldCount = stream.readUint8();\n\tthis.fieldOrdering = stream.readUint8();\n});\n\n// file:src/parsing/frma.js\nBoxParser.createBoxCtor(\"frma\", \"OriginalFormatBox\", function(stream) {\n\tthis.data_format = stream.readString(4);\n});\n\n// file:src/parsing/ftyp.js\nBoxParser.createBoxCtor(\"ftyp\", \"FileTypeBox\", function(stream) {\n\tvar toparse = this.size - this.hdr_size;\n\tthis.major_brand = stream.readString(4);\n\tthis.minor_version = stream.readUint32();\n\ttoparse -= 8;\n\tthis.compatible_brands = [];\n\tvar i = 0;\n\twhile (toparse>=4) {\n\t\tthis.compatible_brands[i] = stream.readString(4);\n\t\ttoparse -= 4;\n\t\ti++;\n\t}\n});\n\n// file:src/parsing/hdlr.js\nBoxParser.createFullBoxCtor(\"hdlr\", \"HandlerBox\", function(stream) {\n\tif (this.version === 0) {\n\t\tstream.readUint32();\n\t\tthis.handler = stream.readString(4);\n\t\tstream.readUint32Array(3);\n\t\tthis.name = stream.readString(this.size-this.hdr_size-20);\n\t\tif (this.name[this.name.length-1]==='\\0') {\n\t\t\tthis.name = this.name.slice(0,-1);\n\t\t}\n\t}\n});\n\n// file:src/parsing/hvcC.js\nBoxParser.createBoxCtor(\"hvcC\", \"HEVCConfigurationBox\", function(stream) {\n\tvar i, j;\n\tvar nb_nalus;\n\tvar length;\n\tvar tmp_byte;\n\tthis.configurationVersion = stream.readUint8();\n\ttmp_byte = stream.readUint8();\n\tthis.general_profile_space = tmp_byte >> 6;\n\tthis.general_tier_flag = (tmp_byte & 0x20) >> 5;\n\tthis.general_profile_idc = (tmp_byte & 0x1F);\n\tthis.general_profile_compatibility = stream.readUint32();\n\tthis.general_constraint_indicator = stream.readUint8Array(6);\n\tthis.general_level_idc = stream.readUint8();\n\tthis.min_spatial_segmentation_idc = stream.readUint16() & 0xFFF;\n\tthis.parallelismType = (stream.readUint8() & 0x3);\n\tthis.chroma_format_idc = (stream.readUint8() & 0x3);\n\tthis.bit_depth_luma_minus8 = (stream.readUint8() & 0x7);\n\tthis.bit_depth_chroma_minus8 = (stream.readUint8() & 0x7);\n\tthis.avgFrameRate = stream.readUint16();\n\ttmp_byte = stream.readUint8();\n\tthis.constantFrameRate = (tmp_byte >> 6);\n\tthis.numTemporalLayers = (tmp_byte & 0XD) >> 3;\n\tthis.temporalIdNested = (tmp_byte & 0X4) >> 2;\n\tthis.lengthSizeMinusOne = (tmp_byte & 0X3);\n\n\tthis.nalu_arrays = [];\n\tthis.nalu_arrays.toString = function () {\n\t\tvar str = \"<table class='inner-table'>\";\n\t\tstr += \"<thead><tr><th>completeness</th><th>nalu_type</th><th>nalu_data</th></tr></thead>\";\n\t\tstr += \"<tbody>\";\n\n\t\tfor (var i=0; i<this.length; i++) {\n\t\t\tvar nalu_array = this[i];\n\t\t\tstr += \"<tr>\";\n\t\t\tstr += \"<td rowspan='\"+nalu_array.length+\"'>\"+nalu_array.completeness+\"</td>\";\n\t\t\tstr += \"<td rowspan='\"+nalu_array.length+\"'>\"+nalu_array.nalu_type+\"</td>\";\n\t\t\tfor (var j=0; j<nalu_array.length; j++) {\n\t\t\t\tvar nalu = nalu_array[j];\n\t\t\t\tif (j !== 0) str += \"<tr>\";\n\t\t\t\tstr += \"<td>\";\n\t\t\t\tstr += nalu.data.reduce(function(str, byte) {\n\t\t\t\t\treturn str + byte.toString(16).padStart(2, \"0\");\n\t\t\t\t}, \"0x\");\n\t\t\t\tstr += \"</td></tr>\";\n\t\t\t}\n\t\t}\n\t\tstr += \"</tbody></table>\";\n\t\treturn str;\n\t}\n\tvar numOfArrays = stream.readUint8();\n\tfor (i = 0; i < numOfArrays; i++) {\n\t\tvar nalu_array = [];\n\t\tthis.nalu_arrays.push(nalu_array);\n\t\ttmp_byte = stream.readUint8()\n\t\tnalu_array.completeness = (tmp_byte & 0x80) >> 7;\n\t\tnalu_array.nalu_type = tmp_byte & 0x3F;\n\t\tvar numNalus = stream.readUint16();\n\t\tfor (j = 0; j < numNalus; j++) {\n\t\t\tvar nalu = {}\n\t\t\tnalu_array.push(nalu);\n\t\t\tlength = stream.readUint16();\n\t\t\tnalu.data   = stream.readUint8Array(length);\n\t\t}\n\t}\n});\n\n// file:src/parsing/iinf.js\nBoxParser.createFullBoxCtor(\"iinf\", \"ItemInfoBox\", function(stream) {\n\tvar ret;\n\tif (this.version === 0) {\n\t\tthis.entry_count = stream.readUint16();\n\t} else {\n\t\tthis.entry_count = stream.readUint32();\n\t}\n\tthis.item_infos = [];\n\tfor (var i = 0; i < this.entry_count; i++) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tif (ret.box.type !== \"infe\") {\n\t\t\t\tLog.error(\"BoxParser\", \"Expected 'infe' box, got \"+ret.box.type);\n\t\t\t}\n\t\t\tthis.item_infos[i] = ret.box;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/iloc.js\nBoxParser.createFullBoxCtor(\"iloc\", \"ItemLocationBox\", function(stream) {\n\tvar byte;\n\tbyte = stream.readUint8();\n\tthis.offset_size = (byte >> 4) & 0xF;\n\tthis.length_size = byte & 0xF;\n\tbyte = stream.readUint8();\n\tthis.base_offset_size = (byte >> 4) & 0xF;\n\tif (this.version === 1 || this.version === 2) {\n\t\tthis.index_size = byte & 0xF;\n\t} else {\n\t\tthis.index_size = 0;\n\t\t// reserved = byte & 0xF;\n\t}\n\tthis.items = [];\n\tvar item_count = 0;\n\tif (this.version < 2) {\n\t\titem_count = stream.readUint16();\n\t} else if (this.version === 2) {\n\t\titem_count = stream.readUint32();\n\t} else {\n\t\tthrow \"version of iloc box not supported\";\n\t}\n\tfor (var i = 0; i < item_count; i++) {\n\t\tvar item = {};\n\t\tthis.items.push(item);\n\t\tif (this.version < 2) {\n\t\t\titem.item_ID = stream.readUint16();\n\t\t} else if (this.version === 2) {\n\t\t\titem.item_ID = stream.readUint32();\n\t\t} else {\n\t\t\tthrow \"version of iloc box not supported\";\n\t\t}\n\t\tif (this.version === 1 || this.version === 2) {\n\t\t\titem.construction_method = (stream.readUint16() & 0xF);\n\t\t} else {\n\t\t\titem.construction_method = 0;\n\t\t}\n\t\titem.data_reference_index = stream.readUint16();\n\t\tswitch(this.base_offset_size) {\n\t\t\tcase 0:\n\t\t\t\titem.base_offset = 0;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\titem.base_offset = stream.readUint32();\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\titem.base_offset = stream.readUint64();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow \"Error reading base offset size\";\n\t\t}\n\t\tvar extent_count = stream.readUint16();\n\t\titem.extents = [];\n\t\tfor (var j=0; j < extent_count; j++) {\n\t\t\tvar extent = {};\n\t\t\titem.extents.push(extent);\n\t\t\tif (this.version === 1 || this.version === 2) {\n\t\t\t\tswitch(this.index_size) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\textent.extent_index = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\textent.extent_index = stream.readUint32();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\textent.extent_index = stream.readUint64();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow \"Error reading extent index\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch(this.offset_size) {\n\t\t\t\tcase 0:\n\t\t\t\t\textent.extent_offset = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\textent.extent_offset = stream.readUint32();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\textent.extent_offset = stream.readUint64();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Error reading extent index\";\n\t\t\t}\n\t\t\tswitch(this.length_size) {\n\t\t\t\tcase 0:\n\t\t\t\t\textent.extent_length = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\textent.extent_length = stream.readUint32();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\textent.extent_length = stream.readUint64();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Error reading extent index\";\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/imir.js\nBoxParser.createBoxCtor(\"imir\", \"ImageMirror\", function(stream) {\n\tvar tmp = stream.readUint8();\n\tthis.reserved = tmp >> 7;\n\tthis.axis = tmp & 1;\n});// file:src/parsing/infe.js\nBoxParser.createFullBoxCtor(\"infe\", \"ItemInfoEntry\", function(stream) {\n\tif (this.version === 0 || this.version === 1) {\n\t\tthis.item_ID = stream.readUint16();\n\t\tthis.item_protection_index = stream.readUint16();\n\t\tthis.item_name = stream.readCString();\n\t\tthis.content_type = stream.readCString();\n\t\tthis.content_encoding = stream.readCString();\n\t}\n\tif (this.version === 1) {\n\t\tthis.extension_type = stream.readString(4);\n\t\tLog.warn(\"BoxParser\", \"Cannot parse extension type\");\n\t\tstream.seek(this.start+this.size);\n\t\treturn;\n\t}\n\tif (this.version >= 2) {\n\t\tif (this.version === 2) {\n\t\t\tthis.item_ID = stream.readUint16();\n\t\t} else if (this.version === 3) {\n\t\t\tthis.item_ID = stream.readUint32();\n\t\t}\n\t\tthis.item_protection_index = stream.readUint16();\n\t\tthis.item_type = stream.readString(4);\n\t\tthis.item_name = stream.readCString();\n\t\tif (this.item_type === \"mime\") {\n\t\t\tthis.content_type = stream.readCString();\n\t\t\tthis.content_encoding = stream.readCString();\n\t\t} else if (this.item_type === \"uri \") {\n\t\t\tthis.item_uri_type = stream.readCString();\n\t\t}\n\t}\n});\n// file:src/parsing/ipma.js\nBoxParser.createFullBoxCtor(\"ipma\", \"ItemPropertyAssociationBox\", function(stream) {\n\tvar i, j;\n\tentry_count = stream.readUint32();\n\tthis.associations = [];\n\tfor(i=0; i<entry_count; i++) {\n\t\tvar item_assoc = {};\n\t\tthis.associations.push(item_assoc);\n\t\tif (this.version < 1) {\n\t\t\titem_assoc.id = stream.readUint16();\n\t\t} else {\n\t\t\titem_assoc.id = stream.readUint32();\n\t\t}\n\t\tvar association_count = stream.readUint8();\n\t\titem_assoc.props = [];\n\t\tfor (j = 0; j < association_count; j++) {\n\t\t\tvar tmp = stream.readUint8();\n\t\t\tvar p = {};\n\t\t\titem_assoc.props.push(p);\n\t\t\tp.essential = ((tmp & 0x80) >> 7) === 1;\n\t\t\tif (this.flags & 0x1) {\n\t\t\t\tp.property_index = (tmp & 0x7F) << 8 | stream.readUint8();\n\t\t\t} else {\n\t\t\t\tp.property_index = (tmp & 0x7F);\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/iref.js\nBoxParser.createFullBoxCtor(\"iref\", \"ItemReferenceBox\", function(stream) {\n\tvar ret;\n\tvar entryCount;\n\tvar box;\n\tthis.references = [];\n\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, true, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tif (this.version === 0) {\n\t\t\t\tbox = new BoxParser.SingleItemTypeReferenceBox(ret.type, ret.size, ret.hdr_size, ret.start);\n\t\t\t} else {\n\t\t\t\tbox = new BoxParser.SingleItemTypeReferenceBoxLarge(ret.type, ret.size, ret.hdr_size, ret.start);\n\t\t\t}\n\t\t\tif (box.write === BoxParser.Box.prototype.write && box.type !== \"mdat\") {\n\t\t\t\tLog.warn(\"BoxParser\", box.type+\" box writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\t\t\tbox.parseDataAndRewind(stream);\n\t\t\t}\n\t\t\tbox.parse(stream);\n\t\t\tthis.references.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n// file:src/parsing/irot.js\nBoxParser.createBoxCtor(\"irot\", \"ImageRotation\", function(stream) {\n\tthis.angle = stream.readUint8() & 0x3;\n});\n\n// file:src/parsing/ispe.js\nBoxParser.createFullBoxCtor(\"ispe\", \"ImageSpatialExtentsProperty\", function(stream) {\n\tthis.image_width = stream.readUint32();\n\tthis.image_height = stream.readUint32();\n});// file:src/parsing/kind.js\nBoxParser.createFullBoxCtor(\"kind\", \"KindBox\", function(stream) {\n\tthis.schemeURI = stream.readCString();\n\tthis.value = stream.readCString();\n});\n// file:src/parsing/leva.js\nBoxParser.createFullBoxCtor(\"leva\", \"LevelAssignmentBox\", function(stream) {\n\tvar count = stream.readUint8();\n\tthis.levels = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tvar level = {};\n\t\tthis.levels[i] = level;\n\t\tlevel.track_ID = stream.readUint32();\n\t\tvar tmp_byte = stream.readUint8();\n\t\tlevel.padding_flag = tmp_byte >> 7;\n\t\tlevel.assignment_type = tmp_byte & 0x7F;\n\t\tswitch (level.assignment_type) {\n\t\t\tcase 0:\n\t\t\t\tlevel.grouping_type = stream.readString(4);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tlevel.grouping_type = stream.readString(4);\n\t\t\t\tlevel.grouping_type_parameter = stream.readUint32();\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tlevel.sub_track_id = stream.readUint32();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tLog.warn(\"BoxParser\", \"Unknown leva assignement type\");\n\t\t}\n\t}\n});\n\n// file:src/parsing/lhvC.js\nBoxParser.createBoxCtor(\"lhvC\", \"LHEVCConfigurationBox\", function(stream) {\n\tvar i, j;\n\tvar tmp_byte;\n\tthis.configurationVersion = stream.readUint8();\n\tthis.min_spatial_segmentation_idc = stream.readUint16() & 0xFFF;\n\tthis.parallelismType = (stream.readUint8() & 0x3);\n\ttmp_byte = stream.readUint8();\n\tthis.numTemporalLayers = (tmp_byte & 0XD) >> 3;\n\tthis.temporalIdNested = (tmp_byte & 0X4) >> 2;\n\tthis.lengthSizeMinusOne = (tmp_byte & 0X3);\n\n\tthis.nalu_arrays = [];\n\tthis.nalu_arrays.toString = function () {\n\t\tvar str = \"<table class='inner-table'>\";\n\t\tstr += \"<thead><tr><th>completeness</th><th>nalu_type</th><th>nalu_data</th></tr></thead>\";\n\t\tstr += \"<tbody>\";\n\n\t\tfor (var i=0; i<this.length; i++) {\n\t\t\tvar nalu_array = this[i];\n\t\t\tstr += \"<tr>\";\n\t\t\tstr += \"<td rowspan='\"+nalu_array.length+\"'>\"+nalu_array.completeness+\"</td>\";\n\t\t\tstr += \"<td rowspan='\"+nalu_array.length+\"'>\"+nalu_array.nalu_type+\"</td>\";\n\t\t\tfor (var j=0; j<nalu_array.length; j++) {\n\t\t\t\tvar nalu = nalu_array[j];\n\t\t\t\tif (j !== 0) str += \"<tr>\";\n\t\t\t\tstr += \"<td>\";\n\t\t\t\tstr += nalu.data.reduce(function(str, byte) {\n\t\t\t\t\treturn str + byte.toString(16).padStart(2, \"0\");\n\t\t\t\t}, \"0x\");\n\t\t\t\tstr += \"</td></tr>\";\n\t\t\t}\n\t\t}\n\t\tstr += \"</tbody></table>\";\n\t\treturn str;\n\t}\n\tvar numOfArrays = stream.readUint8();\n\tfor (i = 0; i < numOfArrays; i++) {\n\t\tvar nalu_array = [];\n\t\tthis.nalu_arrays.push(nalu_array);\n\t\ttmp_byte = stream.readUint8()\n\t\tnalu_array.completeness = (tmp_byte & 0x80) >> 7;\n\t\tnalu_array.nalu_type = tmp_byte & 0x3F;\n\t\tvar numNalus = stream.readUint16();\n\t\tfor (j = 0; j < numNalus; j++) {\n\t\t\tvar nalu = {}\n\t\t\tnalu_array.push(nalu);\n\t\t\tvar length = stream.readUint16();\n\t\t\tnalu.data  = stream.readUint8Array(length);\n\t\t}\n\t}\n});\n\n// file:src/parsing/lsel.js\nBoxParser.createBoxCtor(\"lsel\", \"LayerSelectorProperty\", function(stream) {\n\tthis.layer_id = stream.readUint16();\n});// file:src/parsing/maxr.js\nBoxParser.createBoxCtor(\"maxr\", \"hintmaxrate\", function(stream) {\n\tthis.period = stream.readUint32();\n\tthis.bytes = stream.readUint32();\n});\n\n// file:src/parsing/mdcv.js\nfunction ColorPoint(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nColorPoint.prototype.toString = function() {\n    return \"(\"+this.x+\",\"+this.y+\")\";\n}\n\nBoxParser.createBoxCtor(\"mdcv\", \"MasteringDisplayColourVolumeBox\", function(stream) {\n    this.display_primaries = [];\n    this.display_primaries[0] = new ColorPoint(stream.readUint16(),stream.readUint16());\n    this.display_primaries[1] = new ColorPoint(stream.readUint16(),stream.readUint16());\n    this.display_primaries[2] = new ColorPoint(stream.readUint16(),stream.readUint16());\n    this.white_point = new ColorPoint(stream.readUint16(),stream.readUint16());\n    this.max_display_mastering_luminance = stream.readUint32();\n    this.min_display_mastering_luminance = stream.readUint32();\n});\n\n// file:src/parsing/mdhd.js\nBoxParser.createFullBoxCtor(\"mdhd\", \"MediaHeaderBox\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.creation_time = stream.readUint64();\n\t\tthis.modification_time = stream.readUint64();\n\t\tthis.timescale = stream.readUint32();\n\t\tthis.duration = stream.readUint64();\n\t} else {\n\t\tthis.creation_time = stream.readUint32();\n\t\tthis.modification_time = stream.readUint32();\n\t\tthis.timescale = stream.readUint32();\n\t\tthis.duration = stream.readUint32();\n\t}\n\tthis.parseLanguage(stream);\n\tstream.readUint16();\n});\n\n// file:src/parsing/mehd.js\nBoxParser.createFullBoxCtor(\"mehd\", \"MovieExtendsHeaderBox\", function(stream) {\n\tif (this.flags & 0x1) {\n\t\tLog.warn(\"BoxParser\", \"mehd box incorrectly uses flags set to 1, converting version to 1\");\n\t\tthis.version = 1;\n\t}\n\tif (this.version == 1) {\n\t\tthis.fragment_duration = stream.readUint64();\n\t} else {\n\t\tthis.fragment_duration = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/meta.js\nBoxParser.createFullBoxCtor(\"meta\", \"MetaBox\", function(stream) {\n\tthis.boxes = [];\n\tBoxParser.ContainerBox.prototype.parse.call(this, stream);\n});\n// file:src/parsing/mfhd.js\nBoxParser.createFullBoxCtor(\"mfhd\", \"MovieFragmentHeaderBox\", function(stream) {\n\tthis.sequence_number = stream.readUint32();\n});\n\n// file:src/parsing/mfro.js\nBoxParser.createFullBoxCtor(\"mfro\", \"MovieFragmentRandomAccessOffsetBox\", function(stream) {\n\tthis._size = stream.readUint32();\n});\n\n// file:src/parsing/mskC.js\nBoxParser.createFullBoxCtor(\"mskC\", \"MaskConfigurationProperty\", function(stream) {\n    this.bits_per_pixel = stream.readUint8();\n});\n\n// file:src/parsing/mvhd.js\nBoxParser.createFullBoxCtor(\"mvhd\", \"MovieHeaderBox\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.creation_time = stream.readUint64();\n\t\tthis.modification_time = stream.readUint64();\n\t\tthis.timescale = stream.readUint32();\n\t\tthis.duration = stream.readUint64();\n\t} else {\n\t\tthis.creation_time = stream.readUint32();\n\t\tthis.modification_time = stream.readUint32();\n\t\tthis.timescale = stream.readUint32();\n\t\tthis.duration = stream.readUint32();\n\t}\n\tthis.rate = stream.readUint32();\n\tthis.volume = stream.readUint16()>>8;\n\tstream.readUint16();\n\tstream.readUint32Array(2);\n\tthis.matrix = stream.readUint32Array(9);\n\tstream.readUint32Array(6);\n\tthis.next_track_id = stream.readUint32();\n});\n// file:src/parsing/npck.js\nBoxParser.createBoxCtor(\"npck\", \"hintPacketsSent\", function(stream) {\n\tthis.packetssent = stream.readUint32();\n});\n\n// file:src/parsing/nump.js\nBoxParser.createBoxCtor(\"nump\", \"hintPacketsSent\", function(stream) {\n\tthis.packetssent = stream.readUint64();\n});\n\n// file:src/parsing/padb.js\nBoxParser.createFullBoxCtor(\"padb\", \"PaddingBitsBox\", function(stream) {\n\tvar sample_count = stream.readUint32();\n\tthis.padbits = [];\n\tfor (var i = 0; i < Math.floor((sample_count+1)/2); i++) {\n\t\tthis.padbits = stream.readUint8();\n\t}\n});\n\n// file:src/parsing/pasp.js\nBoxParser.createBoxCtor(\"pasp\", \"PixelAspectRatioBox\", function(stream) {\n\tthis.hSpacing = stream.readUint32();\n\tthis.vSpacing = stream.readUint32();\n});// file:src/parsing/payl.js\nBoxParser.createBoxCtor(\"payl\", \"CuePayloadBox\", function(stream) {\n\tthis.text = stream.readString(this.size - this.hdr_size);\n});\n\n// file:src/parsing/payt.js\nBoxParser.createBoxCtor(\"payt\", \"hintpayloadID\", function(stream) {\n\tthis.payloadID = stream.readUint32();\n\tvar count = stream.readUint8();\n\tthis.rtpmap_string = stream.readString(count);\n});\n\n// file:src/parsing/pdin.js\nBoxParser.createFullBoxCtor(\"pdin\", \"ProgressiveDownloadInfoBox\", function(stream) {\n\tvar count = (this.size - this.hdr_size)/8;\n\tthis.rate = [];\n\tthis.initial_delay = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.rate[i] = stream.readUint32();\n\t\tthis.initial_delay[i] = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/pitm.js\nBoxParser.createFullBoxCtor(\"pitm\", \"PrimaryItemBox\", function(stream) {\n\tif (this.version === 0) {\n\t\tthis.item_id = stream.readUint16();\n\t} else {\n\t\tthis.item_id = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/pixi.js\nBoxParser.createFullBoxCtor(\"pixi\", \"PixelInformationProperty\", function(stream) {\n\tvar i;\n\tthis.num_channels = stream.readUint8();\n\tthis.bits_per_channels = [];\n\tfor (i = 0; i < this.num_channels; i++) {\n\t\tthis.bits_per_channels[i] = stream.readUint8();\n\t}\n});\n\n// file:src/parsing/pmax.js\nBoxParser.createBoxCtor(\"pmax\", \"hintlargestpacket\", function(stream) {\n\tthis.bytes = stream.readUint32();\n});\n\n// file:src/parsing/prdi.js\nBoxParser.createFullBoxCtor(\"prdi\", \"ProgressiveDerivedImageItemInformationProperty\", function(stream) {\n\tthis.step_count = stream.readUint16();\n\tthis.item_count = [];\n\tif (this.flags & 0x2) {\n\t\tfor (var i = 0; i < this.step_count; i++) {\n\t\t\tthis.item_count[i] = stream.readUint16();\n\t\t}\n\t}\n});// file:src/parsing/prft.js\nBoxParser.createFullBoxCtor(\"prft\", \"ProducerReferenceTimeBox\", function(stream) {\n\tthis.ref_track_id = stream.readUint32();\n\tthis.ntp_timestamp = stream.readUint64();\n\tif (this.version === 0) {\n\t\tthis.media_time = stream.readUint32();\n\t} else {\n\t\tthis.media_time = stream.readUint64();\n\t}\n});\n\n// file:src/parsing/pssh.js\nBoxParser.createFullBoxCtor(\"pssh\", \"ProtectionSystemSpecificHeaderBox\", function(stream) {\n\tthis.system_id = BoxParser.parseHex16(stream);\n\tif (this.version > 0) {\n\t\tvar count = stream.readUint32();\n\t\tthis.kid = [];\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tthis.kid[i] = BoxParser.parseHex16(stream);\n\t\t}\n\t}\n\tvar datasize = stream.readUint32();\n\tif (datasize > 0) {\n\t\tthis.data = stream.readUint8Array(datasize);\n\t}\n});\n\n// file:src/parsing/qt/clef.js\nBoxParser.createFullBoxCtor(\"clef\", \"TrackCleanApertureDimensionsBox\", function(stream) {\n\tthis.width = stream.readUint32();\n\tthis.height = stream.readUint32();\n});// file:src/parsing/qt/enof.js\nBoxParser.createFullBoxCtor(\"enof\", \"TrackEncodedPixelsDimensionsBox\", function(stream) {\n\tthis.width = stream.readUint32();\n\tthis.height = stream.readUint32();\n});// file:src/parsing/qt/prof.js\nBoxParser.createFullBoxCtor(\"prof\", \"TrackProductionApertureDimensionsBox\", function(stream) {\n\tthis.width = stream.readUint32();\n\tthis.height = stream.readUint32();\n});// file:src/parsing/qt/tapt.js\nBoxParser.createContainerBoxCtor(\"tapt\", \"TrackApertureModeDimensionsBox\", null, [ \"clef\", \"prof\", \"enof\"]);// file:src/parsing/rtp.js\nBoxParser.createBoxCtor(\"rtp \", \"rtpmoviehintinformation\", function(stream) {\n\tthis.descriptionformat = stream.readString(4);\n\tthis.sdptext = stream.readString(this.size - this.hdr_size - 4);\n});\n\n// file:src/parsing/saio.js\nBoxParser.createFullBoxCtor(\"saio\", \"SampleAuxiliaryInformationOffsetsBox\", function(stream) {\n\tif (this.flags & 0x1) {\n\t\tthis.aux_info_type = stream.readString(4);\n\t\tthis.aux_info_type_parameter = stream.readUint32();\n\t}\n\tvar count = stream.readUint32();\n\tthis.offset = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tif (this.version === 0) {\n\t\t\tthis.offset[i] = stream.readUint32();\n\t\t} else {\n\t\t\tthis.offset[i] = stream.readUint64();\n\t\t}\n\t}\n});\n// file:src/parsing/saiz.js\nBoxParser.createFullBoxCtor(\"saiz\", \"SampleAuxiliaryInformationSizesBox\", function(stream) {\n\tif (this.flags & 0x1) {\n\t\tthis.aux_info_type = stream.readString(4);\n\t\tthis.aux_info_type_parameter = stream.readUint32();\n\t}\n\tthis.default_sample_info_size = stream.readUint8();\n\tthis.sample_count = stream.readUint32();\n\tthis.sample_info_size = [];\n\tif (this.default_sample_info_size === 0) {\n\t\tfor (var i = 0; i < this.sample_count; i++) {\n\t\t\tthis.sample_info_size[i] = stream.readUint8();\n\t\t}\n\t}\n});\n\n// file:src/parsing/sampleentries/mett.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA, \"mett\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.content_encoding = stream.readCString();\n\tthis.mime_format = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/metx.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA, \"metx\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.content_encoding = stream.readCString();\n\tthis.namespace = stream.readCString();\n\tthis.schema_location = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/sbtt.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \"sbtt\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.content_encoding = stream.readCString();\n\tthis.mime_format = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/stpp.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \"stpp\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.namespace = stream.readCString();\n\tthis.schema_location = stream.readCString();\n\tthis.auxiliary_mime_types = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/stxt.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \"stxt\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.content_encoding = stream.readCString();\n\tthis.mime_format = stream.readCString();\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/sampleentries/tx3g.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_SUBTITLE, \"tx3g\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.displayFlags = stream.readUint32();\n\tthis.horizontal_justification = stream.readInt8();\n\tthis.vertical_justification = stream.readInt8();\n\tthis.bg_color_rgba = stream.readUint8Array(4);\n\tthis.box_record = stream.readInt16Array(4);\n\tthis.style_record = stream.readUint8Array(12);\n\tthis.parseFooter(stream);\n});\n// file:src/parsing/sampleentries/wvtt.js\nBoxParser.createSampleEntryCtor(BoxParser.SAMPLE_ENTRY_TYPE_METADATA, \"wvtt\", function(stream) {\n\tthis.parseHeader(stream);\n\tthis.parseFooter(stream);\n});\n\n// file:src/parsing/samplegroups/alst.js\nBoxParser.createSampleGroupCtor(\"alst\", function(stream) {\n\tvar i;\n\tvar roll_count = stream.readUint16();\n\tthis.first_output_sample = stream.readUint16();\n\tthis.sample_offset = [];\n\tfor (i = 0; i < roll_count; i++) {\n\t\tthis.sample_offset[i] = stream.readUint32();\n\t}\n\tvar remaining = this.description_length - 4 - 4*roll_count;\n\tthis.num_output_samples = [];\n\tthis.num_total_samples = [];\n\tfor (i = 0; i < remaining/4; i++) {\n\t\tthis.num_output_samples[i] = stream.readUint16();\n\t\tthis.num_total_samples[i] = stream.readUint16();\n\t}\n});\n\n// file:src/parsing/samplegroups/avll.js\nBoxParser.createSampleGroupCtor(\"avll\", function(stream) {\n\tthis.layerNumber = stream.readUint8();\n\tthis.accurateStatisticsFlag = stream.readUint8();\n\tthis.avgBitRate = stream.readUint16();\n\tthis.avgFrameRate = stream.readUint16();\n});\n\n// file:src/parsing/samplegroups/avss.js\nBoxParser.createSampleGroupCtor(\"avss\", function(stream) {\n\tthis.subSequenceIdentifier = stream.readUint16();\n\tthis.layerNumber = stream.readUint8();\n\tvar tmp_byte = stream.readUint8();\n\tthis.durationFlag = tmp_byte >> 7;\n\tthis.avgRateFlag = (tmp_byte >> 6) & 0x1;\n\tif (this.durationFlag) {\n\t\tthis.duration = stream.readUint32();\n\t}\n\tif (this.avgRateFlag) {\n\t\tthis.accurateStatisticsFlag = stream.readUint8();\n\t\tthis.avgBitRate = stream.readUint16();\n\t\tthis.avgFrameRate = stream.readUint16();\n\t}\n\tthis.dependency = [];\n\tvar numReferences = stream.readUint8();\n\tfor (var i = 0; i < numReferences; i++) {\n\t\tvar dependencyInfo = {};\n\t\tthis.dependency.push(dependencyInfo);\n\t\tdependencyInfo.subSeqDirectionFlag = stream.readUint8();\n\t\tdependencyInfo.layerNumber = stream.readUint8();\n\t\tdependencyInfo.subSequenceIdentifier = stream.readUint16();\n\t}\n});\n\n// file:src/parsing/samplegroups/dtrt.js\nBoxParser.createSampleGroupCtor(\"dtrt\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/mvif.js\nBoxParser.createSampleGroupCtor(\"mvif\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/prol.js\nBoxParser.createSampleGroupCtor(\"prol\", function(stream) {\n\tthis.roll_distance = stream.readInt16();\n});\n\n// file:src/parsing/samplegroups/rap.js\nBoxParser.createSampleGroupCtor(\"rap \", function(stream) {\n\tvar tmp_byte = stream.readUint8();\n\tthis.num_leading_samples_known = tmp_byte >> 7;\n\tthis.num_leading_samples = tmp_byte & 0x7F;\n});\n\n// file:src/parsing/samplegroups/rash.js\nBoxParser.createSampleGroupCtor(\"rash\", function(stream) {\n\tthis.operation_point_count = stream.readUint16();\n\tif (this.description_length !== 2+(this.operation_point_count === 1?2:this.operation_point_count*6)+9) {\n\t\tLog.warn(\"BoxParser\", \"Mismatch in \"+this.grouping_type+\" sample group length\");\n\t\tthis.data =  stream.readUint8Array(this.description_length-2);\n\t} else {\n\t\tif (this.operation_point_count === 1) {\n\t\t\tthis.target_rate_share = stream.readUint16();\n\t\t} else {\n\t\t\tthis.target_rate_share = [];\n\t\t\tthis.available_bitrate = [];\n\t\t\tfor (var i = 0; i < this.operation_point_count; i++) {\n\t\t\t\tthis.available_bitrate[i] = stream.readUint32();\n\t\t\t\tthis.target_rate_share[i] = stream.readUint16();\n\t\t\t}\n\t\t}\n\t\tthis.maximum_bitrate = stream.readUint32();\n\t\tthis.minimum_bitrate = stream.readUint32();\n\t\tthis.discard_priority = stream.readUint8();\n\t}\n});\n\n// file:src/parsing/samplegroups/roll.js\nBoxParser.createSampleGroupCtor(\"roll\", function(stream) {\n\tthis.roll_distance = stream.readInt16();\n});\n\n// file:src/parsing/samplegroups/samplegroup.js\nBoxParser.SampleGroupEntry.prototype.parse = function(stream) {\n\tLog.warn(\"BoxParser\", \"Unknown Sample Group type: \"+this.grouping_type);\n\tthis.data =  stream.readUint8Array(this.description_length);\n}\n\n// file:src/parsing/samplegroups/scif.js\nBoxParser.createSampleGroupCtor(\"scif\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/scnm.js\nBoxParser.createSampleGroupCtor(\"scnm\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/seig.js\nBoxParser.createSampleGroupCtor(\"seig\", function(stream) {\n\tthis.reserved = stream.readUint8();\n\tvar tmp = stream.readUint8();\n\tthis.crypt_byte_block = tmp >> 4;\n\tthis.skip_byte_block = tmp & 0xF;\n\tthis.isProtected = stream.readUint8();\n\tthis.Per_Sample_IV_Size = stream.readUint8();\n\tthis.KID = BoxParser.parseHex16(stream);\n\tthis.constant_IV_size = 0;\n\tthis.constant_IV = 0;\n\tif (this.isProtected === 1 && this.Per_Sample_IV_Size === 0) {\n\t\tthis.constant_IV_size = stream.readUint8();\n\t\tthis.constant_IV = stream.readUint8Array(this.constant_IV_size);\n\t}\n});\n\n// file:src/parsing/samplegroups/stsa.js\nBoxParser.createSampleGroupCtor(\"stsa\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/sync.js\nBoxParser.createSampleGroupCtor(\"sync\", function(stream) {\n\tvar tmp_byte = stream.readUint8();\n\tthis.NAL_unit_type = tmp_byte & 0x3F;\n});\n\n// file:src/parsing/samplegroups/tele.js\nBoxParser.createSampleGroupCtor(\"tele\", function(stream) {\n\tvar tmp_byte = stream.readUint8();\n\tthis.level_independently_decodable = tmp_byte >> 7;\n});\n\n// file:src/parsing/samplegroups/tsas.js\nBoxParser.createSampleGroupCtor(\"tsas\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/tscl.js\nBoxParser.createSampleGroupCtor(\"tscl\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/samplegroups/vipr.js\nBoxParser.createSampleGroupCtor(\"vipr\", function(stream) {\n\tLog.warn(\"BoxParser\", \"Sample Group type: \"+this.grouping_type+\" not fully parsed\");\n});\n\n// file:src/parsing/sbgp.js\nBoxParser.createFullBoxCtor(\"sbgp\", \"SampleToGroupBox\", function(stream) {\n\tthis.grouping_type = stream.readString(4);\n\tif (this.version === 1) {\n\t\tthis.grouping_type_parameter = stream.readUint32();\n\t} else {\n\t\tthis.grouping_type_parameter = 0;\n\t}\n\tthis.entries = [];\n\tvar entry_count = stream.readUint32();\n\tfor (var i = 0; i < entry_count; i++) {\n\t\tvar entry = {};\n\t\tthis.entries.push(entry);\n\t\tentry.sample_count = stream.readInt32();\n\t\tentry.group_description_index = stream.readInt32();\n\t}\n});\n\n// file:src/parsing/sbpm.js\nfunction Pixel(row, col) {\n\tthis.bad_pixel_row = row;\n\tthis.bad_pixel_column = col;\n}\n\nPixel.prototype.toString = function pixelToString() {\n\treturn \"[row: \" + this.bad_pixel_row + \", column: \" + this.bad_pixel_column + \"]\";\n}\n\nBoxParser.createFullBoxCtor(\"sbpm\", \"SensorBadPixelsMapBox\", function(stream) {\n\tvar i;\n\tthis.component_count = stream.readUint16();\n    this.component_index = [];\n    for (i = 0; i < this.component_count; i++) {\n        this.component_index.push(stream.readUint16());\n    }\n\tvar flags = stream.readUint8();\n\tthis.correction_applied = (0x80 == (flags & 0x80));\n\tthis.num_bad_rows = stream.readUint32();\n\tthis.num_bad_cols = stream.readUint32();\n\tthis.num_bad_pixels = stream.readUint32();\n\tthis.bad_rows = [];\n\tthis.bad_columns = [];\n\tthis.bad_pixels = [];\n\tfor (i = 0; i < this.num_bad_rows; i++) {\n\t\tthis.bad_rows.push(stream.readUint32());\n\t}\n\tfor (i = 0; i < this.num_bad_cols; i++) {\n\t\tthis.bad_columns.push(stream.readUint32());\n\t}\n\tfor (i = 0; i < this.num_bad_pixels; i++) {\n\t\tvar row = stream.readUint32();\n\t\tvar col = stream.readUint32();\n\t\tthis.bad_pixels.push(new Pixel(row, col));\n\t}\n});\n\n// file:src/parsing/schm.js\nBoxParser.createFullBoxCtor(\"schm\", \"SchemeTypeBox\", function(stream) {\n\tthis.scheme_type = stream.readString(4);\n\tthis.scheme_version = stream.readUint32();\n\tif (this.flags & 0x000001) {\n\t\tthis.scheme_uri = stream.readString(this.size - this.hdr_size - 8);\n\t}\n});\n\n// file:src/parsing/sdp.js\nBoxParser.createBoxCtor(\"sdp \", \"rtptracksdphintinformation\", function(stream) {\n\tthis.sdptext = stream.readString(this.size - this.hdr_size);\n});\n\n// file:src/parsing/sdtp.js\nBoxParser.createFullBoxCtor(\"sdtp\", \"SampleDependencyTypeBox\", function(stream) {\n\tvar tmp_byte;\n\tvar count = (this.size - this.hdr_size);\n\tthis.is_leading = [];\n\tthis.sample_depends_on = [];\n\tthis.sample_is_depended_on = [];\n\tthis.sample_has_redundancy = [];\n\tfor (var i = 0; i < count; i++) {\n\t\ttmp_byte = stream.readUint8();\n\t\tthis.is_leading[i] = tmp_byte >> 6;\n\t\tthis.sample_depends_on[i] = (tmp_byte >> 4) & 0x3;\n\t\tthis.sample_is_depended_on[i] = (tmp_byte >> 2) & 0x3;\n\t\tthis.sample_has_redundancy[i] = tmp_byte & 0x3;\n\t}\n});\n\n// file:src/parsing/senc.js\n// Cannot be fully parsed because Per_Sample_IV_Size needs to be known\r\nBoxParser.createFullBoxCtor(\"senc\", \"SampleEncryptionBox\" /*, function(stream) {\r\n\tthis.parseFullHeader(stream);\r\n\tvar sample_count = stream.readUint32();\r\n\tthis.samples = [];\r\n\tfor (var i = 0; i < sample_count; i++) {\r\n\t\tvar sample = {};\r\n\t\t// tenc.default_Per_Sample_IV_Size or seig.Per_Sample_IV_Size\r\n\t\tsample.InitializationVector = this.readUint8Array(Per_Sample_IV_Size*8);\r\n\t\tif (this.flags & 0x2) {\r\n\t\t\tsample.subsamples = [];\r\n\t\t\tsubsample_count = stream.readUint16();\r\n\t\t\tfor (var j = 0; j < subsample_count; j++) {\r\n\t\t\t\tvar subsample = {};\r\n\t\t\t\tsubsample.BytesOfClearData = stream.readUint16();\r\n\t\t\t\tsubsample.BytesOfProtectedData = stream.readUint32();\r\n\t\t\t\tsample.subsamples.push(subsample);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// TODO\r\n\t\tthis.samples.push(sample);\r\n\t}\r\n}*/);\r\n// file:src/parsing/sgpd.js\nBoxParser.createFullBoxCtor(\"sgpd\", \"SampleGroupDescriptionBox\", function(stream) {\n\tthis.grouping_type = stream.readString(4);\n\tLog.debug(\"BoxParser\", \"Found Sample Groups of type \"+this.grouping_type);\n\tif (this.version === 1) {\n\t\tthis.default_length = stream.readUint32();\n\t} else {\n\t\tthis.default_length = 0;\n\t}\n\tif (this.version >= 2) {\n\t\tthis.default_group_description_index = stream.readUint32();\n\t}\n\tthis.entries = [];\n\tvar entry_count = stream.readUint32();\n\tfor (var i = 0; i < entry_count; i++) {\n\t\tvar entry;\n\t\tif (BoxParser[this.grouping_type+\"SampleGroupEntry\"]) {\n\t\t\tentry = new BoxParser[this.grouping_type+\"SampleGroupEntry\"](this.grouping_type);\n\t\t}  else {\n\t\t\tentry = new BoxParser.SampleGroupEntry(this.grouping_type);\n\t\t}\n\t\tthis.entries.push(entry);\n\t\tif (this.version === 1) {\n\t\t\tif (this.default_length === 0) {\n\t\t\t\tentry.description_length = stream.readUint32();\n\t\t\t} else {\n\t\t\t\tentry.description_length = this.default_length;\n\t\t\t}\n\t\t} else {\n\t\t\tentry.description_length = this.default_length;\n\t\t}\n\t\tif (entry.write === BoxParser.SampleGroupEntry.prototype.write) {\n\t\t\tLog.info(\"BoxParser\", \"SampleGroup for type \"+this.grouping_type+\" writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\t\t// storing data\n\t\t\tentry.data = stream.readUint8Array(entry.description_length);\n\t\t\t// rewinding\n\t\t\tstream.position -= entry.description_length;\n\t\t}\n\t\tentry.parse(stream);\n\t}\n});\n\n// file:src/parsing/sidx.js\nBoxParser.createFullBoxCtor(\"sidx\", \"CompressedSegmentIndexBox\", function(stream) {\n\tthis.reference_ID = stream.readUint32();\n\tthis.timescale = stream.readUint32();\n\tif (this.version === 0) {\n\t\tthis.earliest_presentation_time = stream.readUint32();\n\t\tthis.first_offset = stream.readUint32();\n\t} else {\n\t\tthis.earliest_presentation_time = stream.readUint64();\n\t\tthis.first_offset = stream.readUint64();\n\t}\n\tstream.readUint16();\n\tthis.references = [];\n\tvar count = stream.readUint16();\n\tfor (var i = 0; i < count; i++) {\n\t\tvar ref = {};\n\t\tthis.references.push(ref);\n\t\tvar tmp_32 = stream.readUint32();\n\t\tref.reference_type = (tmp_32 >> 31) & 0x1;\n\t\tref.referenced_size = tmp_32 & 0x7FFFFFFF;\n\t\tref.subsegment_duration = stream.readUint32();\n\t\ttmp_32 = stream.readUint32();\n\t\tref.starts_with_SAP = (tmp_32 >> 31) & 0x1;\n\t\tref.SAP_type = (tmp_32 >> 28) & 0x7;\n\t\tref.SAP_delta_time = tmp_32 & 0xFFFFFFF;\n\t}\n});\n\n// file:src/parsing/singleitemtypereference.js\nBoxParser.SingleItemTypeReferenceBox = function(type, size, hdr_size, start) {\n\tBoxParser.Box.call(this, type, size);\n\tthis.hdr_size = hdr_size;\n\tthis.start = start;\n}\nBoxParser.SingleItemTypeReferenceBox.prototype = new BoxParser.Box();\nBoxParser.SingleItemTypeReferenceBox.prototype.parse = function(stream) {\n\tthis.from_item_ID = stream.readUint16();\n\tvar count =  stream.readUint16();\n\tthis.references = [];\n\tfor(var i = 0; i < count; i++) {\n\t\tthis.references[i] = {};\n\t\tthis.references[i].to_item_ID = stream.readUint16();\n\t}\n}\n\n// file:src/parsing/singleitemtypereferencelarge.js\nBoxParser.SingleItemTypeReferenceBoxLarge = function(type, size, hdr_size, start) {\n\tBoxParser.Box.call(this, type, size);\n\tthis.hdr_size = hdr_size;\n\tthis.start = start;\n}\nBoxParser.SingleItemTypeReferenceBoxLarge.prototype = new BoxParser.Box();\nBoxParser.SingleItemTypeReferenceBoxLarge.prototype.parse = function(stream) {\n\tthis.from_item_ID = stream.readUint32();\n\tvar count =  stream.readUint16();\n\tthis.references = [];\n\tfor(var i = 0; i < count; i++) {\n\t\tthis.references[i] = {};\n\t\tthis.references[i].to_item_ID = stream.readUint32();\n\t}\n}\n\n// file:src/parsing/SmDm.js\nBoxParser.createFullBoxCtor(\"SmDm\", \"SMPTE2086MasteringDisplayMetadataBox\", function(stream) {\n\tthis.primaryRChromaticity_x = stream.readUint16();\n    this.primaryRChromaticity_y = stream.readUint16();\n    this.primaryGChromaticity_x = stream.readUint16();\n    this.primaryGChromaticity_y = stream.readUint16();\n    this.primaryBChromaticity_x = stream.readUint16();\n    this.primaryBChromaticity_y = stream.readUint16();\n    this.whitePointChromaticity_x = stream.readUint16();\n    this.whitePointChromaticity_y = stream.readUint16();\n    this.luminanceMax = stream.readUint32();\n    this.luminanceMin = stream.readUint32();\n});\n\n// file:src/parsing/smhd.js\nBoxParser.createFullBoxCtor(\"smhd\", \"SoundMediaHeaderBox\", function(stream) {\n\tthis.balance = stream.readUint16();\n\tstream.readUint16();\n});\n\n// file:src/parsing/ssix.js\nBoxParser.createFullBoxCtor(\"ssix\", \"CompressedSubsegmentIndexBox\", function(stream) {\n\tthis.subsegments = [];\n\tvar subsegment_count = stream.readUint32();\n\tfor (var i = 0; i < subsegment_count; i++) {\n\t\tvar subsegment = {};\n\t\tthis.subsegments.push(subsegment);\n\t\tsubsegment.ranges = [];\n\t\tvar range_count = stream.readUint32();\n\t\tfor (var j = 0; j < range_count; j++) {\n\t\t\tvar range = {};\n\t\t\tsubsegment.ranges.push(range);\n\t\t\trange.level = stream.readUint8();\n\t\t\trange.range_size = stream.readUint24();\n\t\t}\n\t}\n});\n\n// file:src/parsing/stco.js\nBoxParser.createFullBoxCtor(\"stco\", \"ChunkOffsetBox\", function(stream) {\n\tvar entry_count;\n\tentry_count = stream.readUint32();\n\tthis.chunk_offsets = [];\n\tif (this.version === 0) {\n\t\tfor (var i = 0; i < entry_count; i++) {\n\t\t\tthis.chunk_offsets.push(stream.readUint32());\n\t\t}\n\t}\n});\n\n// file:src/parsing/stdp.js\nBoxParser.createFullBoxCtor(\"stdp\", \"DegradationPriorityBox\", function(stream) {\n\tvar count = (this.size - this.hdr_size)/2;\n\tthis.priority = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.priority[i] = stream.readUint16();\n\t}\n});\n\n// file:src/parsing/sthd.js\nBoxParser.createFullBoxCtor(\"sthd\", \"SubtitleMediaHeaderBox\");\n\n// file:src/parsing/stri.js\nBoxParser.createFullBoxCtor(\"stri\", \"SubTrackInformationBox\", function(stream) {\n\tthis.switch_group = stream.readUint16();\n\tthis.alternate_group = stream.readUint16();\n\tthis.sub_track_id = stream.readUint32();\n\tvar count = (this.size - this.hdr_size - 8)/4;\n\tthis.attribute_list = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.attribute_list[i] = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/stsc.js\nBoxParser.createFullBoxCtor(\"stsc\", \"SampleToChunkBox\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tentry_count = stream.readUint32();\n\tthis.first_chunk = [];\n\tthis.samples_per_chunk = [];\n\tthis.sample_description_index = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.first_chunk.push(stream.readUint32());\n\t\t\tthis.samples_per_chunk.push(stream.readUint32());\n\t\t\tthis.sample_description_index.push(stream.readUint32());\n\t\t}\n\t}\n});\n\n// file:src/parsing/stsd.js\nBoxParser.createFullBoxCtor(\"stsd\", \"SampleDescriptionBox\", function(stream) {\n\tvar i;\n\tvar ret;\n\tvar entryCount;\n\tvar box;\n\tthis.entries = [];\n\tentryCount = stream.readUint32();\n\tfor (i = 1; i <= entryCount; i++) {\n\t\tret = BoxParser.parseOneBox(stream, true, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tif (BoxParser[ret.type+\"SampleEntry\"]) {\n\t\t\t\tbox = new BoxParser[ret.type+\"SampleEntry\"](ret.size);\n\t\t\t\tbox.hdr_size = ret.hdr_size;\n\t\t\t\tbox.start = ret.start;\n\t\t\t} else {\n\t\t\t\tLog.warn(\"BoxParser\", \"Unknown sample entry type: \"+ret.type);\n\t\t\t\tbox = new BoxParser.SampleEntry(ret.type, ret.size, ret.hdr_size, ret.start);\n\t\t\t}\n\t\t\tif (box.write === BoxParser.SampleEntry.prototype.write) {\n\t\t\t\tLog.info(\"BoxParser\", \"SampleEntry \"+box.type+\" box writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\t\t\tbox.parseDataAndRewind(stream);\n\t\t\t}\n\t\t\tbox.parse(stream);\n\t\t\tthis.entries.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/stsg.js\nBoxParser.createFullBoxCtor(\"stsg\", \"SubTrackSampleGroupBox\", function(stream) {\n\tthis.grouping_type = stream.readUint32();\n\tvar count = stream.readUint16();\n\tthis.group_description_index = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.group_description_index[i] = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/stsh.js\nBoxParser.createFullBoxCtor(\"stsh\", \"ShadowSyncSampleBox\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tentry_count = stream.readUint32();\n\tthis.shadowed_sample_numbers = [];\n\tthis.sync_sample_numbers = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.shadowed_sample_numbers.push(stream.readUint32());\n\t\t\tthis.sync_sample_numbers.push(stream.readUint32());\n\t\t}\n\t}\n});\n\n// file:src/parsing/stss.js\nBoxParser.createFullBoxCtor(\"stss\", \"SyncSampleBox\", function(stream) {\n\tvar i;\n\tvar entry_count;\n\tentry_count = stream.readUint32();\n\tif (this.version === 0) {\n\t\tthis.sample_numbers = [];\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.sample_numbers.push(stream.readUint32());\n\t\t}\n\t}\n});\n\n// file:src/parsing/stsz.js\nBoxParser.createFullBoxCtor(\"stsz\", \"SampleSizeBox\", function(stream) {\n\tvar i;\n\tthis.sample_sizes = [];\n\tif (this.version === 0) {\n\t\tthis.sample_size = stream.readUint32();\n\t\tthis.sample_count = stream.readUint32();\n\t\tfor (i = 0; i < this.sample_count; i++) {\n\t\t\tif (this.sample_size === 0) {\n\t\t\t\tthis.sample_sizes.push(stream.readUint32());\n\t\t\t} else {\n\t\t\t\tthis.sample_sizes[i] = this.sample_size;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/stts.js\nBoxParser.createFullBoxCtor(\"stts\", \"TimeToSampleBox\", function(stream) {\n\tvar entry_count;\n\tvar i;\n\tvar delta;\n\tentry_count = stream.readUint32();\n\tthis.sample_counts = [];\n\tthis.sample_deltas = [];\n\tif (this.version === 0) {\n\t\tfor(i=0; i<entry_count; i++) {\n\t\t\tthis.sample_counts.push(stream.readUint32());\n\t\t\tdelta = stream.readInt32();\n\t\t\tif (delta < 0) {\n\t\t\t\tLog.warn(\"BoxParser\", \"File uses negative stts sample delta, using value 1 instead, sync may be lost!\");\n\t\t\t\tdelta = 1;\n\t\t\t}\n\t\t\tthis.sample_deltas.push(delta);\n\t\t}\n\t}\n});\n\n// file:src/parsing/stvi.js\nBoxParser.createFullBoxCtor(\"stvi\", \"StereoVideoBox\", function(stream) {\n\tvar tmp32 = stream.readUint32();\n\tthis.single_view_allowed = tmp32 & 0x3;\n\tthis.stereo_scheme = stream.readUint32();\n\tvar length = stream.readUint32();\n\tthis.stereo_indication_type = stream.readString(length);\n\tvar ret;\n\tvar box;\n\tthis.boxes = [];\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = ret.box;\n\t\t\tthis.boxes.push(box);\n\t\t\tthis[box.type] = box;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/styp.js\nBoxParser.createBoxCtor(\"styp\", \"SegmentTypeBox\", function(stream) {\n\tBoxParser.ftypBox.prototype.parse.call(this, stream);\n});\n\n// file:src/parsing/stz2.js\nBoxParser.createFullBoxCtor(\"stz2\", \"CompactSampleSizeBox\", function(stream) {\n\tvar i;\n\tvar sample_size;\n\tvar sample_count;\n\tthis.sample_sizes = [];\n\tif (this.version === 0) {\n\t\tthis.reserved = stream.readUint24();\n\t\tthis.field_size = stream.readUint8();\n\t\tsample_count = stream.readUint32();\n\t\tif (this.field_size === 4) {\n\t\t\tfor (i = 0; i < sample_count; i+=2) {\n\t\t\t\tvar tmp = stream.readUint8();\n\t\t\t\tthis.sample_sizes[i] = (tmp >> 4) & 0xF;\n\t\t\t\tthis.sample_sizes[i+1] = tmp & 0xF;\n\t\t\t}\n\t\t} else if (this.field_size === 8) {\n\t\t\tfor (i = 0; i < sample_count; i++) {\n\t\t\t\tthis.sample_sizes[i] = stream.readUint8();\n\t\t\t}\n\t\t} else if (this.field_size === 16) {\n\t\t\tfor (i = 0; i < sample_count; i++) {\n\t\t\t\tthis.sample_sizes[i] = stream.readUint16();\n\t\t\t}\n\t\t} else {\n\t\t\tLog.error(\"BoxParser\", \"Error in length field in stz2 box\");\n\t\t}\n\t}\n});\n\n// file:src/parsing/subs.js\nBoxParser.createFullBoxCtor(\"subs\", \"SubSampleInformationBox\", function(stream) {\n\tvar i,j;\n\tvar entry_count;\n\tvar subsample_count;\n\tentry_count = stream.readUint32();\n\tthis.entries = [];\n\tfor (i = 0; i < entry_count; i++) {\n\t\tvar sampleInfo = {};\n\t\tthis.entries[i] = sampleInfo;\n\t\tsampleInfo.sample_delta = stream.readUint32();\n\t\tsampleInfo.subsamples = [];\n\t\tsubsample_count = stream.readUint16();\n\t\tif (subsample_count>0) {\n\t\t\tfor (j = 0; j < subsample_count; j++) {\n\t\t\t\tvar subsample = {};\n\t\t\t\tsampleInfo.subsamples.push(subsample);\n\t\t\t\tif (this.version == 1) {\n\t\t\t\t\tsubsample.size = stream.readUint32();\n\t\t\t\t} else {\n\t\t\t\t\tsubsample.size = stream.readUint16();\n\t\t\t\t}\n\t\t\t\tsubsample.priority = stream.readUint8();\n\t\t\t\tsubsample.discardable = stream.readUint8();\n\t\t\t\tsubsample.codec_specific_parameters = stream.readUint32();\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/tenc.js\nBoxParser.createFullBoxCtor(\"tenc\", \"TrackEncryptionBox\", function(stream) {\n\tstream.readUint8(); // reserved\n\tif (this.version === 0) {\n\t\tstream.readUint8();\n\t} else {\n\t\tvar tmp = stream.readUint8();\n\t\tthis.default_crypt_byte_block = (tmp >> 4) & 0xF;\n\t\tthis.default_skip_byte_block = tmp & 0xF;\n\t}\n\tthis.default_isProtected = stream.readUint8();\n\tthis.default_Per_Sample_IV_Size = stream.readUint8();\n\tthis.default_KID = BoxParser.parseHex16(stream);\n\tif (this.default_isProtected === 1 && this.default_Per_Sample_IV_Size === 0) {\n\t\tthis.default_constant_IV_size = stream.readUint8();\n\t\tthis.default_constant_IV = stream.readUint8Array(this.default_constant_IV_size);\n\t}\n});// file:src/parsing/tfdt.js\nBoxParser.createFullBoxCtor(\"tfdt\", \"TrackFragmentBaseMediaDecodeTimeBox\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.baseMediaDecodeTime = stream.readUint64();\n\t} else {\n\t\tthis.baseMediaDecodeTime = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/tfhd.js\nBoxParser.createFullBoxCtor(\"tfhd\", \"TrackFragmentHeaderBox\", function(stream) {\n\tvar readBytes = 0;\n\tthis.track_id = stream.readUint32();\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_BASE_DATA_OFFSET)) {\n\t\tthis.base_data_offset = stream.readUint64();\n\t\treadBytes += 8;\n\t} else {\n\t\tthis.base_data_offset = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DESC)) {\n\t\tthis.default_sample_description_index = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.default_sample_description_index = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DUR)) {\n\t\tthis.default_sample_duration = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.default_sample_duration = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_SAMPLE_SIZE)) {\n\t\tthis.default_sample_size = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.default_sample_size = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TFHD_FLAG_SAMPLE_FLAGS)) {\n\t\tthis.default_sample_flags = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.default_sample_flags = 0;\n\t}\n});\n\n// file:src/parsing/tfra.js\nBoxParser.createFullBoxCtor(\"tfra\", \"TrackFragmentRandomAccessBox\", function(stream) {\n\tthis.track_ID = stream.readUint32();\n\tstream.readUint24();\n\tvar tmp_byte = stream.readUint8();\n\tthis.length_size_of_traf_num = (tmp_byte >> 4) & 0x3;\n\tthis.length_size_of_trun_num = (tmp_byte >> 2) & 0x3;\n\tthis.length_size_of_sample_num = (tmp_byte) & 0x3;\n\tthis.entries = [];\n\tvar number_of_entries = stream.readUint32();\n\tfor (var i = 0; i < number_of_entries; i++) {\n\t\tif (this.version === 1) {\n\t\t\tthis.time = stream.readUint64();\n\t\t\tthis.moof_offset = stream.readUint64();\n\t\t} else {\n\t\t\tthis.time = stream.readUint32();\n\t\t\tthis.moof_offset = stream.readUint32();\n\t\t}\n\t\tthis.traf_number = stream[\"readUint\"+(8*(this.length_size_of_traf_num+1))]();\n\t\tthis.trun_number = stream[\"readUint\"+(8*(this.length_size_of_trun_num+1))]();\n\t\tthis.sample_number = stream[\"readUint\"+(8*(this.length_size_of_sample_num+1))]();\n\t}\n});\n\n// file:src/parsing/tkhd.js\nBoxParser.createFullBoxCtor(\"tkhd\", \"TrackHeaderBox\", function(stream) {\n\tif (this.version == 1) {\n\t\tthis.creation_time = stream.readUint64();\n\t\tthis.modification_time = stream.readUint64();\n\t\tthis.track_id = stream.readUint32();\n\t\tstream.readUint32();\n\t\tthis.duration = stream.readUint64();\n\t} else {\n\t\tthis.creation_time = stream.readUint32();\n\t\tthis.modification_time = stream.readUint32();\n\t\tthis.track_id = stream.readUint32();\n\t\tstream.readUint32();\n\t\tthis.duration = stream.readUint32();\n\t}\n\tstream.readUint32Array(2);\n\tthis.layer = stream.readInt16();\n\tthis.alternate_group = stream.readInt16();\n\tthis.volume = stream.readInt16()>>8;\n\tstream.readUint16();\n\tthis.matrix = stream.readInt32Array(9);\n\tthis.width = stream.readUint32();\n\tthis.height = stream.readUint32();\n});\n\n// file:src/parsing/tmax.js\nBoxParser.createBoxCtor(\"tmax\", \"hintmaxrelativetime\", function(stream) {\n\tthis.time = stream.readUint32();\n});\n\n// file:src/parsing/tmin.js\nBoxParser.createBoxCtor(\"tmin\", \"hintminrelativetime\", function(stream) {\n\tthis.time = stream.readUint32();\n});\n\n// file:src/parsing/totl.js\nBoxParser.createBoxCtor(\"totl\", \"hintBytesSent\", function(stream) {\n\tthis.bytessent = stream.readUint32();\n});\n\n// file:src/parsing/tpay.js\nBoxParser.createBoxCtor(\"tpay\", \"hintBytesSent\", function(stream) {\n\tthis.bytessent = stream.readUint32();\n});\n\n// file:src/parsing/tpyl.js\nBoxParser.createBoxCtor(\"tpyl\", \"hintBytesSent\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/TrackGroup.js\nBoxParser.TrackGroupTypeBox.prototype.parse = function(stream) {\n\tthis.parseFullHeader(stream);\n\tthis.track_group_id = stream.readUint32();\n}\n\n// file:src/parsing/trackgroups/msrc.js\nBoxParser.createTrackGroupCtor(\"msrc\");// file:src/parsing/TrakReference.js\nBoxParser.TrackReferenceTypeBox = function(type, size, hdr_size, start) {\n\tBoxParser.Box.call(this, type, size);\n\tthis.hdr_size = hdr_size;\n\tthis.start = start;\n}\nBoxParser.TrackReferenceTypeBox.prototype = new BoxParser.Box();\nBoxParser.TrackReferenceTypeBox.prototype.parse = function(stream) {\n\tthis.track_ids = stream.readUint32Array((this.size-this.hdr_size)/4);\n}\n\n// file:src/parsing/tref.js\nBoxParser.trefBox.prototype.parse = function(stream) {\n\tvar ret;\n\tvar box;\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, true, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = new BoxParser.TrackReferenceTypeBox(ret.type, ret.size, ret.hdr_size, ret.start);\n\t\t\tif (box.write === BoxParser.Box.prototype.write && box.type !== \"mdat\") {\n\t\t\t\tLog.info(\"BoxParser\", \"TrackReference \"+box.type+\" box writing not yet implemented, keeping unparsed data in memory for later write\");\n\t\t\t\tbox.parseDataAndRewind(stream);\n\t\t\t}\n\t\t\tbox.parse(stream);\n\t\t\tthis.boxes.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n}\n\n// file:src/parsing/trep.js\nBoxParser.createFullBoxCtor(\"trep\", \"TrackExtensionPropertiesBox\", function(stream) {\n\tthis.track_ID = stream.readUint32();\n\tthis.boxes = [];\n\twhile (stream.getPosition() < this.start+this.size) {\n\t\tret = BoxParser.parseOneBox(stream, false, this.size - (stream.getPosition() - this.start));\n\t\tif (ret.code === BoxParser.OK) {\n\t\t\tbox = ret.box;\n\t\t\tthis.boxes.push(box);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n});\n\n// file:src/parsing/trex.js\nBoxParser.createFullBoxCtor(\"trex\", \"TrackExtendsBox\", function(stream) {\n\tthis.track_id = stream.readUint32();\n\tthis.default_sample_description_index = stream.readUint32();\n\tthis.default_sample_duration = stream.readUint32();\n\tthis.default_sample_size = stream.readUint32();\n\tthis.default_sample_flags = stream.readUint32();\n});\n\n// file:src/parsing/trpy.js\nBoxParser.createBoxCtor(\"trpy\", \"hintBytesSent\", function(stream) {\n\tthis.bytessent = stream.readUint64();\n});\n\n// file:src/parsing/trun.js\nBoxParser.createFullBoxCtor(\"trun\", \"TrackRunBox\", function(stream) {\n\tvar readBytes = 0;\n\tthis.sample_count = stream.readUint32();\n\treadBytes+= 4;\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TRUN_FLAGS_DATA_OFFSET) ) {\n\t\tthis.data_offset = stream.readInt32(); //signed\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.data_offset = 0;\n\t}\n\tif (this.size - this.hdr_size > readBytes && (this.flags & BoxParser.TRUN_FLAGS_FIRST_FLAG) ) {\n\t\tthis.first_sample_flags = stream.readUint32();\n\t\treadBytes += 4;\n\t} else {\n\t\tthis.first_sample_flags = 0;\n\t}\n\tthis.sample_duration = [];\n\tthis.sample_size = [];\n\tthis.sample_flags = [];\n\tthis.sample_composition_time_offset = [];\n\tif (this.size - this.hdr_size > readBytes) {\n\t\tfor (var i = 0; i < this.sample_count; i++) {\n\t\t\tif (this.flags & BoxParser.TRUN_FLAGS_DURATION) {\n\t\t\t\tthis.sample_duration[i] = stream.readUint32();\n\t\t\t}\n\t\t\tif (this.flags & BoxParser.TRUN_FLAGS_SIZE) {\n\t\t\t\tthis.sample_size[i] = stream.readUint32();\n\t\t\t}\n\t\t\tif (this.flags & BoxParser.TRUN_FLAGS_FLAGS) {\n\t\t\t\tthis.sample_flags[i] = stream.readUint32();\n\t\t\t}\n\t\t\tif (this.flags & BoxParser.TRUN_FLAGS_CTS_OFFSET) {\n\t\t\t\tif (this.version === 0) {\n\t\t\t\t\tthis.sample_composition_time_offset[i] = stream.readUint32();\n\t\t\t\t} else {\n\t\t\t\t\tthis.sample_composition_time_offset[i] = stream.readInt32(); //signed\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\n// file:src/parsing/tsel.js\nBoxParser.createFullBoxCtor(\"tsel\", \"TrackSelectionBox\", function(stream) {\n\tthis.switch_group = stream.readUint32();\n\tvar count = (this.size - this.hdr_size - 4)/4;\n\tthis.attribute_list = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.attribute_list[i] = stream.readUint32();\n\t}\n});\n\n// file:src/parsing/txtC.js\nBoxParser.createFullBoxCtor(\"txtC\", \"TextConfigBox\", function(stream) {\n\tthis.config = stream.readCString();\n});\n\n// file:src/parsing/tyco.js\nBoxParser.createBoxCtor(\"tyco\", \"TypeCombinationBox\", function(stream) {\n\tvar count = (this.size - this.hdr_size) / 4;\n\tthis.compatible_brands = [];\n\tfor (var i = 0; i < count; i++) {\n\t\tthis.compatible_brands[i] = stream.readString(4);\n\t}\n});\n\n// file:src/parsing/udes.js\nBoxParser.createFullBoxCtor(\"udes\", \"UserDescriptionProperty\", function(stream) {\n\tthis.lang = stream.readCString();\n\tthis.name = stream.readCString();\n\tthis.description = stream.readCString();\n\tthis.tags = stream.readCString();\n});\n\n// file:src/parsing/uncC.js\nBoxParser.createFullBoxCtor(\"uncC\", \"UncompressedFrameConfigBox\", function(stream) {\n    var i;\n    this.profile = stream.readString(4);\n    if (this.version == 1) {\n        // Nothing - just the profile\n    } else if (this.version == 0) {\n        this.component_count = stream.readUint32();\n        this.component_index = [];\n        this.component_bit_depth_minus_one = [];\n        this.component_format = [];\n        this.component_align_size = [];\n        for (i = 0; i < this.component_count; i++) {\n            this.component_index.push(stream.readUint16());\n            this.component_bit_depth_minus_one.push(stream.readUint8());\n            this.component_format.push(stream.readUint8());\n            this.component_align_size.push(stream.readUint8());\n        }\n        this.sampling_type = stream.readUint8();\n        this.interleave_type = stream.readUint8();\n        this.block_size = stream.readUint8();\n        var flags = stream.readUint8();\n        this.component_little_endian = (flags >> 7) & 0x1;\n        this.block_pad_lsb = (flags >> 6) & 0x1;\n        this.block_little_endian = (flags >> 5) & 0x1;\n        this.block_reversed = (flags >> 4) & 0x1;\n        this.pad_unknown = (flags >> 3) & 0x1;\n        this.pixel_size = stream.readUint32();\n        this.row_align_size = stream.readUint32();\n        this.tile_align_size = stream.readUint32();\n        this.num_tile_cols_minus_one = stream.readUint32();\n        this.num_tile_rows_minus_one = stream.readUint32();\n    }\n});\n\n// file:src/parsing/url.js\nBoxParser.createFullBoxCtor(\"url \", \"DataEntryUrlBox\", function(stream) {\n\tif (this.flags !== 0x000001) {\n\t\tthis.location = stream.readCString();\n\t}\n});\n\n// file:src/parsing/urn.js\nBoxParser.createFullBoxCtor(\"urn \", \"DataEntryUrnBox\", function(stream) {\n\tthis.name = stream.readCString();\n\tif (this.size - this.hdr_size - this.name.length - 1 > 0) {\n\t\tthis.location = stream.readCString();\n\t}\n});\n\n// file:src/parsing/uuid/piff/piffLsm.js\nBoxParser.createUUIDBox(\"a5d40b30e81411ddba2f0800200c9a66\", \"LiveServerManifestBox\", true, false, function(stream) {\n    this.LiveServerManifest = stream.readString(this.size - this.hdr_size)\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n});// file:src/parsing/uuid/piff/piffPssh.js\nBoxParser.createUUIDBox(\"d08a4f1810f34a82b6c832d8aba183d3\", \"PiffProtectionSystemSpecificHeaderBox\", true, false, function(stream) {\n\tthis.system_id = BoxParser.parseHex16(stream);\n\tvar datasize = stream.readUint32();\n\tif (datasize > 0) {\n\t\tthis.data = stream.readUint8Array(datasize);\n\t}\n});\n\n// file:src/parsing/uuid/piff/piffSenc.js\nBoxParser.createUUIDBox(\"a2394f525a9b4f14a2446c427c648df4\", \"PiffSampleEncryptionBox\", true, false /*, function(stream) {\n\tif (this.flags & 0x1) {\n\t\tthis.AlgorithmID = stream.readUint24();\n\t\tthis.IV_size = stream.readUint8();\n\t\tthis.KID = BoxParser.parseHex16(stream);\n\t}\n\tvar sample_count = stream.readUint32();\n\tthis.samples = [];\n\tfor (var i = 0; i < sample_count; i++) {\n\t\tvar sample = {};\n\t\tsample.InitializationVector = this.readUint8Array(this.IV_size*8);\n\t\tif (this.flags & 0x2) {\n\t\t\tsample.subsamples = [];\n\t\t\tsample.NumberOfEntries = stream.readUint16();\n\t\t\tfor (var j = 0; j < sample.NumberOfEntries; j++) {\n\t\t\t\tvar subsample = {};\n\t\t\t\tsubsample.BytesOfClearData = stream.readUint16();\n\t\t\t\tsubsample.BytesOfProtectedData = stream.readUint32();\n\t\t\t\tsample.subsamples.push(subsample);\n\t\t\t}\n\t\t}\n\t\tthis.samples.push(sample);\n\t}\n}*/);\n// file:src/parsing/uuid/piff/piffTenc.js\nBoxParser.createUUIDBox(\"8974dbce7be74c5184f97148f9882554\", \"PiffTrackEncryptionBox\", true, false, function(stream) {\n\tthis.default_AlgorithmID = stream.readUint24();\n\tthis.default_IV_size = stream.readUint8();\n\tthis.default_KID = BoxParser.parseHex16(stream);\n});// file:src/parsing/uuid/piff/piffTfrf.js\nBoxParser.createUUIDBox(\"d4807ef2ca3946958e5426cb9e46a79f\", \"TfrfBox\", true, false, function(stream) {\n    this.fragment_count = stream.readUint8();\n    this.entries = [];\n\n    for (var i = 0; i < this.fragment_count; i++) {\n        var entry = {};\n        var absolute_time = 0;\n        var absolute_duration = 0;\n\n        if (this.version === 1) {\n            absolute_time = stream.readUint64();\n            absolute_duration = stream.readUint64();\n        } else {\n            absolute_time = stream.readUint32();\n            absolute_duration = stream.readUint32();\n        }\n\n        entry.absolute_time = absolute_time;\n        entry.absolute_duration = absolute_duration;\n\n        this.entries.push(entry);\n    }\n});// file:src/parsing/uuid/piff/piffTfxd.js\nBoxParser.createUUIDBox(\"6d1d9b0542d544e680e2141daff757b2\", \"TfxdBox\", true, false, function(stream) {\n    if (this.version === 1) {\n       this.absolute_time = stream.readUint64();\n       this.duration = stream.readUint64();\n    } else {\n       this.absolute_time = stream.readUint32();\n       this.duration = stream.readUint32();\n    }\n});// file:src/parsing/vmhd.js\nBoxParser.createFullBoxCtor(\"vmhd\", \"VideoMediaHeaderBox\", function(stream) {\n\tthis.graphicsmode = stream.readUint16();\n\tthis.opcolor = stream.readUint16Array(3);\n});\n\n// file:src/parsing/vpcC.js\nBoxParser.createFullBoxCtor(\"vpcC\", \"VPCodecConfigurationRecord\", function (stream) {\n\tvar tmp;\n\tif (this.version === 1) {\n\t\tthis.profile = stream.readUint8();\n\t\tthis.level = stream.readUint8();\n\t\ttmp = stream.readUint8();\n\t\tthis.bitDepth = tmp >> 4;\n\t\tthis.chromaSubsampling = (tmp >> 1) & 0x7;\n\t\tthis.videoFullRangeFlag = tmp & 0x1;\n\t\tthis.colourPrimaries = stream.readUint8();\n\t\tthis.transferCharacteristics = stream.readUint8();\n\t\tthis.matrixCoefficients = stream.readUint8();\n\t\tthis.codecIntializationDataSize = stream.readUint16();\n\t\tthis.codecIntializationData = stream.readUint8Array(this.codecIntializationDataSize);\n\t} else {\n\t\tthis.profile = stream.readUint8();\n\t\tthis.level = stream.readUint8();\n\t\ttmp = stream.readUint8();\n\t\tthis.bitDepth = (tmp >> 4) & 0xF;\n\t\tthis.colorSpace = tmp & 0xF;\n\t\ttmp = stream.readUint8();\n\t\tthis.chromaSubsampling = (tmp >> 4) & 0xF;\n\t\tthis.transferFunction = (tmp >> 1) & 0x7;\n\t\tthis.videoFullRangeFlag = tmp & 0x1;\n\t\tthis.codecIntializationDataSize = stream.readUint16();\n\t\tthis.codecIntializationData = stream.readUint8Array(this.codecIntializationDataSize);\n\t}\n});// file:src/parsing/vttC.js\nBoxParser.createBoxCtor(\"vttC\", \"WebVTTConfigurationBox\", function(stream) {\n\tthis.text = stream.readString(this.size - this.hdr_size);\n});\n\n// file:src/parsing/vvcC.js\nBoxParser.createFullBoxCtor(\"vvcC\", \"VvcConfigurationBox\", function (stream) {\n  var i, j;\n\n  // helper object to simplify extracting individual bits\n  var bitReader = {\n    held_bits: undefined,\n    num_held_bits: 0,\n\n    stream_read_1_bytes: function (strm) {\n      this.held_bits = strm.readUint8();\n      this.num_held_bits = 1 * 8;\n    },\n    stream_read_2_bytes: function (strm) {\n      this.held_bits = strm.readUint16();\n      this.num_held_bits = 2 * 8;\n    },\n\n    extract_bits: function (num_bits) {\n      var ret = (this.held_bits >> (this.num_held_bits - num_bits)) & ((1 << num_bits) - 1);\n      this.num_held_bits -= num_bits;\n      return ret;\n    }\n  };\n\n  // VvcDecoderConfigurationRecord\n  bitReader.stream_read_1_bytes(stream);\n  bitReader.extract_bits(5);  // reserved\n  this.lengthSizeMinusOne = bitReader.extract_bits(2);\n  this.ptl_present_flag = bitReader.extract_bits(1);\n\n  if (this.ptl_present_flag) {\n    bitReader.stream_read_2_bytes(stream);\n    this.ols_idx = bitReader.extract_bits(9);\n    this.num_sublayers = bitReader.extract_bits(3);\n    this.constant_frame_rate = bitReader.extract_bits(2);\n    this.chroma_format_idc = bitReader.extract_bits(2);\n\n    bitReader.stream_read_1_bytes(stream);\n    this.bit_depth_minus8 = bitReader.extract_bits(3);\n    bitReader.extract_bits(5);  // reserved\n\n    // VvcPTLRecord\n    {\n      bitReader.stream_read_2_bytes(stream);\n      bitReader.extract_bits(2);  // reserved\n      this.num_bytes_constraint_info = bitReader.extract_bits(6);\n      this.general_profile_idc = bitReader.extract_bits(7);\n      this.general_tier_flag = bitReader.extract_bits(1);\n\n      this.general_level_idc = stream.readUint8();\n\n      bitReader.stream_read_1_bytes(stream);\n      this.ptl_frame_only_constraint_flag = bitReader.extract_bits(1);\n      this.ptl_multilayer_enabled_flag = bitReader.extract_bits(1);\n\n      this.general_constraint_info = new Uint8Array(this.num_bytes_constraint_info);\n      if (this.num_bytes_constraint_info) {\n        for (i = 0; i < this.num_bytes_constraint_info - 1; i++) {\n          var cnstr1 = bitReader.extract_bits(6);\n          bitReader.stream_read_1_bytes(stream);\n          var cnstr2 = bitReader.extract_bits(2);\n\n          this.general_constraint_info[i] = ((cnstr1 << 2) | cnstr2);\n        }\n        this.general_constraint_info[this.num_bytes_constraint_info - 1] = bitReader.extract_bits(6);\n      } else {\n        //forbidden in spec!\n        bitReader.extract_bits(6);\n      }\n\n      if (this.num_sublayers > 1) {\n        bitReader.stream_read_1_bytes(stream);\n        this.ptl_sublayer_present_mask = 0;\n        for (j = this.num_sublayers - 2; j >= 0; --j) {\n          var val = bitReader.extract_bits(1);\n          this.ptl_sublayer_present_mask |= val << j;\n        }\n        for (j = this.num_sublayers; j <= 8 && this.num_sublayers > 1; ++j) {\n          bitReader.extract_bits(1);  // ptl_reserved_zero_bit\n        }\n\n        this.sublayer_level_idc = [];\n        for (j = this.num_sublayers - 2; j >= 0; --j) {\n          if (this.ptl_sublayer_present_mask & (1 << j)) {\n            this.sublayer_level_idc[j] = stream.readUint8();\n          }\n        }\n      }\n\n      this.ptl_num_sub_profiles = stream.readUint8();\n      this.general_sub_profile_idc = [];\n      if (this.ptl_num_sub_profiles) {\n        for (i = 0; i < this.ptl_num_sub_profiles; i++) {\n          this.general_sub_profile_idc.push(stream.readUint32());\n        }\n      }\n    }  // end VvcPTLRecord\n\n    this.max_picture_width = stream.readUint16();\n    this.max_picture_height = stream.readUint16();\n    this.avg_frame_rate = stream.readUint16();\n  }\n\n  var VVC_NALU_OPI = 12;\n  var VVC_NALU_DEC_PARAM = 13;\n\n  this.nalu_arrays = [];\n  var num_of_arrays = stream.readUint8();\n  for (i = 0; i < num_of_arrays; i++) {\n    var nalu_array = [];\n    this.nalu_arrays.push(nalu_array);\n\n    bitReader.stream_read_1_bytes(stream);\n    nalu_array.completeness = bitReader.extract_bits(1);\n    bitReader.extract_bits(2);  // reserved\n    nalu_array.nalu_type = bitReader.extract_bits(5);\n\n    var numNalus = 1;\n    if (nalu_array.nalu_type != VVC_NALU_DEC_PARAM && nalu_array.nalu_type != VVC_NALU_OPI) {\n      numNalus = stream.readUint16();\n    }\n\n    for (j = 0; j < numNalus; j++) {\n      var len = stream.readUint16();\n      nalu_array.push({\n        data: stream.readUint8Array(len),\n        length: len\n      });\n    }\n  }\n});\n// file:src/parsing/vvnC.js\nBoxParser.createFullBoxCtor(\"vvnC\", \"VvcNALUConfigBox\", function (stream) {\n  // VvcNALUConfigBox\n  var tmp = strm.readUint8();\n  this.lengthSizeMinusOne = (tmp & 0x3);\n});\n// file:src/box-codecs.js\nBoxParser.SampleEntry.prototype.isVideo = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.isAudio = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.isSubtitle = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.isMetadata = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.isHint = function() {\n\treturn false;\n}\n\nBoxParser.SampleEntry.prototype.getCodec = function() {\n\treturn this.type.replace('.','');\n}\n\nBoxParser.SampleEntry.prototype.getWidth = function() {\n\treturn \"\";\n}\n\nBoxParser.SampleEntry.prototype.getHeight = function() {\n\treturn \"\";\n}\n\nBoxParser.SampleEntry.prototype.getChannelCount = function() {\n\treturn \"\";\n}\n\nBoxParser.SampleEntry.prototype.getSampleRate = function() {\n\treturn \"\";\n}\n\nBoxParser.SampleEntry.prototype.getSampleSize = function() {\n\treturn \"\";\n}\n\nBoxParser.VisualSampleEntry.prototype.isVideo = function() {\n\treturn true;\n}\n\nBoxParser.VisualSampleEntry.prototype.getWidth = function() {\n\treturn this.width;\n}\n\nBoxParser.VisualSampleEntry.prototype.getHeight = function() {\n\treturn this.height;\n}\n\nBoxParser.AudioSampleEntry.prototype.isAudio = function() {\n\treturn true;\n}\n\nBoxParser.AudioSampleEntry.prototype.getChannelCount = function() {\n\treturn this.channel_count;\n}\n\nBoxParser.AudioSampleEntry.prototype.getSampleRate = function() {\n\treturn this.samplerate;\n}\n\nBoxParser.AudioSampleEntry.prototype.getSampleSize = function() {\n\treturn this.samplesize;\n}\n\nBoxParser.SubtitleSampleEntry.prototype.isSubtitle = function() {\n\treturn true;\n}\n\nBoxParser.MetadataSampleEntry.prototype.isMetadata = function() {\n\treturn true;\n}\n\n\nBoxParser.decimalToHex = function(d, padding) {\n\tvar hex = Number(d).toString(16);\n\tpadding = typeof (padding) === \"undefined\" || padding === null ? padding = 2 : padding;\n\twhile (hex.length < padding) {\n\t\thex = \"0\" + hex;\n\t}\n\treturn hex;\n}\n\nBoxParser.avc1SampleEntry.prototype.getCodec =\nBoxParser.avc2SampleEntry.prototype.getCodec =\nBoxParser.avc3SampleEntry.prototype.getCodec =\nBoxParser.avc4SampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif (this.avcC) {\n\t\treturn baseCodec+\".\"+BoxParser.decimalToHex(this.avcC.AVCProfileIndication)+\n\t\t\t\t\t\t  \"\"+BoxParser.decimalToHex(this.avcC.profile_compatibility)+\n\t\t\t\t\t\t  \"\"+BoxParser.decimalToHex(this.avcC.AVCLevelIndication);\n\t} else {\n\t\treturn baseCodec;\n\t}\n}\n\nBoxParser.hev1SampleEntry.prototype.getCodec =\nBoxParser.hvc1SampleEntry.prototype.getCodec = function() {\n\tvar i;\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif (this.hvcC) {\n\t\tbaseCodec += '.';\n\t\tswitch (this.hvcC.general_profile_space) {\n\t\t\tcase 0:\n\t\t\t\tbaseCodec += '';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tbaseCodec += 'A';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbaseCodec += 'B';\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tbaseCodec += 'C';\n\t\t\t\tbreak;\n\t\t}\n\t\tbaseCodec += this.hvcC.general_profile_idc;\n\t\tbaseCodec += '.';\n\t\tvar val = this.hvcC.general_profile_compatibility;\n\t\tvar reversed = 0;\n\t\tfor (i=0; i<32; i++) {\n\t\t\treversed |= val & 1;\n\t\t\tif (i==31) break;\n\t\t\treversed <<= 1;\n\t\t\tval >>=1;\n\t\t}\n\t\tbaseCodec += BoxParser.decimalToHex(reversed, 0);\n\t\tbaseCodec += '.';\n\t\tif (this.hvcC.general_tier_flag === 0) {\n\t\t\tbaseCodec += 'L';\n\t\t} else {\n\t\t\tbaseCodec += 'H';\n\t\t}\n\t\tbaseCodec += this.hvcC.general_level_idc;\n\t\tvar hasByte = false;\n\t\tvar constraint_string = \"\";\n\t\tfor (i = 5; i >= 0; i--) {\n\t\t\tif (this.hvcC.general_constraint_indicator[i] || hasByte) {\n\t\t\t\tconstraint_string = \".\"+BoxParser.decimalToHex(this.hvcC.general_constraint_indicator[i], 0)+constraint_string;\n\t\t\t\thasByte = true;\n\t\t\t}\n\t\t}\n\t\tbaseCodec += constraint_string;\n\t}\n\treturn baseCodec;\n}\n\nBoxParser.vvc1SampleEntry.prototype.getCodec =\nBoxParser.vvi1SampleEntry.prototype.getCodec = function () {\n\tvar i;\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif (this.vvcC) {\n\t\tbaseCodec += '.' + this.vvcC.general_profile_idc;\n\t\tif (this.vvcC.general_tier_flag) {\n\t\t\tbaseCodec += '.H';\n\t\t} else {\n\t\t\tbaseCodec += '.L';\n\t\t}\n\t\tbaseCodec += this.vvcC.general_level_idc;\n\n\t\tvar constraint_string = \"\";\n\t\tif (this.vvcC.general_constraint_info) {\n\t\t\tvar bytes = [];\n\t\t\tvar byte = 0;\n\t\t\tbyte |= this.vvcC.ptl_frame_only_constraint << 7;\n\t\t\tbyte |= this.vvcC.ptl_multilayer_enabled << 6;\n\t\t\tvar last_nonzero;\n\t\t\tfor (i = 0; i < this.vvcC.general_constraint_info.length; ++i) {\n\t\t\t\tbyte |= (this.vvcC.general_constraint_info[i] >> 2) & 0x3f;\n\t\t\t\tbytes.push(byte);\n\t\t\t\tif (byte) {\n\t\t\t\t\tlast_nonzero = i;\n\t\t\t\t}\n\n\t\t\t\tbyte = (this.vvcC.general_constraint_info[i] >> 2) & 0x03;\n\t\t\t}\n\n\t\t\tif (last_nonzero === undefined) {\n\t\t\t\tconstraint_string = \".CA\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconstraint_string = \".C\"\n\t\t\t\tvar base32_chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\n\t\t\t\tvar held_bits = 0;\n\t\t\t\tvar num_held_bits = 0;\n\t\t\t\tfor (i = 0; i <= last_nonzero; ++i) {\n\t\t\t\t\theld_bits = (held_bits << 8) | bytes[i];\n\t\t\t\t\tnum_held_bits += 8;\n\n\t\t\t\t\twhile (num_held_bits >= 5) {\n\t\t\t\t\t\tvar val = (held_bits >> (num_held_bits - 5)) & 0x1f;\n\t\t\t\t\t\tconstraint_string += base32_chars[val];\n\n\t\t\t\t\t\tnum_held_bits -= 5;\n\t\t\t\t\t\theld_bits &= (1 << num_held_bits) - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (num_held_bits) {\n\t\t\t\t\theld_bits <<= (5 - num_held_bits);  // right-pad with zeros to 5 bits (is this correct?)\n\t\t\t\t\tconstraint_string += base32_chars[held_bits & 0x1f];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbaseCodec += constraint_string;\n\t}\n\treturn baseCodec;\n}\n\nBoxParser.mp4aSampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif (this.esds && this.esds.esd) {\n\t\tvar oti = this.esds.esd.getOTI();\n\t\tvar dsi = this.esds.esd.getAudioConfig();\n\t\treturn baseCodec+\".\"+BoxParser.decimalToHex(oti)+(dsi ? \".\"+dsi: \"\");\n\t} else {\n\t\treturn baseCodec;\n\t}\n}\n\nBoxParser.stxtSampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tif(this.mime_format) {\n\t\treturn baseCodec + \".\" + this.mime_format;\n\t} else {\n\t\treturn baseCodec\n\t}\n}\n\nBoxParser.vp08SampleEntry.prototype.getCodec =\nBoxParser.vp09SampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tvar level = this.vpcC.level;\n\tif (level == 0) {\n\t\tlevel = \"00\";\n\t}\n\tvar bitDepth = this.vpcC.bitDepth;\n\tif (bitDepth == 8) {\n\t\tbitDepth = \"08\";\n\t}\n\treturn baseCodec + \".0\" + this.vpcC.profile + \".\" + level + \".\" + bitDepth;\n}\n\nBoxParser.av01SampleEntry.prototype.getCodec = function() {\n\tvar baseCodec = BoxParser.SampleEntry.prototype.getCodec.call(this);\n\tvar level = this.av1C.seq_level_idx_0;\n\tif (level < 10) {\n\t\tlevel = \"0\" + level;\n\t}\n\tvar bitdepth;\n\tif (this.av1C.seq_profile === 2 && this.av1C.high_bitdepth === 1) {\n\t\tbitdepth = (this.av1C.twelve_bit === 1) ? \"12\" : \"10\";\n\t} else if ( this.av1C.seq_profile <= 2 ) {\n\t\tbitdepth = (this.av1C.high_bitdepth === 1) ? \"10\" : \"08\";\n\t}\n\t// TODO need to parse the SH to find color config\n\treturn baseCodec+\".\"+this.av1C.seq_profile+\".\"+level+(this.av1C.seq_tier_0?\"H\":\"M\")+\".\"+bitdepth;//+\".\"+this.av1C.monochrome+\".\"+this.av1C.chroma_subsampling_x+\"\"+this.av1C.chroma_subsampling_y+\"\"+this.av1C.chroma_sample_position;\n}\n// file:src/box-write.js\n/* \n * Copyright (c) Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nBoxParser.Box.prototype.writeHeader = function(stream, msg) {\n\tthis.size += 8;\n\tif (this.size > MAX_SIZE) {\n\t\tthis.size += 8;\n\t}\n\tif (this.type === \"uuid\") {\n\t\tthis.size += 16;\n\t}\n\tLog.debug(\"BoxWriter\", \"Writing box \"+this.type+\" of size: \"+this.size+\" at position \"+stream.getPosition()+(msg || \"\"));\n\tif (this.size > MAX_SIZE) {\n\t\tstream.writeUint32(1);\n\t} else {\n\t\tthis.sizePosition = stream.getPosition();\n\t\tstream.writeUint32(this.size);\n\t}\n\tstream.writeString(this.type, null, 4);\n\tif (this.type === \"uuid\") {\n\t\tstream.writeUint8Array(this.uuid);\n\t}\n\tif (this.size > MAX_SIZE) {\n\t\tstream.writeUint64(this.size);\n\t} \n}\n\nBoxParser.FullBox.prototype.writeHeader = function(stream) {\n\tthis.size += 4;\n\tBoxParser.Box.prototype.writeHeader.call(this, stream, \" v=\"+this.version+\" f=\"+this.flags);\n\tstream.writeUint8(this.version);\n\tstream.writeUint24(this.flags);\n}\n\nBoxParser.Box.prototype.write = function(stream) {\n\tif (this.type === \"mdat\") {\n\t\t/* TODO: fix this */\n\t\tif (this.data) {\n\t\t\tthis.size = this.data.length;\n\t\t\tthis.writeHeader(stream);\n\t\t\tstream.writeUint8Array(this.data);\n\t\t}\n\t} else {\n\t\tthis.size = (this.data ? this.data.length : 0);\n\t\tthis.writeHeader(stream);\n\t\tif (this.data) {\n\t\t\tstream.writeUint8Array(this.data);\n\t\t}\n\t}\n}\n\nBoxParser.ContainerBox.prototype.write = function(stream) {\n\tthis.size = 0;\n\tthis.writeHeader(stream);\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tif (this.boxes[i]) {\n\t\t\tthis.boxes[i].write(stream);\n\t\t\tthis.size += this.boxes[i].size;\n\t\t}\n\t}\n\t/* adjusting the size, now that all sub-boxes are known */\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\n}\n\nBoxParser.TrackReferenceTypeBox.prototype.write = function(stream) {\n\tthis.size = this.track_ids.length*4;\n\tthis.writeHeader(stream);\n\tstream.writeUint32Array(this.track_ids);\n}\n\n// file:src/writing/avcC.js\nBoxParser.avcCBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.size = 7;\n\tfor (i = 0; i < this.SPS.length; i++) {\n\t\tthis.size += 2+this.SPS[i].length;\n\t}\n\tfor (i = 0; i < this.PPS.length; i++) {\n\t\tthis.size += 2+this.PPS[i].length;\n\t}\n\tif (this.ext) {\n\t\tthis.size += this.ext.length;\n\t}\n\tthis.writeHeader(stream);\n\tstream.writeUint8(this.configurationVersion);\n\tstream.writeUint8(this.AVCProfileIndication);\n\tstream.writeUint8(this.profile_compatibility);\n\tstream.writeUint8(this.AVCLevelIndication);\n\tstream.writeUint8(this.lengthSizeMinusOne + (63<<2));\n\tstream.writeUint8(this.SPS.length + (7<<5));\n\tfor (i = 0; i < this.SPS.length; i++) {\n\t\tstream.writeUint16(this.SPS[i].length);\n\t\tstream.writeUint8Array(this.SPS[i].nalu);\n\t}\n\tstream.writeUint8(this.PPS.length);\n\tfor (i = 0; i < this.PPS.length; i++) {\n\t\tstream.writeUint16(this.PPS[i].length);\n\t\tstream.writeUint8Array(this.PPS[i].nalu);\n\t}\n\tif (this.ext) {\n\t\tstream.writeUint8Array(this.ext);\n\t}\n}\n\n// file:src/writing/co64.js\nBoxParser.co64Box.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+8*this.chunk_offsets.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.chunk_offsets.length);\n\tfor(i=0; i<this.chunk_offsets.length; i++) {\n\t\tstream.writeUint64(this.chunk_offsets[i]);\n\t}\n}\n\n// file:src/writing/cslg.js\nBoxParser.cslgBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4*5;\n\tthis.writeHeader(stream);\n\tstream.writeInt32(this.compositionToDTSShift);\n\tstream.writeInt32(this.leastDecodeToDisplayDelta);\n\tstream.writeInt32(this.greatestDecodeToDisplayDelta);\n\tstream.writeInt32(this.compositionStartTime);\n\tstream.writeInt32(this.compositionEndTime);\n}\n\n// file:src/writing/ctts.js\nBoxParser.cttsBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+8*this.sample_counts.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sample_counts.length);\n\tfor(i=0; i<this.sample_counts.length; i++) {\n\t\tstream.writeUint32(this.sample_counts[i]);\n\t\tif (this.version === 1) {\n\t\t\tstream.writeInt32(this.sample_offsets[i]); /* signed */\n\t\t} else {\t\t\t\n\t\t\tstream.writeUint32(this.sample_offsets[i]); /* unsigned */\n\t\t}\n\t}\n}\n\n// file:src/writing/dref.js\nBoxParser.drefBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4; //\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.entries.length);\n\tfor (var i = 0; i < this.entries.length; i++) {\n\t\tthis.entries[i].write(stream);\n\t\tthis.size += this.entries[i].size;\n\t}\t\n\t/* adjusting the size, now that all sub-boxes are known */\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\n}\n\n// file:src/writing/elng.js\nBoxParser.elngBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = this.extended_language.length;\n\tthis.writeHeader(stream);\n\tstream.writeString(this.extended_language);\n}\n\n// file:src/writing/elst.js\nBoxParser.elstBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = 4+12*this.entries.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.entries.length);\n\tfor (var i = 0; i < this.entries.length; i++) {\n\t\tvar entry = this.entries[i];\n\t\tstream.writeUint32(entry.segment_duration);\n\t\tstream.writeInt32(entry.media_time);\n\t\tstream.writeInt16(entry.media_rate_integer);\n\t\tstream.writeInt16(entry.media_rate_fraction);\n\t}\n}\n\n// file:src/writing/emsg.js\nBoxParser.emsgBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = 4*4+this.message_data.length+(this.scheme_id_uri.length+1)+(this.value.length+1);\n\tthis.writeHeader(stream);\n\tstream.writeCString(this.scheme_id_uri);\n\tstream.writeCString(this.value);\n\tstream.writeUint32(this.timescale);\n\tstream.writeUint32(this.presentation_time_delta);\n\tstream.writeUint32(this.event_duration);\n\tstream.writeUint32(this.id);\n\tstream.writeUint8Array(this.message_data);\n}\n\n// file:src/writing/ftyp.js\nBoxParser.ftypBox.prototype.write = function(stream) {\n\tthis.size = 8+4*this.compatible_brands.length;\n\tthis.writeHeader(stream);\n\tstream.writeString(this.major_brand, null, 4);\n\tstream.writeUint32(this.minor_version);\n\tfor (var i = 0; i < this.compatible_brands.length; i++) {\n\t\tstream.writeString(this.compatible_brands[i], null, 4);\n\t}\n}\n\n// file:src/writing/hdlr.js\nBoxParser.hdlrBox.prototype.write = function(stream) {\n\tthis.size = 5*4+this.name.length+1;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(0);\n\tstream.writeString(this.handler, null, 4);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeCString(this.name);\n}\n\n// file:src/writing/hvcC.js\nBoxParser.hvcCBox.prototype.write = function(stream) {\n    var i,j;\n    this.size = 23;\n\n    for (i = 0; i < this.nalu_arrays.length; i++) {\n      this.size += 3;\n      for (j = 0; j < this.nalu_arrays[i].length; j++) {\n        this.size += 2 + this.nalu_arrays[i][j].data.length;\n      }\n    }\n\n    this.writeHeader(stream);\n\n    stream.writeUint8(this.configurationVersion);\n    stream.writeUint8((this.general_profile_space << 6) +\n                      (this.general_tier_flag << 5) +\n                      this.general_profile_idc);\n    stream.writeUint32(this.general_profile_compatibility);\n    stream.writeUint8Array(this.general_constraint_indicator);\n    stream.writeUint8(this.general_level_idc);\n    stream.writeUint16(this.min_spatial_segmentation_idc + (15<<24));\n    stream.writeUint8(this.parallelismType + (63<<2));\n    stream.writeUint8(this.chroma_format_idc + (63<<2));\n    stream.writeUint8(this.bit_depth_luma_minus8 + (31<<3));\n    stream.writeUint8(this.bit_depth_chroma_minus8 + (31<<3));\n    stream.writeUint16(this.avgFrameRate);\n    stream.writeUint8((this.constantFrameRate<<6) +\n                   (this.numTemporalLayers<<3) +\n                   (this.temporalIdNested<<2) +\n                   this.lengthSizeMinusOne);\n    stream.writeUint8(this.nalu_arrays.length);\n    for (i = 0; i < this.nalu_arrays.length; i++) {\n      // bit(1) array_completeness + bit(1) reserved = 0 + bit(6) nal_unit_type\n      stream.writeUint8((this.nalu_arrays[i].completeness<<7) +\n                         this.nalu_arrays[i].nalu_type);\n      stream.writeUint16(this.nalu_arrays[i].length);\n      for (j = 0; j < this.nalu_arrays[i].length; j++) {\n        stream.writeUint16(this.nalu_arrays[i][j].data.length);\n        stream.writeUint8Array(this.nalu_arrays[i][j].data);\n      }\n    }\n}\n// file:src/writing/kind.js\nBoxParser.kindBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = (this.schemeURI.length+1)+(this.value.length+1);\n\tthis.writeHeader(stream);\n\tstream.writeCString(this.schemeURI);\n\tstream.writeCString(this.value);\n}\n\n// file:src/writing/mdhd.js\nBoxParser.mdhdBox.prototype.write = function(stream) {\n\tthis.size = 4*4+2*2;\n\tthis.flags = 0;\n\tthis.version = 0;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.creation_time);\n\tstream.writeUint32(this.modification_time);\n\tstream.writeUint32(this.timescale);\n\tstream.writeUint32(this.duration);\n\tstream.writeUint16(this.language);\n\tstream.writeUint16(0);\n}\n\n// file:src/writing/mehd.js\nBoxParser.mehdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.fragment_duration);\n}\n\n// file:src/writing/mfhd.js\nBoxParser.mfhdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sequence_number);\n}\n\n// file:src/writing/mvhd.js\nBoxParser.mvhdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 23*4+2*2;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.creation_time);\n\tstream.writeUint32(this.modification_time);\n\tstream.writeUint32(this.timescale);\n\tstream.writeUint32(this.duration);\n\tstream.writeUint32(this.rate);\n\tstream.writeUint16(this.volume<<8);\n\tstream.writeUint16(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32Array(this.matrix);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(this.next_track_id);\n}\n\n// file:src/writing/sampleentry.js\nBoxParser.SampleEntry.prototype.writeHeader = function(stream) {\n\tthis.size = 8;\n\tBoxParser.Box.prototype.writeHeader.call(this, stream);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint8(0);\n\tstream.writeUint16(this.data_reference_index);\n}\n\nBoxParser.SampleEntry.prototype.writeFooter = function(stream) {\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tthis.boxes[i].write(stream);\n\t\tthis.size += this.boxes[i].size;\n\t}\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\t\n}\n\nBoxParser.SampleEntry.prototype.write = function(stream) {\n\tthis.writeHeader(stream);\n\tstream.writeUint8Array(this.data);\n\tthis.size += this.data.length;\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\t\n}\n\nBoxParser.VisualSampleEntry.prototype.write = function(stream) {\n\tthis.writeHeader(stream);\n\tthis.size += 2*7+6*4+32;\n\tstream.writeUint16(0); \n\tstream.writeUint16(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint16(this.width);\n\tstream.writeUint16(this.height);\n\tstream.writeUint32(this.horizresolution);\n\tstream.writeUint32(this.vertresolution);\n\tstream.writeUint32(0);\n\tstream.writeUint16(this.frame_count);\n\tstream.writeUint8(Math.min(31, this.compressorname.length));\n\tstream.writeString(this.compressorname, null, 31);\n\tstream.writeUint16(this.depth);\n\tstream.writeInt16(-1);\n\tthis.writeFooter(stream);\n}\n\nBoxParser.AudioSampleEntry.prototype.write = function(stream) {\n\tthis.writeHeader(stream);\n\tthis.size += 2*4+3*4;\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeUint16(this.channel_count);\n\tstream.writeUint16(this.samplesize);\n\tstream.writeUint16(0);\n\tstream.writeUint16(0);\n\tstream.writeUint32(this.samplerate<<16);\n\tthis.writeFooter(stream);\n}\n\nBoxParser.stppSampleEntry.prototype.write = function(stream) {\n\tthis.writeHeader(stream);\n\tthis.size += this.namespace.length+1+\n\t\t\t\t this.schema_location.length+1+\n\t\t\t\t this.auxiliary_mime_types.length+1;\n\tstream.writeCString(this.namespace);\n\tstream.writeCString(this.schema_location);\n\tstream.writeCString(this.auxiliary_mime_types);\n\tthis.writeFooter(stream);\n}\n\n// file:src/writing/samplegroups/samplegroup.js\nBoxParser.SampleGroupEntry.prototype.write = function(stream) {\n\tstream.writeUint8Array(this.data);\n}\n\n// file:src/writing/sbgp.js\nBoxParser.sbgpBox.prototype.write = function(stream) {\n\tthis.version = 1;\t\n\tthis.flags = 0;\n\tthis.size = 12+8*this.entries.length;\n\tthis.writeHeader(stream);\n\tstream.writeString(this.grouping_type, null, 4);\n\tstream.writeUint32(this.grouping_type_parameter);\n\tstream.writeUint32(this.entries.length);\n\tfor (var i = 0; i < this.entries.length; i++) {\n\t\tvar entry = this.entries[i];\n\t\tstream.writeInt32(entry.sample_count);\n\t\tstream.writeInt32(entry.group_description_index);\n\t}\n}\n\n// file:src/writing/sgpd.js\nBoxParser.sgpdBox.prototype.write = function(stream) {\n\tvar i;\n\tvar entry;\n\t// leave version as read\n\t// this.version;\n\tthis.flags = 0;\n\tthis.size = 12;\n\tfor (i = 0; i < this.entries.length; i++) {\n\t\tentry = this.entries[i];\n\t\tif (this.version === 1) {\n\t\t\tif (this.default_length === 0) {\n\t\t\t\tthis.size += 4;\n\t\t\t}\n\t\t\tthis.size += entry.data.length;\n\t\t}\n\t}\n\tthis.writeHeader(stream);\n\tstream.writeString(this.grouping_type, null, 4);\n\tif (this.version === 1) {\n\t\tstream.writeUint32(this.default_length);\n\t}\n\tif (this.version >= 2) {\n\t\tstream.writeUint32(this.default_sample_description_index);\n\t}\n\tstream.writeUint32(this.entries.length);\n\tfor (i = 0; i < this.entries.length; i++) {\n\t\tentry = this.entries[i];\n\t\tif (this.version === 1) {\n\t\t\tif (this.default_length === 0) {\n\t\t\t\tstream.writeUint32(entry.description_length);\n\t\t\t}\n\t\t}\n\t\tentry.write(stream);\n\t}\n}\n\n\n// file:src/writing/sidx.js\nBoxParser.sidxBox.prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = 4*4+2+2+12*this.references.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.reference_ID);\n\tstream.writeUint32(this.timescale);\n\tstream.writeUint32(this.earliest_presentation_time);\n\tstream.writeUint32(this.first_offset);\n\tstream.writeUint16(0);\n\tstream.writeUint16(this.references.length);\n\tfor (var i = 0; i < this.references.length; i++) {\n\t\tvar ref = this.references[i];\n\t\tstream.writeUint32(ref.reference_type << 31 | ref.referenced_size);\n\t\tstream.writeUint32(ref.subsegment_duration);\n\t\tstream.writeUint32(ref.starts_with_SAP << 31 | ref.SAP_type << 28 | ref.SAP_delta_time);\n\t}\n}\n\n// file:src/writing/smhd.js\nBoxParser.smhdBox.prototype.write = function(stream) {\n  var i;\n  this.version = 0;\n  this.flags = 1;\n  this.size = 4;\n  this.writeHeader(stream);\n  stream.writeUint16(this.balance);\n  stream.writeUint16(0);\n}\n// file:src/writing/stco.js\nBoxParser.stcoBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+4*this.chunk_offsets.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.chunk_offsets.length);\n\tstream.writeUint32Array(this.chunk_offsets);\n}\n\n// file:src/writing/stsc.js\nBoxParser.stscBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+12*this.first_chunk.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.first_chunk.length);\n\tfor(i=0; i<this.first_chunk.length; i++) {\n\t\tstream.writeUint32(this.first_chunk[i]);\n\t\tstream.writeUint32(this.samples_per_chunk[i]);\n\t\tstream.writeUint32(this.sample_description_index[i]);\n\t}\n}\n\n// file:src/writing/stsd.js\nBoxParser.stsdBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 0;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.entries.length);\n\tthis.size += 4;\n\tfor (i = 0; i < this.entries.length; i++) {\n\t\tthis.entries[i].write(stream);\n\t\tthis.size += this.entries[i].size;\n\t}\n\t/* adjusting the size, now that all sub-boxes are known */\n\tLog.debug(\"BoxWriter\", \"Adjusting box \"+this.type+\" with new size \"+this.size);\n\tstream.adjustUint32(this.sizePosition, this.size);\n}\n\n// file:src/writing/stsh.js\nBoxParser.stshBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+8*this.shadowed_sample_numbers.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.shadowed_sample_numbers.length);\n\tfor(i=0; i<this.shadowed_sample_numbers.length; i++) {\n\t\tstream.writeUint32(this.shadowed_sample_numbers[i]);\n\t\tstream.writeUint32(this.sync_sample_numbers[i]);\n\t}\n}\n\n// file:src/writing/stss.js\nBoxParser.stssBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+4*this.sample_numbers.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sample_numbers.length);\n\tstream.writeUint32Array(this.sample_numbers);\n}\n\n// file:src/writing/stsz.js\nBoxParser.stszBox.prototype.write = function(stream) {\n\tvar i;\n\tvar constant = true;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tif (this.sample_sizes.length > 0) {\n\t\ti = 0;\n\t\twhile (i+1 < this.sample_sizes.length) {\n\t\t\tif (this.sample_sizes[i+1] !==  this.sample_sizes[0]) {\n\t\t\t\tconstant = false;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconstant = false;\n\t}\n\tthis.size = 8;\n\tif (!constant) {\n\t\tthis.size += 4*this.sample_sizes.length;\n\t}\n\tthis.writeHeader(stream);\n\tif (!constant) {\n\t\tstream.writeUint32(0);\n\t} else {\n\t\tstream.writeUint32(this.sample_sizes[0]);\n\t}\n\tstream.writeUint32(this.sample_sizes.length);\n\tif (!constant) {\n\t\tstream.writeUint32Array(this.sample_sizes);\n\t}\t\n}\n\n// file:src/writing/stts.js\nBoxParser.sttsBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4+8*this.sample_counts.length;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sample_counts.length);\n\tfor(i=0; i<this.sample_counts.length; i++) {\n\t\tstream.writeUint32(this.sample_counts[i]);\n\t\tstream.writeUint32(this.sample_deltas[i]);\n\t}\n}\n\n// file:src/writing/tfdt.js\nBoxParser.tfdtBox.prototype.write = function(stream) {\n\tvar UINT32_MAX = Math.pow(2, 32) - 1;\n\t// use version 1 if baseMediaDecodeTime does not fit 32 bits\n\tthis.version = this.baseMediaDecodeTime > UINT32_MAX ? 1 : 0;\n\tthis.flags = 0;\n\tthis.size = 4;\n\tif (this.version === 1) {\n\t\tthis.size += 4;\n\t}\n\tthis.writeHeader(stream);\n\tif (this.version === 1) {\n\t\tstream.writeUint64(this.baseMediaDecodeTime);\n\t} else {\n\t\tstream.writeUint32(this.baseMediaDecodeTime);\n\t}\n}\n\n// file:src/writing/tfhd.js\nBoxParser.tfhdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.size = 4;\n\tif (this.flags & BoxParser.TFHD_FLAG_BASE_DATA_OFFSET) {\n\t\tthis.size += 8;\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DESC) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DUR) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_SIZE) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_FLAGS) {\n\t\tthis.size += 4;\n\t}\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.track_id);\n\tif (this.flags & BoxParser.TFHD_FLAG_BASE_DATA_OFFSET) {\n\t\tstream.writeUint64(this.base_data_offset);\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DESC) {\n\t\tstream.writeUint32(this.default_sample_description_index);\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_DUR) {\n\t\tstream.writeUint32(this.default_sample_duration);\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_SIZE) {\n\t\tstream.writeUint32(this.default_sample_size);\n\t}\n\tif (this.flags & BoxParser.TFHD_FLAG_SAMPLE_FLAGS) {\n\t\tstream.writeUint32(this.default_sample_flags);\n\t}\n}\n\n// file:src/writing/tkhd.js\nBoxParser.tkhdBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\t//this.flags = 0;\n\tthis.size = 4*18+2*4;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.creation_time);\n\tstream.writeUint32(this.modification_time);\n\tstream.writeUint32(this.track_id);\n\tstream.writeUint32(0);\n\tstream.writeUint32(this.duration);\n\tstream.writeUint32(0);\n\tstream.writeUint32(0);\n\tstream.writeInt16(this.layer);\n\tstream.writeInt16(this.alternate_group);\n\tstream.writeInt16(this.volume<<8);\n\tstream.writeUint16(0);\n\tstream.writeInt32Array(this.matrix);\n\tstream.writeUint32(this.width);\n\tstream.writeUint32(this.height);\n}\n\n// file:src/writing/trex.js\nBoxParser.trexBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.flags = 0;\n\tthis.size = 4*5;\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.track_id);\n\tstream.writeUint32(this.default_sample_description_index);\n\tstream.writeUint32(this.default_sample_duration);\n\tstream.writeUint32(this.default_sample_size);\n\tstream.writeUint32(this.default_sample_flags);\n}\n\n// file:src/writing/trun.js\nBoxParser.trunBox.prototype.write = function(stream) {\n\tthis.version = 0;\n\tthis.size = 4;\n\tif (this.flags & BoxParser.TRUN_FLAGS_DATA_OFFSET) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_FIRST_FLAG) {\n\t\tthis.size += 4;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_DURATION) {\n\t\tthis.size += 4*this.sample_duration.length;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_SIZE) {\n\t\tthis.size += 4*this.sample_size.length;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_FLAGS) {\n\t\tthis.size += 4*this.sample_flags.length;\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_CTS_OFFSET) {\n\t\tthis.size += 4*this.sample_composition_time_offset.length;\n\t}\n\tthis.writeHeader(stream);\n\tstream.writeUint32(this.sample_count);\n\tif (this.flags & BoxParser.TRUN_FLAGS_DATA_OFFSET) {\n\t\tthis.data_offset_position = stream.getPosition();\n\t\tstream.writeInt32(this.data_offset); //signed\n\t}\n\tif (this.flags & BoxParser.TRUN_FLAGS_FIRST_FLAG) {\n\t\tstream.writeUint32(this.first_sample_flags);\n\t}\n\tfor (var i = 0; i < this.sample_count; i++) {\n\t\tif (this.flags & BoxParser.TRUN_FLAGS_DURATION) {\n\t\t\tstream.writeUint32(this.sample_duration[i]);\n\t\t}\n\t\tif (this.flags & BoxParser.TRUN_FLAGS_SIZE) {\n\t\t\tstream.writeUint32(this.sample_size[i]);\n\t\t}\n\t\tif (this.flags & BoxParser.TRUN_FLAGS_FLAGS) {\n\t\t\tstream.writeUint32(this.sample_flags[i]);\n\t\t}\n\t\tif (this.flags & BoxParser.TRUN_FLAGS_CTS_OFFSET) {\n\t\t\tif (this.version === 0) {\n\t\t\t\tstream.writeUint32(this.sample_composition_time_offset[i]);\n\t\t\t} else {\n\t\t\t\tstream.writeInt32(this.sample_composition_time_offset[i]); //signed\n\t\t\t}\n\t\t}\n\t}\t\t\n}\n\n// file:src/writing/url.js\nBoxParser[\"url Box\"].prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tif (this.location) {\n\t\tthis.flags = 0;\n\t\tthis.size = this.location.length+1;\n\t} else {\n\t\tthis.flags = 0x000001;\n\t\tthis.size = 0;\n\t}\n\tthis.writeHeader(stream);\n\tif (this.location) {\n\t\tstream.writeCString(this.location);\n\t}\n}\n\n// file:src/writing/urn.js\nBoxParser[\"urn Box\"].prototype.write = function(stream) {\n\tthis.version = 0;\t\n\tthis.flags = 0;\n\tthis.size = this.name.length+1+(this.location ? this.location.length+1 : 0);\n\tthis.writeHeader(stream);\n\tstream.writeCString(this.name);\n\tif (this.location) {\n\t\tstream.writeCString(this.location);\n\t}\n}\n\n// file:src/writing/vmhd.js\nBoxParser.vmhdBox.prototype.write = function(stream) {\n\tvar i;\n\tthis.version = 0;\n\tthis.flags = 1;\n\tthis.size = 8;\n\tthis.writeHeader(stream);\n\tstream.writeUint16(this.graphicsmode);\n\tstream.writeUint16Array(this.opcolor);\n}\n\n// file:src/box-unpack.js\n/* \n * Copyright (c) Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nBoxParser.cttsBox.prototype.unpack = function(samples) {\n\tvar i, j, k;\n\tk = 0;\n\tfor (i = 0; i < this.sample_counts.length; i++) {\n\t\tfor (j = 0; j < this.sample_counts[i]; j++) {\n\t\t\tsamples[k].pts = samples[k].dts + this.sample_offsets[i];\n\t\t\tk++;\n\t\t}\n\t}\n}\n\nBoxParser.sttsBox.prototype.unpack = function(samples) {\n\tvar i, j, k;\n\tk = 0;\n\tfor (i = 0; i < this.sample_counts.length; i++) {\n\t\tfor (j = 0; j < this.sample_counts[i]; j++) {\n\t\t\tif (k === 0) {\n\t\t\t\tsamples[k].dts = 0;\n\t\t\t} else {\n\t\t\t\tsamples[k].dts = samples[k-1].dts + this.sample_deltas[i];\n\t\t\t}\n\t\t\tk++;\n\t\t}\n\t}\n}\n\nBoxParser.stcoBox.prototype.unpack = function(samples) {\n\tvar i;\n\tfor (i = 0; i < this.chunk_offsets.length; i++) {\n\t\tsamples[i].offset = this.chunk_offsets[i];\n\t}\n}\n\nBoxParser.stscBox.prototype.unpack = function(samples) {\n\tvar i, j, k, l, m;\n\tl = 0;\n\tm = 0;\n\tfor (i = 0; i < this.first_chunk.length; i++) {\n\t\tfor (j = 0; j < (i+1 < this.first_chunk.length ? this.first_chunk[i+1] : Infinity); j++) {\n\t\t\tm++;\n\t\t\tfor (k = 0; k < this.samples_per_chunk[i]; k++) {\n\t\t\t\tif (samples[l]) {\n\t\t\t\t\tsamples[l].description_index = this.sample_description_index[i];\n\t\t\t\t\tsamples[l].chunk_index = m;\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tl++;\n\t\t\t}\t\t\t\n\t\t}\n\t}\n}\n\nBoxParser.stszBox.prototype.unpack = function(samples) {\n\tvar i;\n\tfor (i = 0; i < this.sample_sizes.length; i++) {\n\t\tsamples[i].size = this.sample_sizes[i];\n\t}\n}\n// file:src/box-diff.js\n\nBoxParser.DIFF_BOXES_PROP_NAMES = [ \"boxes\", \"entries\", \"references\", \"subsamples\",\n\t\t\t\t\t \t \"items\", \"item_infos\", \"extents\", \"associations\",\n\t\t\t\t\t \t \"subsegments\", \"ranges\", \"seekLists\", \"seekPoints\",\n\t\t\t\t\t \t \"esd\", \"levels\"];\n\nBoxParser.DIFF_PRIMITIVE_ARRAY_PROP_NAMES = [ \"compatible_brands\", \"matrix\", \"opcolor\", \"sample_counts\", \"sample_deltas\",\n\"first_chunk\", \"samples_per_chunk\", \"sample_sizes\", \"chunk_offsets\", \"sample_offsets\", \"sample_description_index\", \"sample_duration\" ];\n\nBoxParser.boxEqualFields = function(box_a, box_b) {\n\tif (box_a && !box_b) return false;\n\tvar prop;\n\tfor (prop in box_a) {\n\t\tif (BoxParser.DIFF_BOXES_PROP_NAMES.indexOf(prop) > -1) {\n\t\t\tcontinue;\n\t\t// } else if (excluded_fields && excluded_fields.indexOf(prop) > -1) {\n\t\t// \tcontinue;\n\t\t} else if (box_a[prop] instanceof BoxParser.Box || box_b[prop] instanceof BoxParser.Box) {\n\t\t\tcontinue;\n\t\t} else if (typeof box_a[prop] === \"undefined\" || typeof box_b[prop] === \"undefined\") {\n\t\t\tcontinue;\n\t\t} else if (typeof box_a[prop] === \"function\" || typeof box_b[prop] === \"function\") {\n\t\t\tcontinue;\n\t\t} else if (\n\t\t\t(box_a.subBoxNames && box_a.subBoxNames.indexOf(prop.slice(0,4)) > -1) ||\n\t\t\t(box_b.subBoxNames && box_b.subBoxNames.indexOf(prop.slice(0,4)) > -1))  {\n\t\t\tcontinue;\n\t\t} else {\n\t\t\tif (prop === \"data\" || prop === \"start\" || prop === \"size\" || prop === \"creation_time\" || prop === \"modification_time\") {\n\t\t\t\tcontinue;\n\t\t\t} else if (BoxParser.DIFF_PRIMITIVE_ARRAY_PROP_NAMES.indexOf(prop) > -1) {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tif (box_a[prop] !== box_b[prop]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nBoxParser.boxEqual = function(box_a, box_b) {\n\tif (!BoxParser.boxEqualFields(box_a, box_b)) {\n\t\treturn false;\n\t}\n\tfor (var j = 0; j < BoxParser.DIFF_BOXES_PROP_NAMES.length; j++) {\n\t\tvar name = BoxParser.DIFF_BOXES_PROP_NAMES[j];\n\t\tif (box_a[name] && box_b[name]) {\n\t\t\tif (!BoxParser.boxEqual(box_a[name], box_b[name])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n// file:src/text-mp4.js\n/* \n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar VTTin4Parser = function() {\t\n}\n\nVTTin4Parser.prototype.parseSample = function(data) {\n\tvar cues, cue;\n\tvar stream = new MP4BoxStream(data.buffer);\n\tcues = [];\n\twhile (!stream.isEos()) {\n\t\tcue = BoxParser.parseOneBox(stream, false);\n\t\tif (cue.code === BoxParser.OK && cue.box.type === \"vttc\") {\n\t\t\tcues.push(cue.box);\n\t\t}\t\t\n\t}\n\treturn cues;\n}\n\nVTTin4Parser.prototype.getText = function (startTime, endTime, data) {\n\tfunction pad(n, width, z) {\n\t  z = z || '0';\n\t  n = n + '';\n\t  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n\t}\n\tfunction secToTimestamp(insec) {\n\t\tvar h = Math.floor(insec/3600);\n\t\tvar m = Math.floor((insec - h*3600)/60);\n\t\tvar s = Math.floor(insec - h*3600 - m*60);\n\t\tvar ms = Math.floor((insec - h*3600 - m*60 - s)*1000);\n\t\treturn \"\"+pad(h, 2)+\":\"+pad(m,2)+\":\"+pad(s, 2)+\".\"+pad(ms, 3);\n\t}\n\tvar cues = this.parseSample(data);\n\tvar string = \"\";\n\tfor (var i = 0; i < cues.length; i++) {\n\t\tvar cueIn4 = cues[i];\n\t\tstring += secToTimestamp(startTime)+\" --> \"+secToTimestamp(endTime)+\"\\r\\n\";\n\t\tstring += cueIn4.payl.text;\n\t}\n\treturn string;\n}\n\nvar XMLSubtitlein4Parser = function() {\t\n}\n\nXMLSubtitlein4Parser.prototype.parseSample = function(sample) {\n\tvar res = {};\t\n\tvar i;\n\tres.resources = [];\n\tvar stream = new MP4BoxStream(sample.data.buffer);\n\tif (!sample.subsamples || sample.subsamples.length === 0) {\n\t\tres.documentString = stream.readString(sample.data.length);\n\t} else {\n\t\tres.documentString = stream.readString(sample.subsamples[0].size);\n\t\tif (sample.subsamples.length > 1) {\n\t\t\tfor (i = 1; i < sample.subsamples.length; i++) {\n\t\t\t\tres.resources[i] = stream.readUint8Array(sample.subsamples[i].size);\n\t\t\t}\n\t\t}\n\t}\n\tif (typeof (DOMParser) !== \"undefined\") {\n\t\tres.document = (new DOMParser()).parseFromString(res.documentString, \"application/xml\");\n\t}\n\treturn res;\n}\n\nvar Textin4Parser = function() {\t\n}\n\nTextin4Parser.prototype.parseSample = function(sample) {\n\tvar textString;\n\tvar stream = new MP4BoxStream(sample.data.buffer);\n\ttextString = stream.readString(sample.data.length);\n\treturn textString;\n}\n\nTextin4Parser.prototype.parseConfig = function(data) {\n\tvar textString;\n\tvar stream = new MP4BoxStream(data.buffer);\n\tstream.readUint32(); // version & flags\n\ttextString = stream.readCString();\n\treturn textString;\n}\n\nif (typeof exports !== 'undefined') {\n\texports.VTTin4Parser = VTTin4Parser;\n\texports.XMLSubtitlein4Parser = XMLSubtitlein4Parser;\n\texports.Textin4Parser = Textin4Parser;\n}\n// file:src/isofile.js\n/*\n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar ISOFile = function (stream) {\n\t/* MutiBufferStream object used to parse boxes */\n\tthis.stream = stream || new MultiBufferStream();\n\t/* Array of all boxes (in order) found in the file */\n\tthis.boxes = [];\n\t/* Array of all mdats */\n\tthis.mdats = [];\n\t/* Array of all moofs */\n\tthis.moofs = [];\n\t/* Boolean indicating if the file is compatible with progressive parsing (moov first) */\n\tthis.isProgressive = false;\n\t/* Boolean used to fire moov start event only once */\n\tthis.moovStartFound = false;\n\t/* Callback called when the moov parsing starts */\n\tthis.onMoovStart = null;\n\t/* Boolean keeping track of the call to onMoovStart, to avoid double calls */\n\tthis.moovStartSent = false;\n\t/* Callback called when the moov is entirely parsed */\n\tthis.onReady = null;\n\t/* Boolean keeping track of the call to onReady, to avoid double calls */\n\tthis.readySent = false;\n\t/* Callback to call when segments are ready */\n\tthis.onSegment = null;\n\t/* Callback to call when samples are ready */\n\tthis.onSamples = null;\n\t/* Callback to call when there is an error in the parsing or processing of samples */\n\tthis.onError = null;\n\t/* Boolean indicating if the moov box run-length encoded tables of sample information have been processed */\n\tthis.sampleListBuilt = false;\n\t/* Array of Track objects for which fragmentation of samples is requested */\n\tthis.fragmentedTracks = [];\n\t/* Array of Track objects for which extraction of samples is requested */\n\tthis.extractedTracks = [];\n\t/* Boolean indicating that fragmention is ready */\n\tthis.isFragmentationInitialized = false;\n\t/* Boolean indicating that fragmented has started */\n\tthis.sampleProcessingStarted = false;\n\t/* Number of the next 'moof' to generate when fragmenting */\n\tthis.nextMoofNumber = 0;\n\t/* Boolean indicating if the initial list of items has been produced */\n\tthis.itemListBuilt = false;\n\t/* Array of items */\n\tthis.items = [];\n\t/* Array of entity groups */\n\tthis.entity_groups = [];\n\t/* Callback called when the sidx box is entirely parsed */\n\tthis.onSidx = null;\n\t/* Boolean keeping track of the call to onSidx, to avoid double calls */\n\tthis.sidxSent = false;\n}\n\nISOFile.prototype.setSegmentOptions = function(id, user, options) {\n\tvar trak = this.getTrackById(id);\n\tif (trak) {\n\t\tvar fragTrack = {};\n\t\tthis.fragmentedTracks.push(fragTrack);\n\t\tfragTrack.id = id;\n\t\tfragTrack.user = user;\n\t\tfragTrack.trak = trak;\n\t\ttrak.nextSample = 0;\n\t\tfragTrack.segmentStream = null;\n\t\tfragTrack.nb_samples = 1000;\n\t\tfragTrack.rapAlignement = true;\n\t\tif (options) {\n\t\t\tif (options.nbSamples) fragTrack.nb_samples = options.nbSamples;\n\t\t\tif (options.rapAlignement) fragTrack.rapAlignement = options.rapAlignement;\n\t\t}\n\t}\n}\n\nISOFile.prototype.unsetSegmentOptions = function(id) {\n\tvar index = -1;\n\tfor (var i = 0; i < this.fragmentedTracks.length; i++) {\n\t\tvar fragTrack = this.fragmentedTracks[i];\n\t\tif (fragTrack.id == id) {\n\t\t\tindex = i;\n\t\t}\n\t}\n\tif (index > -1) {\n\t\tthis.fragmentedTracks.splice(index, 1);\n\t}\n}\n\nISOFile.prototype.setExtractionOptions = function(id, user, options) {\n\tvar trak = this.getTrackById(id);\n\tif (trak) {\n\t\tvar extractTrack = {};\n\t\tthis.extractedTracks.push(extractTrack);\n\t\textractTrack.id = id;\n\t\textractTrack.user = user;\n\t\textractTrack.trak = trak;\n\t\ttrak.nextSample = 0;\n\t\textractTrack.nb_samples = 1000;\n\t\textractTrack.samples = [];\n\t\tif (options) {\n\t\t\tif (options.nbSamples) extractTrack.nb_samples = options.nbSamples;\n\t\t}\n\t}\n}\n\nISOFile.prototype.unsetExtractionOptions = function(id) {\n\tvar index = -1;\n\tfor (var i = 0; i < this.extractedTracks.length; i++) {\n\t\tvar extractTrack = this.extractedTracks[i];\n\t\tif (extractTrack.id == id) {\n\t\t\tindex = i;\n\t\t}\n\t}\n\tif (index > -1) {\n\t\tthis.extractedTracks.splice(index, 1);\n\t}\n}\n\nISOFile.prototype.parse = function() {\n\tvar found;\n\tvar ret;\n\tvar box;\n\tvar parseBoxHeadersOnly = false;\n\n\tif (this.restoreParsePosition)\t{\n\t\tif (!this.restoreParsePosition()) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\twhile (true) {\n\n\t\tif (this.hasIncompleteMdat && this.hasIncompleteMdat()) {\n\t\t\tif (this.processIncompleteMdat()) {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.saveParsePosition)\t{\n\t\t\t\tthis.saveParsePosition();\n\t\t\t}\n\t\t\tret = BoxParser.parseOneBox(this.stream, parseBoxHeadersOnly);\n\t\t\tif (ret.code === BoxParser.ERR_NOT_ENOUGH_DATA) {\n\t\t\t\tif (this.processIncompleteBox) {\n\t\t\t\t\tif (this.processIncompleteBox(ret)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar box_type;\n\t\t\t\t/* the box is entirely parsed */\n\t\t\t\tbox = ret.box;\n\t\t\t\tbox_type = (box.type !== \"uuid\" ? box.type : box.uuid);\n\t\t\t\t/* store the box in the 'boxes' array to preserve box order (for file rewrite if needed)  */\n\t\t\t\tthis.boxes.push(box);\n\t\t\t\t/* but also store box in a property for more direct access */\n\t\t\t\tswitch (box_type) {\n\t\t\t\t\tcase \"mdat\":\n\t\t\t\t\t\tthis.mdats.push(box);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"moof\":\n\t\t\t\t\t\tthis.moofs.push(box);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"moov\":\n\t\t\t\t\t\tthis.moovStartFound = true;\n\t\t\t\t\t\tif (this.mdats.length === 0) {\n\t\t\t\t\t\t\tthis.isProgressive = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/* no break */\n\t\t\t\t\t\t/* falls through */\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (this[box_type] !== undefined) {\n\t\t\t\t\t\t\tLog.warn(\"ISOFile\", \"Duplicate Box of type: \"+box_type+\", overriding previous occurrence\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis[box_type] = box;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this.updateUsedBytes) {\n\t\t\t\t\tthis.updateUsedBytes(box, ret);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nISOFile.prototype.checkBuffer = function (ab) {\n\tif (ab === null || ab === undefined) {\n\t\tthrow(\"Buffer must be defined and non empty\");\n\t}\n\tif (ab.fileStart === undefined) {\n\t\tthrow(\"Buffer must have a fileStart property\");\n\t}\n\tif (ab.byteLength === 0) {\n\t\tLog.warn(\"ISOFile\", \"Ignoring empty buffer (fileStart: \"+ab.fileStart+\")\");\n\t\tthis.stream.logBufferLevel();\n\t\treturn false;\n\t}\n\tLog.info(\"ISOFile\", \"Processing buffer (fileStart: \"+ab.fileStart+\")\");\n\n\t/* mark the bytes in the buffer as not being used yet */\n\tab.usedBytes = 0;\n\tthis.stream.insertBuffer(ab);\n\tthis.stream.logBufferLevel();\n\n\tif (!this.stream.initialized()) {\n\t\tLog.warn(\"ISOFile\", \"Not ready to start parsing\");\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n/* Processes a new ArrayBuffer (with a fileStart property)\n   Returns the next expected file position, or undefined if not ready to parse */\nISOFile.prototype.appendBuffer = function(ab, last) {\n\tvar nextFileStart;\n\tif (!this.checkBuffer(ab)) {\n\t\treturn;\n\t}\n\n\t/* Parse whatever is in the existing buffers */\n\tthis.parse();\n\n\t/* Check if the moovStart callback needs to be called */\n\tif (this.moovStartFound && !this.moovStartSent) {\n\t\tthis.moovStartSent = true;\n\t\tif (this.onMoovStart) this.onMoovStart();\n\t}\n\n\tif (this.moov) {\n\t\t/* A moov box has been entirely parsed */\n\n\t\t/* if this is the first call after the moov is found we initialize the list of samples (may be empty in fragmented files) */\n\t\tif (!this.sampleListBuilt) {\n\t\t\tthis.buildSampleLists();\n\t\t\tthis.sampleListBuilt = true;\n\t\t}\n\n\t\t/* We update the sample information if there are any new moof boxes */\n\t\tthis.updateSampleLists();\n\n\t\t/* If the application needs to be informed that the 'moov' has been found,\n\t\t   we create the information object and callback the application */\n\t\tif (this.onReady && !this.readySent) {\n\t\t\tthis.readySent = true;\n\t\t\tthis.onReady(this.getInfo());\n\t\t}\n\n\t\t/* See if any sample extraction or segment creation needs to be done with the available samples */\n\t\tthis.processSamples(last);\n\n\t\t/* Inform about the best range to fetch next */\n\t\tif (this.nextSeekPosition) {\n\t\t\tnextFileStart = this.nextSeekPosition;\n\t\t\tthis.nextSeekPosition = undefined;\n\t\t} else {\n\t\t\tnextFileStart = this.nextParsePosition;\n\t\t}\n\t\tif (this.stream.getEndFilePositionAfter) {\n\t\t\tnextFileStart = this.stream.getEndFilePositionAfter(nextFileStart);\n\t\t}\n\t} else {\n\t\tif (this.nextParsePosition) {\n\t\t\t/* moov has not been parsed but the first buffer was received,\n\t\t\t   the next fetch should probably be the next box start */\n\t\t\tnextFileStart = this.nextParsePosition;\n\t\t} else {\n\t\t\t/* No valid buffer has been parsed yet, we cannot know what to parse next */\n\t\t\tnextFileStart = 0;\n\t\t}\n\t}\n\tif (this.sidx) {\n\t\tif (this.onSidx && !this.sidxSent) {\n\t\t\tthis.onSidx(this.sidx);\n\t\t\tthis.sidxSent = true;\n\t\t}\n\t}\n\tif (this.meta) {\n\t\tif (this.flattenItemInfo && !this.itemListBuilt) {\n\t\t\tthis.flattenItemInfo();\n\t\t\tthis.itemListBuilt = true;\n\t\t}\n\t\tif (this.processItems) {\n\t\t\tthis.processItems(this.onItem);\n\t\t}\n\t}\n\n\tif (this.stream.cleanBuffers) {\n\t\tLog.info(\"ISOFile\", \"Done processing buffer (fileStart: \"+ab.fileStart+\") - next buffer to fetch should have a fileStart position of \"+nextFileStart);\n\t\tthis.stream.logBufferLevel();\n\t\tthis.stream.cleanBuffers();\n\t\tthis.stream.logBufferLevel(true);\n\t\tLog.info(\"ISOFile\", \"Sample data size in memory: \"+this.getAllocatedSampleDataSize());\n\t}\n\treturn nextFileStart;\n}\n\nISOFile.prototype.getInfo = function() {\n\tvar i, j;\n\tvar movie = {};\n\tvar trak;\n\tvar track;\n\tvar ref;\n\tvar sample_desc;\n\tvar _1904 = (new Date('1904-01-01T00:00:00Z').getTime());\n\n\tif (this.moov) {\n\t\tmovie.hasMoov = true;\n\t\tmovie.duration = this.moov.mvhd.duration;\n\t\tmovie.timescale = this.moov.mvhd.timescale;\n\t\tmovie.isFragmented = (this.moov.mvex != null);\n\t\tif (movie.isFragmented && this.moov.mvex.mehd) {\n\t\t\tmovie.fragment_duration = this.moov.mvex.mehd.fragment_duration;\n\t\t}\n\t\tmovie.isProgressive = this.isProgressive;\n\t\tmovie.hasIOD = (this.moov.iods != null);\n\t\tmovie.brands = [];\n\t\tmovie.brands.push(this.ftyp.major_brand);\n\t\tmovie.brands = movie.brands.concat(this.ftyp.compatible_brands);\n\t\tmovie.created = new Date(_1904+this.moov.mvhd.creation_time*1000);\n\t\tmovie.modified = new Date(_1904+this.moov.mvhd.modification_time*1000);\n\t\tmovie.tracks = [];\n\t\tmovie.audioTracks = [];\n\t\tmovie.videoTracks = [];\n\t\tmovie.subtitleTracks = [];\n\t\tmovie.metadataTracks = [];\n\t\tmovie.hintTracks = [];\n\t\tmovie.otherTracks = [];\n\t\tfor (i = 0; i < this.moov.traks.length; i++) {\n\t\t\ttrak = this.moov.traks[i];\n\t\t\tsample_desc = trak.mdia.minf.stbl.stsd.entries[0];\n\t\t\ttrack = {};\n\t\t\tmovie.tracks.push(track);\n\t\t\ttrack.id = trak.tkhd.track_id;\n\t\t\ttrack.name = trak.mdia.hdlr.name;\n\t\t\ttrack.references = [];\n\t\t\tif (trak.tref) {\n\t\t\t\tfor (j = 0; j < trak.tref.boxes.length; j++) {\n\t\t\t\t\tref = {};\n\t\t\t\t\ttrack.references.push(ref);\n\t\t\t\t\tref.type = trak.tref.boxes[j].type;\n\t\t\t\t\tref.track_ids = trak.tref.boxes[j].track_ids;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (trak.edts) {\n\t\t\t\ttrack.edits = trak.edts.elst.entries;\n\t\t\t}\n\t\t\ttrack.created = new Date(_1904+trak.tkhd.creation_time*1000);\n\t\t\ttrack.modified = new Date(_1904+trak.tkhd.modification_time*1000);\n\t\t\ttrack.movie_duration = trak.tkhd.duration;\n\t\t\ttrack.movie_timescale = movie.timescale;\n\t\t\ttrack.layer = trak.tkhd.layer;\n\t\t\ttrack.alternate_group = trak.tkhd.alternate_group;\n\t\t\ttrack.volume = trak.tkhd.volume;\n\t\t\ttrack.matrix = trak.tkhd.matrix;\n\t\t\ttrack.track_width = trak.tkhd.width/(1<<16);\n\t\t\ttrack.track_height = trak.tkhd.height/(1<<16);\n\t\t\ttrack.timescale = trak.mdia.mdhd.timescale;\n\t\t\ttrack.cts_shift = trak.mdia.minf.stbl.cslg;\n\t\t\ttrack.duration = trak.mdia.mdhd.duration;\n\t\t\ttrack.samples_duration = trak.samples_duration;\n\t\t\ttrack.codec = sample_desc.getCodec();\n\t\t\ttrack.kind = (trak.udta && trak.udta.kinds.length ? trak.udta.kinds[0] : { schemeURI: \"\", value: \"\"});\n\t\t\ttrack.language = (trak.mdia.elng ? trak.mdia.elng.extended_language : trak.mdia.mdhd.languageString);\n\t\t\ttrack.nb_samples = trak.samples.length;\n\t\t\ttrack.size = trak.samples_size;\n\t\t\ttrack.bitrate = (track.size*8*track.timescale)/track.samples_duration;\n\t\t\tif (sample_desc.isAudio()) {\n\t\t\t\ttrack.type = \"audio\";\n\t\t\t\tmovie.audioTracks.push(track);\n\t\t\t\ttrack.audio = {};\n\t\t\t\ttrack.audio.sample_rate = sample_desc.getSampleRate();\n\t\t\t\ttrack.audio.channel_count = sample_desc.getChannelCount();\n\t\t\t\ttrack.audio.sample_size = sample_desc.getSampleSize();\n\t\t\t} else if (sample_desc.isVideo()) {\n\t\t\t\ttrack.type = \"video\";\n\t\t\t\tmovie.videoTracks.push(track);\n\t\t\t\ttrack.video = {};\n\t\t\t\ttrack.video.width = sample_desc.getWidth();\n\t\t\t\ttrack.video.height = sample_desc.getHeight();\n\t\t\t} else if (sample_desc.isSubtitle()) {\n\t\t\t\ttrack.type = \"subtitles\";\n\t\t\t\tmovie.subtitleTracks.push(track);\n\t\t\t} else if (sample_desc.isHint()) {\n\t\t\t\ttrack.type = \"metadata\";\n\t\t\t\tmovie.hintTracks.push(track);\n\t\t\t} else if (sample_desc.isMetadata()) {\n\t\t\t\ttrack.type = \"metadata\";\n\t\t\t\tmovie.metadataTracks.push(track);\n\t\t\t} else {\n\t\t\t\ttrack.type = \"metadata\";\n\t\t\t\tmovie.otherTracks.push(track);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tmovie.hasMoov = false;\n\t}\n\tmovie.mime = \"\";\n\tif (movie.hasMoov && movie.tracks) {\n\t\tif (movie.videoTracks && movie.videoTracks.length > 0) {\n\t\t\tmovie.mime += 'video/mp4; codecs=\\\"';\n\t\t} else if (movie.audioTracks && movie.audioTracks.length > 0) {\n\t\t\tmovie.mime += 'audio/mp4; codecs=\\\"';\n\t\t} else {\n\t\t\tmovie.mime += 'application/mp4; codecs=\\\"';\n\t\t}\n\t\tfor (i = 0; i < movie.tracks.length; i++) {\n\t\t\tif (i !== 0) movie.mime += ',';\n\t\t\tmovie.mime+= movie.tracks[i].codec;\n\t\t}\n\t\tmovie.mime += '\\\"; profiles=\\\"';\n\t\tmovie.mime += this.ftyp.compatible_brands.join();\n\t\tmovie.mime += '\\\"';\n\t}\n\treturn movie;\n}\n\nISOFile.prototype.setNextSeekPositionFromSample = function (sample) {\n\tif (!sample) {\n\t\treturn;\n\t}\n\tif (this.nextSeekPosition) {\n\t\tthis.nextSeekPosition = Math.min(sample.offset+sample.alreadyRead,this.nextSeekPosition);\n\t} else {\n\t\tthis.nextSeekPosition = sample.offset+sample.alreadyRead;\n\t}\n}\n\nISOFile.prototype.processSamples = function(last) {\n\tvar i;\n\tvar trak;\n\tif (!this.sampleProcessingStarted) return;\n\n\t/* For each track marked for fragmentation,\n\t   check if the next sample is there (i.e. if the sample information is known (i.e. moof has arrived) and if it has been downloaded)\n\t   and create a fragment with it */\n\tif (this.isFragmentationInitialized && this.onSegment !== null) {\n\t\tfor (i = 0; i < this.fragmentedTracks.length; i++) {\n\t\t\tvar fragTrak = this.fragmentedTracks[i];\n\t\t\ttrak = fragTrak.trak;\n\t\t\twhile (trak.nextSample < trak.samples.length && this.sampleProcessingStarted) {\n\t\t\t\t/* The sample information is there (either because the file is not fragmented and this is not the last sample,\n\t\t\t\tor because the file is fragmented and the moof for that sample has been received */\n\t\t\t\tLog.debug(\"ISOFile\", \"Creating media fragment on track #\"+fragTrak.id +\" for sample \"+trak.nextSample);\n\t\t\t\tvar result = this.createFragment(fragTrak.id, trak.nextSample, fragTrak.segmentStream);\n\t\t\t\tif (result) {\n\t\t\t\t\tfragTrak.segmentStream = result;\n\t\t\t\t\ttrak.nextSample++;\n\t\t\t\t} else {\n\t\t\t\t\t/* The fragment could not be created because the media data is not there (not downloaded), wait for it */\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/* A fragment is created by sample, but the segment is the accumulation in the buffer of these fragments.\n\t\t\t\t   It is flushed only as requested by the application (nb_samples) to avoid too many callbacks */\n\t\t\t\tif (trak.nextSample % fragTrak.nb_samples === 0 || (last || trak.nextSample >= trak.samples.length)) {\n\t\t\t\t\tLog.info(\"ISOFile\", \"Sending fragmented data on track #\"+fragTrak.id+\" for samples [\"+Math.max(0,trak.nextSample-fragTrak.nb_samples)+\",\"+(trak.nextSample-1)+\"]\");\n\t\t\t\t\tLog.info(\"ISOFile\", \"Sample data size in memory: \"+this.getAllocatedSampleDataSize());\n\t\t\t\t\tif (this.onSegment) {\n\t\t\t\t\t\tthis.onSegment(fragTrak.id, fragTrak.user, fragTrak.segmentStream.buffer, trak.nextSample, (last || trak.nextSample >= trak.samples.length));\n\t\t\t\t\t}\n\t\t\t\t\t/* force the creation of a new buffer */\n\t\t\t\t\tfragTrak.segmentStream = null;\n\t\t\t\t\tif (fragTrak !== this.fragmentedTracks[i]) {\n\t\t\t\t\t\t/* make sure we can stop fragmentation if needed */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.onSamples !== null) {\n\t\t/* For each track marked for data export,\n\t\t   check if the next sample is there (i.e. has been downloaded) and send it */\n\t\tfor (i = 0; i < this.extractedTracks.length; i++) {\n\t\t\tvar extractTrak = this.extractedTracks[i];\n\t\t\ttrak = extractTrak.trak;\n\t\t\twhile (trak.nextSample < trak.samples.length && this.sampleProcessingStarted) {\n\t\t\t\tLog.debug(\"ISOFile\", \"Exporting on track #\"+extractTrak.id +\" sample #\"+trak.nextSample);\n\t\t\t\tvar sample = this.getSample(trak, trak.nextSample);\n\t\t\t\tif (sample) {\n\t\t\t\t\ttrak.nextSample++;\n\t\t\t\t\textractTrak.samples.push(sample);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setNextSeekPositionFromSample(trak.samples[trak.nextSample]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (trak.nextSample % extractTrak.nb_samples === 0 || trak.nextSample >= trak.samples.length) {\n\t\t\t\t\tLog.debug(\"ISOFile\", \"Sending samples on track #\"+extractTrak.id+\" for sample \"+trak.nextSample);\n\t\t\t\t\tif (this.onSamples) {\n\t\t\t\t\t\tthis.onSamples(extractTrak.id, extractTrak.user, extractTrak.samples);\n\t\t\t\t\t}\n\t\t\t\t\textractTrak.samples = [];\n\t\t\t\t\tif (extractTrak !== this.extractedTracks[i]) {\n\t\t\t\t\t\t/* check if the extraction needs to be stopped */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/* Find and return specific boxes using recursion and early return */\nISOFile.prototype.getBox = function(type) {\n  var result = this.getBoxes(type, true);\n  return (result.length ? result[0] : null);\n}\n\nISOFile.prototype.getBoxes = function(type, returnEarly) {\n  var result = [];\n  ISOFile._sweep.call(this, type, result, returnEarly);\n  return result;\n}\n\nISOFile._sweep = function(type, result, returnEarly) {\n  if (this.type && this.type == type) result.push(this);\n  for (var box in this.boxes) {\n    if (result.length && returnEarly) return;\n    ISOFile._sweep.call(this.boxes[box], type, result, returnEarly);\n  }\n}\n\nISOFile.prototype.getTrackSamplesInfo = function(track_id) {\n\tvar track = this.getTrackById(track_id);\n\tif (track) {\n\t\treturn track.samples;\n\t} else {\n\t\treturn;\n\t}\n}\n\nISOFile.prototype.getTrackSample = function(track_id, number) {\n\tvar track = this.getTrackById(track_id);\n\tvar sample = this.getSample(track, number);\n\treturn sample;\n}\n\n/* Called by the application to release the resources associated to samples already forwarded to the application */\nISOFile.prototype.releaseUsedSamples = function (id, sampleNum) {\n\tvar size = 0;\n\tvar trak = this.getTrackById(id);\n\tif (!trak.lastValidSample) trak.lastValidSample = 0;\n\tfor (var i = trak.lastValidSample; i < sampleNum; i++) {\n\t\tsize+=this.releaseSample(trak, i);\n\t}\n\tLog.info(\"ISOFile\", \"Track #\"+id+\" released samples up to \"+sampleNum+\" (released size: \"+size+\", remaining: \"+this.samplesDataSize+\")\");\n\ttrak.lastValidSample = sampleNum;\n}\n\nISOFile.prototype.start = function() {\n\tthis.sampleProcessingStarted = true;\n\tthis.processSamples(false);\n}\n\nISOFile.prototype.stop = function() {\n\tthis.sampleProcessingStarted = false;\n}\n\n/* Called by the application to flush the remaining samples (e.g. once the download is finished or when no more samples will be added) */\nISOFile.prototype.flush = function() {\n\tLog.info(\"ISOFile\", \"Flushing remaining samples\");\n\tthis.updateSampleLists();\n\tthis.processSamples(true);\n\tthis.stream.cleanBuffers();\n\tthis.stream.logBufferLevel(true);\n}\n\n/* Finds the byte offset for a given time on a given track\n   also returns the time of the previous rap */\nISOFile.prototype.seekTrack = function(time, useRap, trak) {\n\tvar j;\n\tvar sample;\n\tvar seek_offset = Infinity;\n\tvar rap_seek_sample_num = 0;\n\tvar seek_sample_num = 0;\n\tvar timescale;\n\n\tif (trak.samples.length === 0) {\n\t\tLog.info(\"ISOFile\", \"No sample in track, cannot seek! Using time \"+Log.getDurationString(0, 1) +\" and offset: \"+0);\n\t\treturn { offset: 0, time: 0 };\n\t}\n\n\tfor (j = 0; j < trak.samples.length; j++) {\n\t\tsample = trak.samples[j];\n\t\tif (j === 0) {\n\t\t\tseek_sample_num = 0;\n\t\t\ttimescale = sample.timescale;\n\t\t} else if (sample.cts > time * sample.timescale) {\n\t\t\tseek_sample_num = j-1;\n\t\t\tbreak;\n\t\t}\n\t\tif (useRap && sample.is_sync) {\n\t\t\trap_seek_sample_num = j;\n\t\t}\n\t}\n\tif (useRap) {\n\t\tseek_sample_num = rap_seek_sample_num;\n\t}\n\ttime = trak.samples[seek_sample_num].cts;\n\ttrak.nextSample = seek_sample_num;\n\twhile (trak.samples[seek_sample_num].alreadyRead === trak.samples[seek_sample_num].size) {\n\t\t// No remaining samples to look for, all are downloaded.\n\t\tif (!trak.samples[seek_sample_num + 1]) {\n\t\t\tbreak;\n\t\t}\n\t\tseek_sample_num++;\n\t}\n\tseek_offset = trak.samples[seek_sample_num].offset+trak.samples[seek_sample_num].alreadyRead;\n\tLog.info(\"ISOFile\", \"Seeking to \"+(useRap ? \"RAP\": \"\")+\" sample #\"+trak.nextSample+\" on track \"+trak.tkhd.track_id+\", time \"+Log.getDurationString(time, timescale) +\" and offset: \"+seek_offset);\n\treturn { offset: seek_offset, time: time/timescale };\n}\n\nISOFile.prototype.getTrackDuration = function (trak) {\n\tvar sample;\n\n\tif (!trak.samples) {\n\t\treturn Infinity;\n\t}\n\tsample = trak.samples[trak.samples.length - 1];\n\treturn (sample.cts + sample.duration) / sample.timescale;\n}\n\n/* Finds the byte offset in the file corresponding to the given time or to the time of the previous RAP */\nISOFile.prototype.seek = function(time, useRap) {\n\tvar moov = this.moov;\n\tvar trak;\n\tvar trak_seek_info;\n\tvar i;\n\tvar seek_info = { offset: Infinity, time: Infinity };\n\tif (!this.moov) {\n\t\tthrow \"Cannot seek: moov not received!\";\n\t} else {\n\t\tfor (i = 0; i<moov.traks.length; i++) {\n\t\t\ttrak = moov.traks[i];\n\t\t\tif (time > this.getTrackDuration(trak)) { // skip tracks that already ended\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ttrak_seek_info = this.seekTrack(time, useRap, trak);\n\t\t\tif (trak_seek_info.offset < seek_info.offset) {\n\t\t\t\tseek_info.offset = trak_seek_info.offset;\n\t\t\t}\n\t\t\tif (trak_seek_info.time < seek_info.time) {\n\t\t\t\tseek_info.time = trak_seek_info.time;\n\t\t\t}\n\t\t}\n\t\tLog.info(\"ISOFile\", \"Seeking at time \"+Log.getDurationString(seek_info.time, 1)+\" needs a buffer with a fileStart position of \"+seek_info.offset);\n\t\tif (seek_info.offset === Infinity) {\n\t\t\t/* No sample info, in all tracks, cannot seek */\n\t\t\tseek_info = { offset: this.nextParsePosition, time: 0 };\n\t\t} else {\n\t\t\t/* check if the seek position is already in some buffer and\n\t\t\t in that case return the end of that buffer (or of the last contiguous buffer) */\n\t\t\t/* TODO: Should wait until append operations are done */\n\t\t\tseek_info.offset = this.stream.getEndFilePositionAfter(seek_info.offset);\n\t\t}\n\t\tLog.info(\"ISOFile\", \"Adjusted seek position (after checking data already in buffer): \"+seek_info.offset);\n\t\treturn seek_info;\n\t}\n}\n\nISOFile.prototype.equal = function(b) {\n\tvar box_index = 0;\n\twhile (box_index < this.boxes.length && box_index < b.boxes.length) {\n\t\tvar a_box = this.boxes[box_index];\n\t\tvar b_box = b.boxes[box_index];\n\t\tif (!BoxParser.boxEqual(a_box, b_box)) {\n\t\t\treturn false;\n\t\t}\n\t\tbox_index++;\n\t}\n\treturn true;\n}\n\nif (typeof exports !== 'undefined') {\n\texports.ISOFile = ISOFile;\n}\n// file:src/isofile-advanced-parsing.js\n/* position in the current buffer of the beginning of the last box parsed */\nISOFile.prototype.lastBoxStartPosition = 0;\n/* indicator if the parsing is stuck in the middle of an mdat box */\nISOFile.prototype.parsingMdat = null;\n/* next file position that the parser needs:\n    - 0 until the first buffer (i.e. fileStart ===0) has been received \n    - otherwise, the next box start until the moov box has been parsed\n    - otherwise, the position of the next sample to fetch\n */\nISOFile.prototype.nextParsePosition = 0;\n/* keep mdat data */\nISOFile.prototype.discardMdatData = false;\n\nISOFile.prototype.processIncompleteBox = function(ret) {\n\tvar box;\n\tvar merged;\n\tvar found;\n\t\n\t/* we did not have enough bytes in the current buffer to parse the entire box */\n\tif (ret.type === \"mdat\") { \n\t\t/* we had enough bytes to get its type and size and it's an 'mdat' */\n\t\t\n\t\t/* special handling for mdat boxes, since we don't actually need to parse it linearly \n\t\t   we create the box */\n\t\tbox = new BoxParser[ret.type+\"Box\"](ret.size);\t\n\t\tthis.parsingMdat = box;\n\t\tthis.boxes.push(box);\n\t\tthis.mdats.push(box);\t\t\t\n\t\tbox.start = ret.start;\n\t\tbox.hdr_size = ret.hdr_size;\n\t\tthis.stream.addUsedBytes(box.hdr_size);\n\n\t\t/* indicate that the parsing should start from the end of the box */\n\t\tthis.lastBoxStartPosition = box.start + box.size;\n \t\t/* let's see if we have the end of the box in the other buffers */\n\t\tfound = this.stream.seek(box.start + box.size, false, this.discardMdatData);\n\t\tif (found) {\n\t\t\t/* found the end of the box */\n\t\t\tthis.parsingMdat = null;\n\t\t\t/* let's see if we can parse more in this buffer */\n\t\t\treturn true;\n\t\t} else {\n\t\t\t/* 'mdat' end not found in the existing buffers */\n\t\t\t/* determine the next position in the file to start parsing from */\n\t\t\tif (!this.moovStartFound) {\n\t\t\t\t/* moov not find yet, \n\t\t\t\t   the file probably has 'mdat' at the beginning, and 'moov' at the end, \n\t\t\t\t   indicate that the downloader should not try to download those bytes now */\n\t\t\t\tthis.nextParsePosition = box.start + box.size;\n\t\t\t} else {\n\t\t\t\t/* we have the start of the moov box, \n\t\t\t\t   the next bytes should try to complete the current 'mdat' */\n\t\t\t\tthis.nextParsePosition = this.stream.findEndContiguousBuf();\n\t\t\t}\n\t\t\t/* not much we can do, wait for more buffers to arrive */\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t/* box is incomplete, we may not even know its type */\n\t\tif (ret.type === \"moov\") { \n\t\t\t/* the incomplete box is a 'moov' box */\n\t\t\tthis.moovStartFound = true;\n\t\t\tif (this.mdats.length === 0) {\n\t\t\t\tthis.isProgressive = true;\n\t\t\t}\n\t\t}\n\t\t/* either it's not an mdat box (and we need to parse it, we cannot skip it)\n\t\t   (TODO: we could skip 'free' boxes ...)\n\t\t\t   or we did not have enough data to parse the type and size of the box, \n\t\t   we try to concatenate the current buffer with the next buffer to restart parsing */\n\t\tmerged = (this.stream.mergeNextBuffer ? this.stream.mergeNextBuffer() : false);\n\t\tif (merged) {\n\t\t\t/* The next buffer was contiguous, the merging succeeded,\n\t\t\t   we can now continue parsing, \n\t\t\t   the next best position to parse is at the end of this new buffer */\n\t\t\tthis.nextParsePosition = this.stream.getEndPosition();\n\t\t\treturn true;\n\t\t} else {\n\t\t\t/* we cannot concatenate existing buffers because they are not contiguous or because there is no additional buffer */\n\t\t\t/* The next best position to parse is still at the end of this old buffer */\n\t\t\tif (!ret.type) {\n\t\t\t\t/* There were not enough bytes in the buffer to parse the box type and length,\n\t\t\t\t   the next fetch should retrieve those missing bytes, i.e. the next bytes after this buffer */\n\t\t\t\tthis.nextParsePosition = this.stream.getEndPosition();\n\t\t\t} else {\n\t\t\t\t/* we had enough bytes to parse size and type of the incomplete box\n\t\t\t\t   if we haven't found yet the moov box, skip this one and try the next one \n\t\t\t\t   if we have found the moov box, let's continue linear parsing */\n\t\t\t\tif (this.moovStartFound) {\n\t\t\t\t\tthis.nextParsePosition = this.stream.getEndPosition();\n\t\t\t\t} else {\n\t\t\t\t\tthis.nextParsePosition = this.stream.getPosition() + ret.size;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nISOFile.prototype.hasIncompleteMdat = function () {\n\treturn (this.parsingMdat !== null);\n}\n\nISOFile.prototype.processIncompleteMdat = function () {\n\tvar box;\n\tvar found;\n\t\n\t/* we are in the parsing of an incomplete mdat box */\n\tbox = this.parsingMdat;\n\n\tfound = this.stream.seek(box.start + box.size, false, this.discardMdatData);\n\tif (found) {\n\t\tLog.debug(\"ISOFile\", \"Found 'mdat' end in buffered data\");\n\t\t/* the end of the mdat has been found */ \n\t\tthis.parsingMdat = null;\n\t\t/* we can parse more in this buffer */\n\t\treturn true;\n\t} else {\n\t\t/* we don't have the end of this mdat yet, \n\t\t   indicate that the next byte to fetch is the end of the buffers we have so far, \n\t\t   return and wait for more buffer to come */\n\t\tthis.nextParsePosition = this.stream.findEndContiguousBuf();\n\t\treturn false;\n\t}\n}\n\nISOFile.prototype.restoreParsePosition = function() {\n\t/* Reposition at the start position of the previous box not entirely parsed */\n\treturn this.stream.seek(this.lastBoxStartPosition, true, this.discardMdatData);\n}\n\nISOFile.prototype.saveParsePosition = function() {\n\t/* remember the position of the box start in case we need to roll back (if the box is incomplete) */\n\tthis.lastBoxStartPosition = this.stream.getPosition();\t\n}\n\nISOFile.prototype.updateUsedBytes = function(box, ret) {\n\tif (this.stream.addUsedBytes) {\n\t\tif (box.type === \"mdat\") {\n\t\t\t/* for an mdat box, only its header is considered used, other bytes will be used when sample data is requested */\n\t\t\tthis.stream.addUsedBytes(box.hdr_size);\n\t\t\tif (this.discardMdatData) {\n\t\t\t\tthis.stream.addUsedBytes(box.size-box.hdr_size);\n\t\t\t}\n\t\t} else {\n\t\t\t/* for all other boxes, the entire box data is considered used */\n\t\t\tthis.stream.addUsedBytes(box.size);\n\t\t}\t\n\t}\n}\n// file:src/isofile-advanced-creation.js\nISOFile.prototype.add = BoxParser.Box.prototype.add;\nISOFile.prototype.addBox = BoxParser.Box.prototype.addBox;\n\nISOFile.prototype.init = function (_options) {\n\tvar options = _options || {}; \n\tvar ftyp = this.add(\"ftyp\").set(\"major_brand\", (options.brands && options.brands[0]) || \"iso4\")\n\t\t\t\t\t\t\t   .set(\"minor_version\", 0)\n\t\t\t\t\t\t\t   .set(\"compatible_brands\", options.brands || [\"iso4\"]);\n\tvar moov = this.add(\"moov\");\n\tmoov.add(\"mvhd\").set(\"timescale\", options.timescale || 600)\n\t\t\t\t\t.set(\"rate\", options.rate || 1<<16)\n\t\t\t\t\t.set(\"creation_time\", 0)\n\t\t\t\t\t.set(\"modification_time\", 0)\n\t\t\t\t\t.set(\"duration\", options.duration || 0)\n\t\t\t\t\t.set(\"volume\", (options.width) ? 0 : 0x0100)\n\t\t\t\t\t.set(\"matrix\", [ 1<<16, 0, 0, 0, 1<<16, 0, 0, 0, 0x40000000])\n\t\t\t\t\t.set(\"next_track_id\", 1);\n\tmoov.add(\"mvex\");\n\treturn this;\n}\n\nISOFile.prototype.addTrack = function (_options) {\n\tif (!this.moov) {\n\t\tthis.init(_options);\n\t}\n\n\tvar options = _options || {}; \n\toptions.width = options.width || 320;\n\toptions.height = options.height || 320;\n\toptions.id = options.id || this.moov.mvhd.next_track_id;\n\toptions.type = options.type || \"avc1\";\n\n\tvar trak = this.moov.add(\"trak\");\n\tthis.moov.mvhd.next_track_id = options.id+1;\n\ttrak.add(\"tkhd\").set(\"flags\",BoxParser.TKHD_FLAG_ENABLED | \n\t\t\t\t\t\t\t\t BoxParser.TKHD_FLAG_IN_MOVIE | \n\t\t\t\t\t\t\t\t BoxParser.TKHD_FLAG_IN_PREVIEW)\n\t\t\t\t\t.set(\"creation_time\",0)\n\t\t\t\t\t.set(\"modification_time\", 0)\n\t\t\t\t\t.set(\"track_id\", options.id)\n\t\t\t\t\t.set(\"duration\", options.duration || 0)\n\t\t\t\t\t.set(\"layer\", options.layer || 0)\n\t\t\t\t\t.set(\"alternate_group\", 0)\n\t\t\t\t\t.set(\"volume\", 1)\n\t\t\t\t\t.set(\"matrix\", [ 1<<16, 0, 0, 0, 1<<16, 0, 0, 0, 0x40000000 ])\n\t\t\t\t\t.set(\"width\", options.width << 16)\n\t\t\t\t\t.set(\"height\", options.height << 16);\n\n\tvar mdia = trak.add(\"mdia\");\n\tmdia.add(\"mdhd\").set(\"creation_time\", 0)\n\t\t\t\t\t.set(\"modification_time\", 0)\n\t\t\t\t\t.set(\"timescale\", options.timescale || 1)\n\t\t\t\t\t.set(\"duration\", options.media_duration || 0)\n\t\t\t\t\t.set(\"language\", options.language || \"und\");\n\n\tmdia.add(\"hdlr\").set(\"handler\", options.hdlr || \"vide\")\n\t\t\t\t\t.set(\"name\", options.name || \"Track created with MP4Box.js\");\n\n\tmdia.add(\"elng\").set(\"extended_language\", options.language || \"fr-FR\");\n\n\tvar minf = mdia.add(\"minf\");\n\tif (BoxParser[options.type+\"SampleEntry\"] === undefined) return;\n\tvar sample_description_entry = new BoxParser[options.type+\"SampleEntry\"]();\n\tsample_description_entry.data_reference_index = 1;\n\tvar media_type = \"\";\n\tfor (var mediaType in BoxParser.sampleEntryCodes) {\n\t\tvar codes = BoxParser.sampleEntryCodes[mediaType];\n\t\tfor (var i = 0; i < codes.length; i++) {\n\t\t\tif (codes.indexOf(options.type) > -1) {\n\t\t\t\tmedia_type = mediaType;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tswitch(media_type) {\n\t\tcase \"Visual\":\n\t\t\tminf.add(\"vmhd\").set(\"graphicsmode\",0).set(\"opcolor\", [ 0, 0, 0 ]);\n\t\t\tsample_description_entry.set(\"width\", options.width)\n\t\t\t\t\t\t.set(\"height\", options.height)\n\t\t\t\t\t\t.set(\"horizresolution\", 0x48<<16)\n\t\t\t\t\t\t.set(\"vertresolution\", 0x48<<16)\n\t\t\t\t\t\t.set(\"frame_count\", 1)\n\t\t\t\t\t\t.set(\"compressorname\", options.type+\" Compressor\")\n\t\t\t\t\t\t.set(\"depth\", 0x18);\n\t\t\tif (options.avcDecoderConfigRecord) {\n\t\t\t\tvar avcC = new BoxParser.avcCBox();\n\t\t\t\tavcC.parse(new MP4BoxStream(options.avcDecoderConfigRecord));\n\t\t\t\tsample_description_entry.addBox(avcC);\n\t\t\t} else if (options.hevcDecoderConfigRecord) {\n\t\t\t\tvar hvcC = new BoxParser.hvcCBox();\n\t\t\t\thvcC.parse(new MP4BoxStream(options.hevcDecoderConfigRecord));\n\t\t\t\tsample_description_entry.addBox(hvcC);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"Audio\":\n\t\t\tminf.add(\"smhd\").set(\"balance\", options.balance || 0);\n\t\t\tsample_description_entry.set(\"channel_count\", options.channel_count || 2)\n\t\t\t\t\t\t.set(\"samplesize\", options.samplesize || 16)\n\t\t\t\t\t\t.set(\"samplerate\", options.samplerate || 1<<16);\n\t\t\tbreak;\n\t\tcase \"Hint\":\n\t\t\tminf.add(\"hmhd\"); // TODO: add properties\n\t\t\tbreak;\n\t\tcase \"Subtitle\":\n\t\t\tminf.add(\"sthd\");\n\t\t\tswitch (options.type) {\n\t\t\t\tcase \"stpp\":\n\t\t\t\t\tsample_description_entry.set(\"namespace\", options.namespace || \"nonamespace\")\n\t\t\t\t\t\t\t\t.set(\"schema_location\", options.schema_location || \"\")\n\t\t\t\t\t\t\t\t.set(\"auxiliary_mime_types\", options.auxiliary_mime_types || \"\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"Metadata\":\n\t\t\tminf.add(\"nmhd\");\n\t\t\tbreak;\n\t\tcase \"System\":\n\t\t\tminf.add(\"nmhd\");\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tminf.add(\"nmhd\");\n\t\t\tbreak;\n\t}\n\tif (options.description) {\n\t\tsample_description_entry.addBox(options.description);\n\t}\n\tif (options.description_boxes) {\n\t\toptions.description_boxes.forEach(function (b) {\n\t\t\tsample_description_entry.addBox(b);\n\t\t});\n\t}\n\tminf.add(\"dinf\").add(\"dref\").addEntry((new BoxParser[\"url Box\"]()).set(\"flags\", 0x1));\n\tvar stbl = minf.add(\"stbl\");\n\tstbl.add(\"stsd\").addEntry(sample_description_entry);\n\tstbl.add(\"stts\").set(\"sample_counts\", [])\n\t\t\t\t\t.set(\"sample_deltas\", []);\n\tstbl.add(\"stsc\").set(\"first_chunk\", [])\n\t\t\t\t\t.set(\"samples_per_chunk\", [])\n\t\t\t\t\t.set(\"sample_description_index\", []);\n\tstbl.add(\"stco\").set(\"chunk_offsets\", []);\n\tstbl.add(\"stsz\").set(\"sample_sizes\", []);\n\n\tthis.moov.mvex.add(\"trex\").set(\"track_id\", options.id)\n\t\t\t\t\t\t\t  .set(\"default_sample_description_index\", options.default_sample_description_index || 1)\n\t\t\t\t\t\t\t  .set(\"default_sample_duration\", options.default_sample_duration || 0)\n\t\t\t\t\t\t\t  .set(\"default_sample_size\", options.default_sample_size || 0)\n\t\t\t\t\t\t\t  .set(\"default_sample_flags\", options.default_sample_flags || 0);\n\tthis.buildTrakSampleLists(trak);\n\treturn options.id;\n}\n\nBoxParser.Box.prototype.computeSize = function(stream_) {\n\tvar stream = stream_ || new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\tthis.write(stream);\n}\n\nISOFile.prototype.addSample = function (track_id, data, _options) {\n\tvar options = _options || {};\n\tvar sample = {};\n\tvar trak = this.getTrackById(track_id);\n\tif (trak === null) return;\n    sample.number = trak.samples.length;\n\tsample.track_id = trak.tkhd.track_id;\n\tsample.timescale = trak.mdia.mdhd.timescale;\n\tsample.description_index = (options.sample_description_index ? options.sample_description_index - 1: 0);\n\tsample.description = trak.mdia.minf.stbl.stsd.entries[sample.description_index];\n\tsample.data = data;\n\tsample.size = data.byteLength;\n\tsample.alreadyRead = sample.size;\n\tsample.duration = options.duration || 1;\n\tsample.cts = options.cts || 0;\n\tsample.dts = options.dts || 0;\n\tsample.is_sync = options.is_sync || false;\n\tsample.is_leading = options.is_leading || 0;\n\tsample.depends_on = options.depends_on || 0;\n\tsample.is_depended_on = options.is_depended_on || 0;\n\tsample.has_redundancy = options.has_redundancy || 0;\n\tsample.degradation_priority = options.degradation_priority || 0;\n\tsample.offset = 0;\n\tsample.subsamples = options.subsamples;\n\ttrak.samples.push(sample);\n\ttrak.samples_size += sample.size;\n\ttrak.samples_duration += sample.duration;\n\tif (trak.first_dts === undefined) {\n\t\ttrak.first_dts = options.dts;\n\t}\n\n\tthis.processSamples();\n\t\n\tvar moof = this.createSingleSampleMoof(sample);\n\tthis.addBox(moof);\n\tmoof.computeSize();\n\t/* adjusting the data_offset now that the moof size is known*/\n\tmoof.trafs[0].truns[0].data_offset = moof.size+8; //8 is mdat header\n\tthis.add(\"mdat\").data = new Uint8Array(data);\n\treturn sample;\n}\n\nISOFile.prototype.createSingleSampleMoof = function(sample) {\n\tvar sample_flags = 0;\n\tif (sample.is_sync)\n\t\tsample_flags = (1 << 25);  // sample_depends_on_none (I picture)\n\telse\n\t\tsample_flags = (1 << 16);  // non-sync\n\n\tvar moof = new BoxParser.moofBox();\n\tmoof.add(\"mfhd\").set(\"sequence_number\", this.nextMoofNumber);\n\tthis.nextMoofNumber++;\n\tvar traf = moof.add(\"traf\");\n\tvar trak = this.getTrackById(sample.track_id);\n\ttraf.add(\"tfhd\").set(\"track_id\", sample.track_id)\n\t\t\t\t\t.set(\"flags\", BoxParser.TFHD_FLAG_DEFAULT_BASE_IS_MOOF);\n\ttraf.add(\"tfdt\").set(\"baseMediaDecodeTime\", (sample.dts - (trak.first_dts || 0)));\n\ttraf.add(\"trun\").set(\"flags\", BoxParser.TRUN_FLAGS_DATA_OFFSET | BoxParser.TRUN_FLAGS_DURATION | \n\t\t\t\t \t\t\t\t  BoxParser.TRUN_FLAGS_SIZE | BoxParser.TRUN_FLAGS_FLAGS | \n\t\t\t\t \t\t\t\t  BoxParser.TRUN_FLAGS_CTS_OFFSET)\n\t\t\t\t\t.set(\"data_offset\",0)\n\t\t\t\t\t.set(\"first_sample_flags\",0)\n\t\t\t\t\t.set(\"sample_count\",1)\n\t\t\t\t\t.set(\"sample_duration\",[sample.duration])\n\t\t\t\t\t.set(\"sample_size\",[sample.size])\n\t\t\t\t\t.set(\"sample_flags\",[sample_flags])\n\t\t\t\t\t.set(\"sample_composition_time_offset\", [sample.cts - sample.dts]);\n\treturn moof;\n}\n\n// file:src/isofile-sample-processing.js\n/* Index of the last moof box received */\nISOFile.prototype.lastMoofIndex = 0;\n\n/* size of the buffers allocated for samples */\nISOFile.prototype.samplesDataSize = 0;\n\n/* Resets all sample tables */\nISOFile.prototype.resetTables = function () {\n\tvar i;\n\tvar trak, stco, stsc, stsz, stts, ctts, stss;\n\tthis.initial_duration = this.moov.mvhd.duration;\n\tthis.moov.mvhd.duration = 0;\n\tfor (i = 0; i < this.moov.traks.length; i++) {\n\t\ttrak = this.moov.traks[i];\n\t\ttrak.tkhd.duration = 0;\n\t\ttrak.mdia.mdhd.duration = 0;\n\t\tstco = trak.mdia.minf.stbl.stco || trak.mdia.minf.stbl.co64;\n\t\tstco.chunk_offsets = [];\n\t\tstsc = trak.mdia.minf.stbl.stsc;\n\t\tstsc.first_chunk = [];\n\t\tstsc.samples_per_chunk = [];\n\t\tstsc.sample_description_index = [];\n\t\tstsz = trak.mdia.minf.stbl.stsz || trak.mdia.minf.stbl.stz2;\n\t\tstsz.sample_sizes = [];\n\t\tstts = trak.mdia.minf.stbl.stts;\n\t\tstts.sample_counts = [];\n\t\tstts.sample_deltas = [];\n\t\tctts = trak.mdia.minf.stbl.ctts;\n\t\tif (ctts) {\n\t\t\tctts.sample_counts = [];\n\t\t\tctts.sample_offsets = [];\n\t\t}\n\t\tstss = trak.mdia.minf.stbl.stss;\n\t\tvar k = trak.mdia.minf.stbl.boxes.indexOf(stss);\n\t\tif (k != -1) trak.mdia.minf.stbl.boxes[k] = null;\n\t}\n}\n\nISOFile.initSampleGroups = function(trak, traf, sbgps, trak_sgpds, traf_sgpds) {\n\tvar l;\n\tvar k;\n\tvar sample_groups_info;\n\tvar sample_group_info;\n\tvar sample_group_key;\n\tfunction SampleGroupInfo(_type, _parameter, _sbgp) {\n\t\tthis.grouping_type = _type;\n\t\tthis.grouping_type_parameter = _parameter;\n\t\tthis.sbgp = _sbgp;\n\t\tthis.last_sample_in_run = -1;\n\t\tthis.entry_index = -1;\t\t\n\t}\n\tif (traf) {\n\t\ttraf.sample_groups_info = [];\n\t} \n\tif (!trak.sample_groups_info) {\n\t\ttrak.sample_groups_info = [];\n\t}\n\tfor (k = 0; k < sbgps.length; k++) {\n\t\tsample_group_key = sbgps[k].grouping_type +\"/\"+ sbgps[k].grouping_type_parameter;\n\t\tsample_group_info = new SampleGroupInfo(sbgps[k].grouping_type, sbgps[k].grouping_type_parameter, sbgps[k]);\n\t\tif (traf) {\n\t\t\ttraf.sample_groups_info[sample_group_key] = sample_group_info;\n\t\t}\n\t\tif (!trak.sample_groups_info[sample_group_key]) {\n\t\t\ttrak.sample_groups_info[sample_group_key] = sample_group_info;\n\t\t}\n\t\tfor (l=0; l <trak_sgpds.length; l++) {\n\t\t\tif (trak_sgpds[l].grouping_type === sbgps[k].grouping_type) {\n\t\t\t\tsample_group_info.description = trak_sgpds[l];\n\t\t\t\tsample_group_info.description.used = true;\n\t\t\t}\n\t\t}\n\t\tif (traf_sgpds) {\n\t\t\tfor (l=0; l <traf_sgpds.length; l++) {\n\t\t\t\tif (traf_sgpds[l].grouping_type === sbgps[k].grouping_type) {\n\t\t\t\t\tsample_group_info.fragment_description = traf_sgpds[l];\n\t\t\t\t\tsample_group_info.fragment_description.used = true;\n\t\t\t\t\tsample_group_info.is_fragment = true;\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t}\n\t}\n\tif (!traf) {\n\t\tfor (k = 0; k < trak_sgpds.length; k++) {\n\t\t\tif (!trak_sgpds[k].used && trak_sgpds[k].version >= 2) {\n\t\t\t\tsample_group_key = trak_sgpds[k].grouping_type +\"/0\";\n\t\t\t\tsample_group_info = new SampleGroupInfo(trak_sgpds[k].grouping_type, 0);\n\t\t\t\tif (!trak.sample_groups_info[sample_group_key]) {\n\t\t\t\t\ttrak.sample_groups_info[sample_group_key] = sample_group_info;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (traf_sgpds) {\n\t\t\tfor (k = 0; k < traf_sgpds.length; k++) {\n\t\t\t\tif (!traf_sgpds[k].used && traf_sgpds[k].version >= 2) {\n\t\t\t\t\tsample_group_key = traf_sgpds[k].grouping_type +\"/0\";\n\t\t\t\t\tsample_group_info = new SampleGroupInfo(traf_sgpds[k].grouping_type, 0);\n\t\t\t\t\tsample_group_info.is_fragment = true;\n\t\t\t\t\tif (!traf.sample_groups_info[sample_group_key]) {\n\t\t\t\t\t\ttraf.sample_groups_info[sample_group_key] = sample_group_info;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nISOFile.setSampleGroupProperties = function(trak, sample, sample_number, sample_groups_info) {\n\tvar k;\n\tvar index;\n\tsample.sample_groups = [];\n\tfor (k in sample_groups_info) {\n\t\tsample.sample_groups[k] = {};\n\t\tsample.sample_groups[k].grouping_type = sample_groups_info[k].grouping_type;\n\t\tsample.sample_groups[k].grouping_type_parameter = sample_groups_info[k].grouping_type_parameter;\n\t\tif (sample_number >= sample_groups_info[k].last_sample_in_run) {\n\t\t\tif (sample_groups_info[k].last_sample_in_run < 0) {\n\t\t\t\tsample_groups_info[k].last_sample_in_run = 0;\n\t\t\t}\n\t\t\tsample_groups_info[k].entry_index++;\t\n\t\t\tif (sample_groups_info[k].entry_index <= sample_groups_info[k].sbgp.entries.length - 1) {\n\t\t\t\tsample_groups_info[k].last_sample_in_run += sample_groups_info[k].sbgp.entries[sample_groups_info[k].entry_index].sample_count;\n\t\t\t}\n\t\t}\n\t\tif (sample_groups_info[k].entry_index <= sample_groups_info[k].sbgp.entries.length - 1) {\n\t\t\tsample.sample_groups[k].group_description_index = sample_groups_info[k].sbgp.entries[sample_groups_info[k].entry_index].group_description_index;\n\t\t} else {\n\t\t\tsample.sample_groups[k].group_description_index = -1; // special value for not defined\n\t\t}\n\t\tif (sample.sample_groups[k].group_description_index !== 0) {\n\t\t\tvar description;\n\t\t\tif (sample_groups_info[k].fragment_description) {\n\t\t\t\tdescription = sample_groups_info[k].fragment_description;\n\t\t\t} else {\n\t\t\t\tdescription = sample_groups_info[k].description;\n\t\t\t}\n\t\t\tif (sample.sample_groups[k].group_description_index > 0) {\n\t\t\t\tif (sample.sample_groups[k].group_description_index > 65535) {\n\t\t\t\t\tindex = (sample.sample_groups[k].group_description_index >> 16)-1;\n\t\t\t\t} else {\n\t\t\t\t\tindex = sample.sample_groups[k].group_description_index-1;\n\t\t\t\t}\n\t\t\t\tif (description && index >= 0) {\n\t\t\t\t\tsample.sample_groups[k].description = description.entries[index];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (description && description.version >= 2) {\n\t\t\t\t\tif (description.default_group_description_index > 0) {\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tsample.sample_groups[k].description = description.entries[description.default_group_description_index-1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nISOFile.process_sdtp = function (sdtp, sample, number) {\n\tif (!sample) {\n\t\treturn;\n\t}\n\tif (sdtp) {\n\t\tsample.is_leading = sdtp.is_leading[number];\n\t\tsample.depends_on = sdtp.sample_depends_on[number];\n\t\tsample.is_depended_on = sdtp.sample_is_depended_on[number];\n\t\tsample.has_redundancy = sdtp.sample_has_redundancy[number];\n\t} else {\n\t\tsample.is_leading = 0;\n\t\tsample.depends_on = 0;\n\t\tsample.is_depended_on = 0\n\t\tsample.has_redundancy = 0;\n\t}\t\n}\n\n/* Build initial sample list from  sample tables */\nISOFile.prototype.buildSampleLists = function() {\t\n\tvar i;\n\tvar trak;\n\tfor (i = 0; i < this.moov.traks.length; i++) {\n\t\ttrak = this.moov.traks[i];\n\t\tthis.buildTrakSampleLists(trak);\n\t}\n}\n\nISOFile.prototype.buildTrakSampleLists = function(trak) {\t\n\tvar j, k;\n\tvar stco, stsc, stsz, stts, ctts, stss, stsd, subs, sbgps, sgpds, stdp;\n\tvar chunk_run_index, chunk_index, last_chunk_in_run, offset_in_chunk, last_sample_in_chunk;\n\tvar last_sample_in_stts_run, stts_run_index, last_sample_in_ctts_run, ctts_run_index, last_stss_index, last_subs_index, subs_entry_index, last_subs_sample_index;\n\n\ttrak.samples = [];\n\ttrak.samples_duration = 0;\n\ttrak.samples_size = 0;\n\tstco = trak.mdia.minf.stbl.stco || trak.mdia.minf.stbl.co64;\n\tstsc = trak.mdia.minf.stbl.stsc;\n\tstsz = trak.mdia.minf.stbl.stsz || trak.mdia.minf.stbl.stz2;\n\tstts = trak.mdia.minf.stbl.stts;\n\tctts = trak.mdia.minf.stbl.ctts;\n\tstss = trak.mdia.minf.stbl.stss;\n\tstsd = trak.mdia.minf.stbl.stsd;\n\tsubs = trak.mdia.minf.stbl.subs;\n\tstdp = trak.mdia.minf.stbl.stdp;\n\tsbgps = trak.mdia.minf.stbl.sbgps;\n\tsgpds = trak.mdia.minf.stbl.sgpds;\n\t\n\tlast_sample_in_stts_run = -1;\n\tstts_run_index = -1;\n\tlast_sample_in_ctts_run = -1;\n\tctts_run_index = -1;\n\tlast_stss_index = 0;\n\tsubs_entry_index = 0;\n\tlast_subs_sample_index = 0;\t\t\n\n\tISOFile.initSampleGroups(trak, null, sbgps, sgpds);\n\n\tif (typeof stsz === \"undefined\") {\n\t\treturn;\n\t}\n\n\t/* we build the samples one by one and compute their properties */\n\tfor (j = 0; j < stsz.sample_sizes.length; j++) {\n\t\tvar sample = {};\n\t\tsample.number = j;\n\t\tsample.track_id = trak.tkhd.track_id;\n\t\tsample.timescale = trak.mdia.mdhd.timescale;\n\t\tsample.alreadyRead = 0;\n\t\ttrak.samples[j] = sample;\n\t\t/* size can be known directly */\n\t\tsample.size = stsz.sample_sizes[j];\n\t\ttrak.samples_size += sample.size;\n\t\t/* computing chunk-based properties (offset, sample description index)*/\n\t\tif (j === 0) {\t\t\t\t\n\t\t\tchunk_index = 1; /* the first sample is in the first chunk (chunk indexes are 1-based) */\n\t\t\tchunk_run_index = 0; /* the first chunk is the first entry in the first_chunk table */\n\t\t\tsample.chunk_index = chunk_index;\n\t\t\tsample.chunk_run_index = chunk_run_index;\n\t\t\tlast_sample_in_chunk = stsc.samples_per_chunk[chunk_run_index];\n\t\t\toffset_in_chunk = 0;\n\n\t\t\t/* Is there another entry in the first_chunk table ? */\n\t\t\tif (chunk_run_index + 1 < stsc.first_chunk.length) {\n\t\t\t\t/* The last chunk in the run is the chunk before the next first chunk */\n\t\t\t\tlast_chunk_in_run = stsc.first_chunk[chunk_run_index+1]-1; \t\n\t\t\t} else {\n\t\t\t\t/* There is only one entry in the table, it is valid for all future chunks*/\n\t\t\t\tlast_chunk_in_run = Infinity;\n\t\t\t}\n\t\t} else {\n\t\t\tif (j < last_sample_in_chunk) {\n\t\t\t\t/* the sample is still in the current chunk */\n\t\t\t\tsample.chunk_index = chunk_index;\n\t\t\t\tsample.chunk_run_index = chunk_run_index;\n\t\t\t} else {\n\t\t\t\t/* the sample is in the next chunk */\n\t\t\t\tchunk_index++;\n\t\t\t\tsample.chunk_index = chunk_index;\n\t\t\t\t/* reset the accumulated offset in the chunk */\n\t\t\t\toffset_in_chunk = 0;\n\t\t\t\tif (chunk_index <= last_chunk_in_run) {\n\t\t\t\t\t/* stay in the same entry of the first_chunk table */\n\t\t\t\t\t/* chunk_run_index unmodified */\n\t\t\t\t} else {\n\t\t\t\t\tchunk_run_index++;\n\t\t\t\t\t/* Is there another entry in the first_chunk table ? */\n\t\t\t\t\tif (chunk_run_index + 1 < stsc.first_chunk.length) {\n\t\t\t\t\t\t/* The last chunk in the run is the chunk before the next first chunk */\n\t\t\t\t\t\tlast_chunk_in_run = stsc.first_chunk[chunk_run_index+1]-1; \t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* There is only one entry in the table, it is valid for all future chunks*/\n\t\t\t\t\t\tlast_chunk_in_run = Infinity;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tsample.chunk_run_index = chunk_run_index;\n\t\t\t\tlast_sample_in_chunk += stsc.samples_per_chunk[chunk_run_index];\n\t\t\t}\n\t\t}\n\n\t\tsample.description_index = stsc.sample_description_index[sample.chunk_run_index]-1;\n\t\tsample.description = stsd.entries[sample.description_index];\n\t\tsample.offset = stco.chunk_offsets[sample.chunk_index-1] + offset_in_chunk; /* chunk indexes are 1-based */\n\t\toffset_in_chunk += sample.size;\n\n\t\t/* setting dts, cts, duration and rap flags */\n\t\tif (j > last_sample_in_stts_run) {\n\t\t\tstts_run_index++;\n\t\t\tif (last_sample_in_stts_run < 0) {\n\t\t\t\tlast_sample_in_stts_run = 0;\n\t\t\t}\n\t\t\tlast_sample_in_stts_run += stts.sample_counts[stts_run_index];\t\t\t\t\n\t\t}\n\t\tif (j > 0) {\n\t\t\ttrak.samples[j-1].duration = stts.sample_deltas[stts_run_index];\n\t\t\ttrak.samples_duration += trak.samples[j-1].duration;\n\t\t\tsample.dts = trak.samples[j-1].dts + trak.samples[j-1].duration;\n\t\t} else {\n\t\t\tsample.dts = 0;\n\t\t}\n\t\tif (ctts) {\n\t\t\tif (j >= last_sample_in_ctts_run) {\n\t\t\t\tctts_run_index++;\n\t\t\t\tif (last_sample_in_ctts_run < 0) {\n\t\t\t\t\tlast_sample_in_ctts_run = 0;\n\t\t\t\t}\n\t\t\t\tlast_sample_in_ctts_run += ctts.sample_counts[ctts_run_index];\t\t\t\t\n\t\t\t}\n\t\t\tsample.cts = trak.samples[j].dts + ctts.sample_offsets[ctts_run_index];\n\t\t} else {\n\t\t\tsample.cts = sample.dts;\n\t\t}\n\t\tif (stss) {\n\t\t\tif (j == stss.sample_numbers[last_stss_index] - 1) { // sample numbers are 1-based\n\t\t\t\tsample.is_sync = true;\n\t\t\t\tlast_stss_index++;\n\t\t\t} else {\n\t\t\t\tsample.is_sync = false;\t\t\t\t\n\t\t\t\tsample.degradation_priority = 0;\n\t\t\t}\n\t\t\tif (subs) {\n\t\t\t\tif (subs.entries[subs_entry_index].sample_delta + last_subs_sample_index == j+1) {\n\t\t\t\t\tsample.subsamples = subs.entries[subs_entry_index].subsamples;\n\t\t\t\t\tlast_subs_sample_index += subs.entries[subs_entry_index].sample_delta;\n\t\t\t\t\tsubs_entry_index++;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tsample.is_sync = true;\n\t\t}\n\t\tISOFile.process_sdtp(trak.mdia.minf.stbl.sdtp, sample, sample.number);\n\t\tif (stdp) {\n\t\t\tsample.degradation_priority = stdp.priority[j];\n\t\t} else {\n\t\t\tsample.degradation_priority = 0;\n\t\t}\n\t\tif (subs) {\n\t\t\tif (subs.entries[subs_entry_index].sample_delta + last_subs_sample_index == j) {\n\t\t\t\tsample.subsamples = subs.entries[subs_entry_index].subsamples;\n\t\t\t\tlast_subs_sample_index += subs.entries[subs_entry_index].sample_delta;\n\t\t\t}\n\t\t}\n\t\tif (sbgps.length > 0 || sgpds.length > 0) {\n\t\t\tISOFile.setSampleGroupProperties(trak, sample, j, trak.sample_groups_info);\n\t\t}\n\t}\n\tif (j>0) {\n\t\ttrak.samples[j-1].duration = Math.max(trak.mdia.mdhd.duration - trak.samples[j-1].dts, 0);\n\t\ttrak.samples_duration += trak.samples[j-1].duration;\n\t}\n}\n\n/* Update sample list when new 'moof' boxes are received */\nISOFile.prototype.updateSampleLists = function() {\t\n\tvar i, j, k;\n\tvar default_sample_description_index, default_sample_duration, default_sample_size, default_sample_flags;\n\tvar last_run_position;\n\tvar box, moof, traf, trak, trex;\n\tvar sample;\n\tvar sample_flags;\n\t\n\tif (this.moov === undefined) {\n\t\treturn;\n\t}\n\t/* if the input file is fragmented and fetched in multiple downloads, we need to update the list of samples */\n\twhile (this.lastMoofIndex < this.moofs.length) {\n\t\tbox = this.moofs[this.lastMoofIndex];\n\t\tthis.lastMoofIndex++;\n\t\tif (box.type == \"moof\") {\n\t\t\tmoof = box;\n\t\t\tfor (i = 0; i < moof.trafs.length; i++) {\n\t\t\t\ttraf = moof.trafs[i];\n\t\t\t\ttrak = this.getTrackById(traf.tfhd.track_id);\n\t\t\t\ttrex = this.getTrexById(traf.tfhd.track_id);\n\t\t\t\tif (traf.tfhd.flags & BoxParser.TFHD_FLAG_SAMPLE_DESC) {\n\t\t\t\t\tdefault_sample_description_index = traf.tfhd.default_sample_description_index;\n\t\t\t\t} else {\n\t\t\t\t\tdefault_sample_description_index = (trex ? trex.default_sample_description_index: 1);\n\t\t\t\t}\n\t\t\t\tif (traf.tfhd.flags & BoxParser.TFHD_FLAG_SAMPLE_DUR) {\n\t\t\t\t\tdefault_sample_duration = traf.tfhd.default_sample_duration;\n\t\t\t\t} else {\n\t\t\t\t\tdefault_sample_duration = (trex ? trex.default_sample_duration : 0);\n\t\t\t\t}\n\t\t\t\tif (traf.tfhd.flags & BoxParser.TFHD_FLAG_SAMPLE_SIZE) {\n\t\t\t\t\tdefault_sample_size = traf.tfhd.default_sample_size;\n\t\t\t\t} else {\n\t\t\t\t\tdefault_sample_size = (trex ? trex.default_sample_size : 0);\n\t\t\t\t}\n\t\t\t\tif (traf.tfhd.flags & BoxParser.TFHD_FLAG_SAMPLE_FLAGS) {\n\t\t\t\t\tdefault_sample_flags = traf.tfhd.default_sample_flags;\n\t\t\t\t} else {\n\t\t\t\t\tdefault_sample_flags = (trex ? trex.default_sample_flags : 0);\n\t\t\t\t}\n\t\t\t\ttraf.sample_number = 0;\n\t\t\t\t/* process sample groups */\n\t\t\t\tif (traf.sbgps.length > 0) {\n\t\t\t\t\tISOFile.initSampleGroups(trak, traf, traf.sbgps, trak.mdia.minf.stbl.sgpds, traf.sgpds);\n\t\t\t\t}\n\t\t\t\tfor (j = 0; j < traf.truns.length; j++) {\n\t\t\t\t\tvar trun = traf.truns[j];\n\t\t\t\t\tfor (k = 0; k < trun.sample_count; k++) {\n\t\t\t\t\t\tsample = {};\n\t\t\t\t\t\tsample.moof_number = this.lastMoofIndex;\n\t\t\t\t\t\tsample.number_in_traf = traf.sample_number;\n\t\t\t\t\t\ttraf.sample_number++;\n\t\t\t            sample.number = trak.samples.length;\n\t\t\t\t\t\ttraf.first_sample_index = trak.samples.length;\n\t\t\t\t\t\ttrak.samples.push(sample);\n\t\t\t\t\t\tsample.track_id = trak.tkhd.track_id;\n\t\t\t\t\t\tsample.timescale = trak.mdia.mdhd.timescale;\n\t\t\t\t\t\tsample.description_index = default_sample_description_index-1;\n\t\t\t\t\t\tsample.description = trak.mdia.minf.stbl.stsd.entries[sample.description_index];\n\t\t\t\t\t\tsample.size = default_sample_size;\n\t\t\t\t\t\tif (trun.flags & BoxParser.TRUN_FLAGS_SIZE) {\n\t\t\t\t\t\t\tsample.size = trun.sample_size[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttrak.samples_size += sample.size;\n\t\t\t\t\t\tsample.duration = default_sample_duration;\n\t\t\t\t\t\tif (trun.flags & BoxParser.TRUN_FLAGS_DURATION) {\n\t\t\t\t\t\t\tsample.duration = trun.sample_duration[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttrak.samples_duration += sample.duration;\n\t\t\t\t\t\tif (trak.first_traf_merged || k > 0) {\n\t\t\t\t\t\t\tsample.dts = trak.samples[trak.samples.length-2].dts+trak.samples[trak.samples.length-2].duration;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (traf.tfdt) {\n\t\t\t\t\t\t\t\tsample.dts = traf.tfdt.baseMediaDecodeTime;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsample.dts = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttrak.first_traf_merged = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsample.cts = sample.dts;\n\t\t\t\t\t\tif (trun.flags & BoxParser.TRUN_FLAGS_CTS_OFFSET) {\n\t\t\t\t\t\t\tsample.cts = sample.dts + trun.sample_composition_time_offset[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsample_flags = default_sample_flags;\n\t\t\t\t\t\tif (trun.flags & BoxParser.TRUN_FLAGS_FLAGS) {\n\t\t\t\t\t\t\tsample_flags = trun.sample_flags[k];\n\t\t\t\t\t\t} else if (k === 0 && (trun.flags & BoxParser.TRUN_FLAGS_FIRST_FLAG)) {\n\t\t\t\t\t\t\tsample_flags = trun.first_sample_flags;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsample.is_sync = ((sample_flags >> 16 & 0x1) ? false : true);\n\t\t\t\t\t\tsample.is_leading = (sample_flags >> 26 & 0x3);\n\t\t\t\t\t\tsample.depends_on = (sample_flags >> 24 & 0x3);\n\t\t\t\t\t\tsample.is_depended_on = (sample_flags >> 22 & 0x3);\n\t\t\t\t\t\tsample.has_redundancy = (sample_flags >> 20 & 0x3);\n\t\t\t\t\t\tsample.degradation_priority = (sample_flags & 0xFFFF);\n\t\t\t\t\t\t//ISOFile.process_sdtp(traf.sdtp, sample, sample.number_in_traf);\n\t\t\t\t\t\tvar bdop = (traf.tfhd.flags & BoxParser.TFHD_FLAG_BASE_DATA_OFFSET) ? true : false;\n\t\t\t\t\t\tvar dbim = (traf.tfhd.flags & BoxParser.TFHD_FLAG_DEFAULT_BASE_IS_MOOF) ? true : false;\n\t\t\t\t\t\tvar dop = (trun.flags & BoxParser.TRUN_FLAGS_DATA_OFFSET) ? true : false;\n\t\t\t\t\t\tvar bdo = 0;\n\t\t\t\t\t\tif (!bdop) {\n\t\t\t\t\t\t\tif (!dbim) {\n\t\t\t\t\t\t\t\tif (j === 0) { // the first track in the movie fragment\n\t\t\t\t\t\t\t\t\tbdo = moof.start; // the position of the first byte of the enclosing Movie Fragment Box\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tbdo = last_run_position; // end of the data defined by the preceding *track* (irrespective of the track id) fragment in the moof\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbdo = moof.start;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbdo = traf.tfhd.base_data_offset;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === 0 && k === 0) {\n\t\t\t\t\t\t\tif (dop) {\n\t\t\t\t\t\t\t\tsample.offset = bdo + trun.data_offset; // If the data-offset is present, it is relative to the base-data-offset established in the track fragment header\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsample.offset = bdo; // the data for this run starts the base-data-offset defined by the track fragment header\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsample.offset = last_run_position; // this run starts immediately after the data of the previous run\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlast_run_position = sample.offset + sample.size;\n\t\t\t\t\t\tif (traf.sbgps.length > 0 || traf.sgpds.length > 0 ||\n\t\t\t\t\t\t\ttrak.mdia.minf.stbl.sbgps.length > 0 || trak.mdia.minf.stbl.sgpds.length > 0) {\n\t\t\t\t\t\t\tISOFile.setSampleGroupProperties(trak, sample, sample.number_in_traf, traf.sample_groups_info);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (traf.subs) {\n\t\t\t\t\ttrak.has_fragment_subsamples = true;\n\t\t\t\t\tvar sample_index = traf.first_sample_index;\n\t\t\t\t\tfor (j = 0; j < traf.subs.entries.length; j++) {\n\t\t\t\t\t\tsample_index += traf.subs.entries[j].sample_delta;\n\t\t\t\t\t\tsample = trak.samples[sample_index-1];\n\t\t\t\t\t\tsample.subsamples = traf.subs.entries[j].subsamples;\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\t\n}\n\n/* Try to get sample data for a given sample:\n   returns null if not found\n   returns the same sample if already requested\n */\nISOFile.prototype.getSample = function(trak, sampleNum) {\t\n\tvar buffer;\n\tvar sample = trak.samples[sampleNum];\n\t\n\tif (!this.moov) {\n\t\treturn null;\n\t}\n\n\tif (!sample.data) {\n\t\t/* Not yet fetched */\n\t\tsample.data = new Uint8Array(sample.size);\n\t\tsample.alreadyRead = 0;\n\t\tthis.samplesDataSize += sample.size;\n\t\tLog.debug(\"ISOFile\", \"Allocating sample #\"+sampleNum+\" on track #\"+trak.tkhd.track_id+\" of size \"+sample.size+\" (total: \"+this.samplesDataSize+\")\");\n\t} else if (sample.alreadyRead == sample.size) {\n\t\t/* Already fetched entirely */\n\t\treturn sample;\n\t}\n\n\t/* The sample has only been partially fetched, we need to check in all buffers */\n\twhile(true) {\n\t\tvar index =\tthis.stream.findPosition(true, sample.offset + sample.alreadyRead, false);\n\t\tif (index > -1) {\n\t\t\tbuffer = this.stream.buffers[index];\n\t\t\tvar lengthAfterStart = buffer.byteLength - (sample.offset + sample.alreadyRead - buffer.fileStart);\n\t\t\tif (sample.size - sample.alreadyRead <= lengthAfterStart) {\n\t\t\t\t/* the (rest of the) sample is entirely contained in this buffer */\n\n\t\t\t\tLog.debug(\"ISOFile\",\"Getting sample #\"+sampleNum+\" data (alreadyRead: \"+sample.alreadyRead+\" offset: \"+\n\t\t\t\t\t(sample.offset+sample.alreadyRead - buffer.fileStart)+\" read size: \"+(sample.size - sample.alreadyRead)+\" full size: \"+sample.size+\")\");\n\n\t\t\t\tDataStream.memcpy(sample.data.buffer, sample.alreadyRead,\n\t\t\t\t                  buffer, sample.offset+sample.alreadyRead - buffer.fileStart, sample.size - sample.alreadyRead);\n\n\t\t\t\t/* update the number of bytes used in this buffer and check if it needs to be removed */\n\t\t\t\tbuffer.usedBytes += sample.size - sample.alreadyRead;\n\t\t\t\tthis.stream.logBufferLevel();\n\n\t\t\t\tsample.alreadyRead = sample.size;\n\n\t\t\t\treturn sample;\n\t\t\t} else {\n\t\t\t\t/* the sample does not end in this buffer */\n\n\t\t\t\tif (lengthAfterStart === 0) return null;\n\n\t\t\t\tLog.debug(\"ISOFile\",\"Getting sample #\"+sampleNum+\" partial data (alreadyRead: \"+sample.alreadyRead+\" offset: \"+\n\t\t\t\t\t(sample.offset+sample.alreadyRead - buffer.fileStart)+\" read size: \"+lengthAfterStart+\" full size: \"+sample.size+\")\");\n\n\t\t\t\tDataStream.memcpy(sample.data.buffer, sample.alreadyRead,\n\t\t\t\t                  buffer, sample.offset+sample.alreadyRead - buffer.fileStart, lengthAfterStart);\n\t\t\t\tsample.alreadyRead += lengthAfterStart;\n\n\t\t\t\t/* update the number of bytes used in this buffer and check if it needs to be removed */\n\t\t\t\tbuffer.usedBytes += lengthAfterStart;\n\t\t\t\tthis.stream.logBufferLevel();\n\n\t\t\t\t/* keep looking in the next buffer */\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\n/* Release the memory used to store the data of the sample */\nISOFile.prototype.releaseSample = function(trak, sampleNum) {\t\n\tvar sample = trak.samples[sampleNum];\n\tif (sample.data) {\n\t\tthis.samplesDataSize -= sample.size;\n\t\tsample.data = null;\n\t\tsample.alreadyRead = 0;\n\t\treturn sample.size;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nISOFile.prototype.getAllocatedSampleDataSize = function() {\n\treturn this.samplesDataSize;\n}\n\n/* Builds the MIME Type 'codecs' sub-parameters for the whole file */\nISOFile.prototype.getCodecs = function() {\t\n\tvar i;\n\tvar codecs = \"\";\n\tfor (i = 0; i < this.moov.traks.length; i++) {\n\t\tvar trak = this.moov.traks[i];\n\t\tif (i>0) {\n\t\t\tcodecs+=\",\"; \n\t\t}\n\t\tcodecs += trak.mdia.minf.stbl.stsd.entries[0].getCodec();\t\t\n\t}\n\treturn codecs;\n}\n\n/* Helper function */\nISOFile.prototype.getTrexById = function(id) {\t\n\tvar i;\n\tif (!this.moov || !this.moov.mvex) return null;\n\tfor (i = 0; i < this.moov.mvex.trexs.length; i++) {\n\t\tvar trex = this.moov.mvex.trexs[i];\n\t\tif (trex.track_id == id) return trex;\n\t}\n\treturn null;\n}\n\n/* Helper function */\nISOFile.prototype.getTrackById = function(id) {\n\tif (this.moov === undefined) {\n\t\treturn null;\n\t}\n\tfor (var j = 0; j < this.moov.traks.length; j++) {\n\t\tvar trak = this.moov.traks[j];\n\t\tif (trak.tkhd.track_id == id) return trak;\n\t}\n\treturn null;\n}\n// file:src/isofile-item-processing.js\n/* size of the buffers allocated for samples */\nISOFile.prototype.itemsDataSize = 0;\n\nISOFile.prototype.flattenItemInfo = function() {\t\n\tvar items = this.items;\n\tvar entity_groups = this.entity_groups;\n\tvar i, j;\n\tvar item;\n\tvar meta = this.meta;\n\tif (meta === null || meta === undefined) return;\n\tif (meta.hdlr === undefined) return;\n\tif (meta.iinf === undefined) return;\n\tfor (i = 0; i < meta.iinf.item_infos.length; i++) {\n\t\titem = {};\n\t\titem.id = meta.iinf.item_infos[i].item_ID;\n\t\titems[item.id] = item;\n\t\titem.ref_to = [];\n\t\titem.name = meta.iinf.item_infos[i].item_name;\n\t\tif (meta.iinf.item_infos[i].protection_index > 0) {\n\t\t\titem.protection = meta.ipro.protections[meta.iinf.item_infos[i].protection_index-1];\n\t\t}\n\t\tif (meta.iinf.item_infos[i].item_type) {\n\t\t\titem.type = meta.iinf.item_infos[i].item_type;\n\t\t} else {\n\t\t\titem.type = \"mime\";\n\t\t}\n\t\titem.content_type = meta.iinf.item_infos[i].content_type;\n\t\titem.content_encoding = meta.iinf.item_infos[i].content_encoding;\n\t\titem.item_uri_type = meta.iinf.item_infos[i].item_uri_type;\n\t}\n\tif (meta.grpl) {\n\t\tfor (i = 0; i < meta.grpl.boxes.length; i++) {\n\t\t\tentity_group = {};\n\t\t\tentity_group.id = meta.grpl.boxes[i].group_id;\n\t\t\tentity_group.entity_ids = meta.grpl.boxes[i].entity_ids;\n\t\t\tentity_group.type = meta.grpl.boxes[i].type;\n\t\t\tentity_groups[entity_group.id] = entity_group;\n\t\t}\n\t}\n\tif (meta.iloc) {\n\t\tfor(i = 0; i < meta.iloc.items.length; i++) {\n\t\t\tvar offset;\n\t\t\tvar itemloc = meta.iloc.items[i];\n\t\t\titem = items[itemloc.item_ID];\n\t\t\tif (itemloc.data_reference_index !== 0) {\n\t\t\t\tLog.warn(\"Item storage with reference to other files: not supported\");\n\t\t\t\titem.source = meta.dinf.boxes[itemloc.data_reference_index-1];\n\t\t\t}\n\t\t\tswitch(itemloc.construction_method) {\n\t\t\t\tcase 0: // offset into the file referenced by the data reference index\n\t\t\t\tbreak;\n\t\t\t\tcase 1: // offset into the idat box of this meta box\n\t\t\t\tbreak;\n\t\t\t\tcase 2: // offset into another item\n\t\t\t\tLog.warn(\"Item storage with construction_method : not supported\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\titem.extents = [];\n\t\t\titem.size = 0;\n\t\t\tfor (j = 0; j < itemloc.extents.length; j++) {\n\t\t\t\titem.extents[j] = {};\n\t\t\t\titem.extents[j].offset = itemloc.extents[j].extent_offset + itemloc.base_offset;\n\t\t\t\tif (itemloc.construction_method == 1) {\n\t\t\t\t\titem.extents[j].offset += meta.idat.start + meta.idat.hdr_size;\n\t\t\t\t}\n\t\t\t\titem.extents[j].length = itemloc.extents[j].extent_length;\n\t\t\t\titem.extents[j].alreadyRead = 0;\n\t\t\t\titem.size += item.extents[j].length;\n\t\t\t}\n\t\t}\n\t}\n\tif (meta.pitm) {\n\t\titems[meta.pitm.item_id].primary = true;\n\t}\n\tif (meta.iref) {\n\t\tfor (i=0; i <meta.iref.references.length; i++) {\n\t\t\tvar ref = meta.iref.references[i];\n\t\t\tfor (j=0; j<ref.references.length; j++) {\n\t\t\t\titems[ref.from_item_ID].ref_to.push({type: ref.type, id: ref.references[j]});\n\t\t\t}\n\t\t}\n\t}\n\tif (meta.iprp) {\n\t\tfor (var k = 0; k < meta.iprp.ipmas.length; k++) {\n\t\t\tvar ipma = meta.iprp.ipmas[k];\n\t\t\tfor (i = 0; i < ipma.associations.length; i++) {\n\t\t\t\tvar association = ipma.associations[i];\n\t\t\t\titem = items[association.id];\n\t\t\t\tif (!item) {\n\t\t\t\t\titem = entity_groups[association.id];\n\t\t\t\t}\n\t\t\t\tif (item) {\n\t\t\t\t\tif (item.properties === undefined) {\n\t\t\t\t\t\titem.properties = {};\n\t\t\t\t\t\titem.properties.boxes = [];\n\t\t\t\t\t}\n\t\t\t\t\tfor (j = 0; j < association.props.length; j++) {\n\t\t\t\t\t\tvar propEntry = association.props[j];\n\t\t\t\t\t\tif (propEntry.property_index > 0 && propEntry.property_index-1 < meta.iprp.ipco.boxes.length) {\n\t\t\t\t\t\t\tvar propbox = meta.iprp.ipco.boxes[propEntry.property_index-1];\n\t\t\t\t\t\t\titem.properties[propbox.type] = propbox;\n\t\t\t\t\t\t\titem.properties.boxes.push(propbox);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nISOFile.prototype.getItem = function(item_id) {\t\n\tvar buffer;\n\tvar item;\n\t\n\tif (!this.meta) {\n\t\treturn null;\n\t}\n\n \titem = this.items[item_id];\n\tif (!item.data && item.size) {\n\t\t/* Not yet fetched */\n\t\titem.data = new Uint8Array(item.size);\n\t\titem.alreadyRead = 0;\n\t\tthis.itemsDataSize += item.size;\n\t\tLog.debug(\"ISOFile\", \"Allocating item #\"+item_id+\" of size \"+item.size+\" (total: \"+this.itemsDataSize+\")\");\n\t} else if (item.alreadyRead === item.size) {\n\t\t/* Already fetched entirely */\n\t\treturn item;\n\t}\n\n\t/* The item has only been partially fetched, we need to check in all buffers to find the remaining extents*/\n\n\tfor (var i = 0; i < item.extents.length; i++) {\n\t\tvar extent = item.extents[i];\n\t\tif (extent.alreadyRead === extent.length) {\n\t\t\tcontinue;\n\t\t} else {\n\t\t\tvar index =\tthis.stream.findPosition(true, extent.offset + extent.alreadyRead, false);\n\t\t\tif (index > -1) {\n\t\t\t\tbuffer = this.stream.buffers[index];\n\t\t\t\tvar lengthAfterStart = buffer.byteLength - (extent.offset + extent.alreadyRead - buffer.fileStart);\n\t\t\t\tif (extent.length - extent.alreadyRead <= lengthAfterStart) {\n\t\t\t\t\t/* the (rest of the) extent is entirely contained in this buffer */\n\n\t\t\t\t\tLog.debug(\"ISOFile\",\"Getting item #\"+item_id+\" extent #\"+i+\" data (alreadyRead: \"+extent.alreadyRead+\n\t\t\t\t\t\t\" offset: \"+(extent.offset+extent.alreadyRead - buffer.fileStart)+\" read size: \"+(extent.length - extent.alreadyRead)+\n\t\t\t\t\t\t\" full extent size: \"+extent.length+\" full item size: \"+item.size+\")\");\n\n\t\t\t\t\tDataStream.memcpy(item.data.buffer, item.alreadyRead, \n\t\t\t\t\t                  buffer, extent.offset+extent.alreadyRead - buffer.fileStart, extent.length - extent.alreadyRead);\n\n\t\t\t\t\t/* update the number of bytes used in this buffer and check if it needs to be removed */\n\t\t\t\t\tbuffer.usedBytes += extent.length - extent.alreadyRead;\n\t\t\t\t\tthis.stream.logBufferLevel();\n\n\t\t\t\t\titem.alreadyRead += (extent.length - extent.alreadyRead);\n\t\t\t\t\textent.alreadyRead = extent.length;\n\t\t\t\t} else {\n\t\t\t\t\t/* the sample does not end in this buffer */\n\n\t\t\t\t\tLog.debug(\"ISOFile\",\"Getting item #\"+item_id+\" extent #\"+i+\" partial data (alreadyRead: \"+extent.alreadyRead+\" offset: \"+\n\t\t\t\t\t\t(extent.offset+extent.alreadyRead - buffer.fileStart)+\" read size: \"+lengthAfterStart+\n\t\t\t\t\t\t\" full extent size: \"+extent.length+\" full item size: \"+item.size+\")\");\n\n\t\t\t\t\tDataStream.memcpy(item.data.buffer, item.alreadyRead, \n\t\t\t\t\t                  buffer, extent.offset+extent.alreadyRead - buffer.fileStart, lengthAfterStart);\n\t\t\t\t\textent.alreadyRead += lengthAfterStart;\n\t\t\t\t\titem.alreadyRead += lengthAfterStart;\n\n\t\t\t\t\t/* update the number of bytes used in this buffer and check if it needs to be removed */\n\t\t\t\t\tbuffer.usedBytes += lengthAfterStart;\n\t\t\t\t\tthis.stream.logBufferLevel();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\tif (item.alreadyRead === item.size) {\n\t\t/* fetched entirely */\n\t\treturn item;\n\t} else {\n\t\treturn null;\n\t}\n}\n\n/* Release the memory used to store the data of the item */\nISOFile.prototype.releaseItem = function(item_id) {\t\n\tvar item = this.items[item_id];\n\tif (item.data) {\n\t\tthis.itemsDataSize -= item.size;\n\t\titem.data = null;\n\t\titem.alreadyRead = 0;\n\t\tfor (var i = 0; i < item.extents.length; i++) {\n\t\t\tvar extent = item.extents[i];\n\t\t\textent.alreadyRead = 0;\n\t\t}\n\t\treturn item.size;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n\nISOFile.prototype.processItems = function(callback) {\n\tfor(var i in this.items) {\n\t\tvar item = this.items[i];\n\t\tthis.getItem(item.id);\n\t\tif (callback && !item.sent) {\n\t\t\tcallback(item);\n\t\t\titem.sent = true;\n\t\t\titem.data = null;\n\t\t}\n\t}\n}\n\nISOFile.prototype.hasItem = function(name) {\n\tfor(var i in this.items) {\n\t\tvar item = this.items[i];\n\t\tif (item.name === name) {\n\t\t\treturn item.id;\n\t\t}\n\t}\n\treturn -1;\n}\n\nISOFile.prototype.getMetaHandler = function() {\n\tif (!this.meta) {\n\t\treturn null;\n\t} else {\n\t\treturn this.meta.hdlr.handler;\t\t\n\t}\n}\n\nISOFile.prototype.getPrimaryItem = function() {\n\tif (!this.meta || !this.meta.pitm) {\n\t\treturn null;\n\t} else {\n\t\treturn this.getItem(this.meta.pitm.item_id);\n\t}\n}\n\nISOFile.prototype.itemToFragmentedTrackFile = function(_options) {\n\tvar options = _options || {};\n\tvar item = null;\n\tif (options.itemId) {\n\t\titem = this.getItem(options.itemId);\n\t} else {\n\t\titem = this.getPrimaryItem();\n\t}\n\tif (item == null) return null;\n\n\tvar file = new ISOFile();\n\tfile.discardMdatData = false;\n\t// assuming the track type is the same as the item type\n\tvar trackOptions = { type: item.type, description_boxes: item.properties.boxes};\n\tif (item.properties.ispe) {\n\t\ttrackOptions.width = item.properties.ispe.image_width;\n\t\ttrackOptions.height = item.properties.ispe.image_height;\n\t}\n\tvar trackId = file.addTrack(trackOptions);\n\tif (trackId) {\n\t\tfile.addSample(trackId, item.data);\n\t\treturn file;\n\t} else {\n\t\treturn null;\n\t}\n}\n\n// file:src/isofile-write.js\n/* Rewrite the entire file */\nISOFile.prototype.write = function(outstream) {\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tthis.boxes[i].write(outstream);\n\t}\n}\n\nISOFile.prototype.createFragment = function(track_id, sampleNumber, stream_) {\n\tvar trak = this.getTrackById(track_id);\n\tvar sample = this.getSample(trak, sampleNumber);\n\tif (sample == null) {\n\t\tthis.setNextSeekPositionFromSample(trak.samples[sampleNumber]);\n\t\treturn null;\n\t}\n\t\n\tvar stream = stream_ || new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\n\tvar moof = this.createSingleSampleMoof(sample);\n\tmoof.write(stream);\n\n\t/* adjusting the data_offset now that the moof size is known*/\n\tmoof.trafs[0].truns[0].data_offset = moof.size+8; //8 is mdat header\n\tLog.debug(\"MP4Box\", \"Adjusting data_offset with new value \"+moof.trafs[0].truns[0].data_offset);\n\tstream.adjustUint32(moof.trafs[0].truns[0].data_offset_position, moof.trafs[0].truns[0].data_offset);\n\t\t\n\tvar mdat = new BoxParser.mdatBox();\n\tmdat.data = sample.data;\n\tmdat.write(stream);\n\treturn stream;\n}\n\n/* Modify the file and create the initialization segment */\nISOFile.writeInitializationSegment = function(ftyp, moov, total_duration, sample_duration) {\n\tvar i;\n\tvar index;\n\tvar mehd;\n\tvar trex;\n\tvar box;\n\tLog.debug(\"ISOFile\", \"Generating initialization segment\");\n\n\tvar stream = new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\tftyp.write(stream);\n\t\n\t/* we can now create the new mvex box */\n\tvar mvex = moov.add(\"mvex\");\n\tif (total_duration) {\n\t\tmvex.add(\"mehd\").set(\"fragment_duration\", total_duration);\n\t}\n\tfor (i = 0; i < moov.traks.length; i++) {\n\t\tmvex.add(\"trex\").set(\"track_id\", moov.traks[i].tkhd.track_id)\n\t\t\t\t\t\t.set(\"default_sample_description_index\", 1)\n\t\t\t\t\t\t.set(\"default_sample_duration\", sample_duration)\n\t\t\t\t\t\t.set(\"default_sample_size\", 0)\n\t\t\t\t\t\t.set(\"default_sample_flags\", 1<<16)\n\t}\n\tmoov.write(stream);\n\n\treturn stream.buffer;\n\n}\n\nISOFile.prototype.save = function(name) {\n\tvar stream = new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\tthis.write(stream);\n\tstream.save(name);\t\n}\n\nISOFile.prototype.getBuffer = function() {\n\tvar stream = new DataStream();\n\tstream.endianness = DataStream.BIG_ENDIAN;\n\tthis.write(stream);\n\treturn stream.buffer;\n}\n\nISOFile.prototype.initializeSegmentation = function() {\n\tvar i;\n\tvar j;\n\tvar box;\n\tvar initSegs;\n\tvar trak;\n\tvar seg;\n\tif (this.onSegment === null) {\n\t\tLog.warn(\"MP4Box\", \"No segmentation callback set!\");\n\t}\n\tif (!this.isFragmentationInitialized) {\n\t\tthis.isFragmentationInitialized = true;\t\t\n\t\tthis.nextMoofNumber = 0;\n\t\tthis.resetTables();\n\t}\t\n\tinitSegs = [];\t\n\tfor (i = 0; i < this.fragmentedTracks.length; i++) {\n\t\tvar moov = new BoxParser.moovBox();\n\t\tmoov.mvhd = this.moov.mvhd;\n\t    moov.boxes.push(moov.mvhd);\n\t\ttrak = this.getTrackById(this.fragmentedTracks[i].id);\n\t\tmoov.boxes.push(trak);\n\t\tmoov.traks.push(trak);\n\t\tseg = {};\n\t\tseg.id = trak.tkhd.track_id;\n\t\tseg.user = this.fragmentedTracks[i].user;\n\t\tseg.buffer = ISOFile.writeInitializationSegment(this.ftyp, moov, (this.moov.mvex && this.moov.mvex.mehd ? this.moov.mvex.mehd.fragment_duration: undefined), (this.moov.traks[i].samples.length>0 ? this.moov.traks[i].samples[0].duration: 0));\n\t\tinitSegs.push(seg);\n\t}\n\treturn initSegs;\n}\n\n// file:src/box-print.js\n/* \n * Copyright (c) Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nBoxParser.Box.prototype.printHeader = function(output) {\n\tthis.size += 8;\n\tif (this.size > MAX_SIZE) {\n\t\tthis.size += 8;\n\t}\n\tif (this.type === \"uuid\") {\n\t\tthis.size += 16;\n\t}\n\toutput.log(output.indent+\"size:\"+this.size);\n\toutput.log(output.indent+\"type:\"+this.type);\n}\n\nBoxParser.FullBox.prototype.printHeader = function(output) {\n\tthis.size += 4;\n\tBoxParser.Box.prototype.printHeader.call(this, output);\n\toutput.log(output.indent+\"version:\"+this.version);\n\toutput.log(output.indent+\"flags:\"+this.flags);\n}\n\nBoxParser.Box.prototype.print = function(output) {\n\tthis.printHeader(output);\n}\n\nBoxParser.ContainerBox.prototype.print = function(output) {\n\tthis.printHeader(output);\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tif (this.boxes[i]) {\n\t\t\tvar prev_indent = output.indent;\n\t\t\toutput.indent += \" \";\n\t\t\tthis.boxes[i].print(output);\n\t\t\toutput.indent = prev_indent;\n\t\t}\n\t}\n}\n\nISOFile.prototype.print = function(output) {\n\toutput.indent = \"\";\n\tfor (var i=0; i<this.boxes.length; i++) {\n\t\tif (this.boxes[i]) {\n\t\t\tthis.boxes[i].print(output);\n\t\t}\n\t}\t\n}\n\nBoxParser.mvhdBox.prototype.print = function(output) {\n\tBoxParser.FullBox.prototype.printHeader.call(this, output);\n\toutput.log(output.indent+\"creation_time: \"+this.creation_time);\n\toutput.log(output.indent+\"modification_time: \"+this.modification_time);\n\toutput.log(output.indent+\"timescale: \"+this.timescale);\n\toutput.log(output.indent+\"duration: \"+this.duration);\n\toutput.log(output.indent+\"rate: \"+this.rate);\n\toutput.log(output.indent+\"volume: \"+(this.volume>>8));\n\toutput.log(output.indent+\"matrix: \"+this.matrix.join(\", \"));\n\toutput.log(output.indent+\"next_track_id: \"+this.next_track_id);\n}\n\nBoxParser.tkhdBox.prototype.print = function(output) {\n\tBoxParser.FullBox.prototype.printHeader.call(this, output);\n\toutput.log(output.indent+\"creation_time: \"+this.creation_time);\n\toutput.log(output.indent+\"modification_time: \"+this.modification_time);\n\toutput.log(output.indent+\"track_id: \"+this.track_id);\n\toutput.log(output.indent+\"duration: \"+this.duration);\n\toutput.log(output.indent+\"volume: \"+(this.volume>>8));\n\toutput.log(output.indent+\"matrix: \"+this.matrix.join(\", \"));\n\toutput.log(output.indent+\"layer: \"+this.layer);\n\toutput.log(output.indent+\"alternate_group: \"+this.alternate_group);\n\toutput.log(output.indent+\"width: \"+this.width);\n\toutput.log(output.indent+\"height: \"+this.height);\n}// file:src/mp4box.js\n/*\n * Copyright (c) 2012-2013. Telecom ParisTech/TSI/MM/GPAC Cyril Concolato\n * License: BSD-3-Clause (see LICENSE file)\n */\nvar MP4Box = {};\n\nMP4Box.createFile = function (_keepMdatData, _stream) {\n\t/* Boolean indicating if bytes containing media data should be kept in memory */\n\tvar keepMdatData = (_keepMdatData !== undefined ? _keepMdatData : true);\n\tvar file = new ISOFile(_stream);\n\tfile.discardMdatData = (keepMdatData ? false : true);\n\treturn file;\n}\n\nif (typeof exports !== 'undefined') {\n\texports.createFile = MP4Box.createFile;\n}\n"],
  "mappings": "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",
  "names": ["module", "i", "box", "ret", "str", "entry_count", "nalu_array", "j", "nalu", "strm"]
}
